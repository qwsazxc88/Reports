@model Reports.Presenters.UI.ViewModel.MissionOrderEditModel
@{
    Layout = "~/Views/Shared/_LayoutMissionOrder.cshtml";
    ViewBag.Title = "Редактирование приказа на командировку";
}
@using (Html.BeginForm())
{
    <div class="doc-wrap">
    <table style="width:100%">
        <tr>
            <td colspan="2">
                @Html.ValidationSummary(false)
                <div id="Error" style="color:Red;display:none;"></div>
                @*<div id="Success" style="color:Green;display:none;">Письмо успешно отправлено в биллинг.</div>*@
            </td>
        </tr>
        <tr>
            <td colspan="2">
                @Html.Partial("../UserInfoView", Model)
            </td>
        </tr>
        @if (Model.IsDeleted)
        { 
        <tr>
            <td colspan="2" style="color:Red">Приказ отклонен</td>
        </tr>
        }
        <tr>
            <td>
                @Html.LabelFor(m => m.BeginDate):
            </td>
            <td>
                @Html.DisplayFor(m => m.BeginDate)
            </td>
        </tr>
         <tr>
            <td>
                @Html.LabelFor(m => m.EndDate):
            </td>
            <td>
                @Html.DisplayFor(m => m.EndDate)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.GoalId):
            </td>
            <td>
                @Html.DropDownListFor(model => model.GoalId, new SelectList(Model.Goals, "ID", "Name"), Model.IsEditable ? null : (object)new { disabled = "disabled" }) 
                <input type="hidden" id="GoalIdHidden" name="GoalIdHidden" value="@Model.GoalIdHidden" />
            </td>
        </tr>
        <tr>
            <td>
                <input type="hidden" id="Id" name="Id" value="@Model.Id" />
                <input type="hidden" id="UserId" name="UserId" value="@Model.UserId" />
                <input type="hidden" id="Version" name="Version" value="@Model.Version" />
                <input type="hidden" id="IsSaveAvailable" name="IsSaveAvailable" value="@Model.IsSaveAvailable" />
                <input type="hidden" id="IsDeleteAvailable" name="IsDeleteAvailable" value="@Model.IsDeleteAvailable" />
                <input type="hidden" id="IsDelete" name="IsDelete" value="@Model.IsDelete" />
                <input type="hidden" id="IsEditable" name="IsEditable" value="@Model.IsEditable" />
                @*<input type="hidden" id="IsTimesheetStatusEditable" name="IsTimesheetStatusEditable" value="@Model.IsTimesheetStatusEditable" />




























        <tr>
            <td colspan="2" style="font-weight:bold">
               Место назначения &nbsp;<input type="button" value="Добавить" name="AddTargetBtn" onclick="addTarget();"/>
            </td>
        </tr>
        <tr>
            <td colspan="2">
               <input type="hidden" id="Targets" name="Targets" value="@Model.Targets" />
                <table id="targetsTable"></table>
            </td>
        </tr>


                <input type="hidden" id="IsReasonEditable" name="IsReasonEditable" value="@Model.IsReasonEditable" />
                <input type="hidden" id="TimesheetStatusIdHidden" name="TimesheetStatusIdHidden" value="@Model.TimesheetStatusIdHidden" />
                <input type="hidden" id="TypeIdHidden" name="TypeIdHidden" value="@Model.TypeIdHidden" />
                <input type="hidden" id="DaysCountHidden" name="DaysCountHidden" value="@Model.DaysCountHidden" />*@
                @Html.LabelFor(m => m.TypeId):
            </td>
            <td>
                @Html.DropDownListFor(model => model.TypeId, new SelectList(Model.Types, "ID", "Name"), Model.IsEditable ? null : (object)new { disabled = "disabled" }) 
                <input type="hidden" id="TypeIdHidden" name="TypeIdHidden" value="@Model.TypeIdHidden" />
            </td>
        </tr>
         <tr>
            <td>
                @Html.LabelFor(m => m.Grade):
            </td>
            <td>
                @Html.DisplayFor(m => m.Grade)
            </td>
        </tr>
    </table>
    </div>
    <br />
    <div class="comment-wrap">
    <table style="width:100%">
         <tr>
            <td colspan="2">
                <div id="CommentModelContext">@Html.Partial("RequestCommentPartial", Model.CommentsModel)</div>
            </td>
        </tr>
    </table>
    </div>
    <script type="template/html" id="targetTemplate">
                    <table id="targetsTable">
                            <tbody>
                                {{#List}}
                                <tr>
                                    <td>
                                        Страна
                                    </td>
                                    <td>
                                        {{Country}} &nbsp;
                                        <input type="button" value="Изменить" name="ChangeTargetBtn" onclick="editTarget({{TargetId}});"/>
                                        <input type="button" value="Удалить" name="DeleteTargetBtn" onclick="deleteTarget({{TargetId}});"/>
                                    </td>
                                </tr>    
                               <tr>
                                    <td>
                                        Город
                                    </td>
                                    <td>
                                        {{City}}
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Организация
                                    </td>
                                    <td>
                                        {{Organization}}
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Дата начала {{DateFrom}}
                                    </td>
                                     <td>
                                        Дата окончания {{DateTo}} 
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Всего календарных дней
                                    </td>
                                    <td>
                                        {{AllDaysCount}}
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Дней, не считая время в пути
                                    </td>
                                    <td>
                                        {{TargetDaysCount}}
                                    </td>
                                </tr>
                                 <tr>
                                    <td>
                                        Суточные
                                    </td>
                                    <td>
                                        {{DailyAllowanceName}}
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Проживание
                                    </td>
                                    <td>
                                        {{ResidenceName}}
                                    </td>
                                </tr>
                                 <tr>
                                    <td>
                                        Авиа билеты
                                    </td>
                                    <td>
                                        {{AirTicketTypeName}}
                                    </td>
                                </tr>
                                 <tr>
                                    <td>
                                       Железнодорожные билеты
                                    </td>
                                    <td>
                                        {{TrainTicketTypeName}}
                                    </td>
                                </tr>
                                 <tr>
                                    <td colspan="2">
                                       <hr style="margin-bottom:20px;margin-top:20px;background-color:Gray;height:1px;border:none;">
                                    </td>
                                </tr>
                               {{/List}}
                        </tbody>
                    </table>
    </script>
    <script type="text/javascript">
        var  actionEditTargetDialogUrl = "@Url.Action("EditTargetDialog", "MissionOrder")";
        $(document).ready(function () {
            /*$("#BeginDate").datepicker();
            $("#EndDate").datepicker();
            $(".hasDatepicker").width("75px");
            $("#DaysCount").width("50px");*/
            setActiveMenuItem("moAllOrders");
            var targets = JSON.parse($("#Targets").val());
            renderTargetsTable(targets);
        });
        /*function ValidateForm() {
            return true;
        }
        function SetApprovedForAllAndValidateForm() {
            SetApprovedAndValidateForm();
            $("#IsApprovedForAll").val('true');
            return true;
        }
        function SetApprovedAndValidateForm() {
            $("#IsApproved").val('true');
            return true;
        }
        function Delete() {
            $("#IsDelete").val("true");
            return true;
        }*/

        function renderTargetsTable(targets) {
            var template = $("#targetTemplate").html();
            var html = Mustache.render(template, targets);
            $("#targetsTable").html(html);
            /*if ($("#IsReadOnly").val() == 'True') {
                $(".deleteLink").hide();
            }*/
        }
        function deleteTarget(targetId) {
            var targets = JSON.parse($("#Targets").val());
            targets.List = jQuery.grep(targets.List, function (value, i) {
                return value.TargetId != targetId;
            });
            renderTargetsTable(targets);
            $("#Targets").val(JSON.stringify(targets));
        }
        function addTarget()
        {
            createTargetDialog(actionEditTargetDialogUrl,"id=0");
        }

        function disableSaveButton() {
            $(".ui-dialog-buttonpane button:contains('Сохранить')").button("disable");
        }

        function createTargetDialog(url,params) {
            var elem = document.createElement('div');
            elem.id = "divTargetDialog";
            var newDiv = $(elem);
            var title = "Редактирование места назначения";
            $(newDiv).text('Подождите, идет загрузка данных ...');
            $(newDiv).load(url + "?"+ params+ " #targetDialogTable"
             , function (response, status, xhr) {
                 if (status == "error") {
                     var msg = "Произошла ошибка: ";
                     $(newDiv).html("<div style='color:Red'>" + msg + xhr.status + " " + xhr.statusText + "</div>");
                 } else if (status == "success") {
                     if ($('#EditTargetDilaogTableLoadError').val() != undefined)
                         disableSaveButton();
                     else
                     {
                        $("#BeginDate").datepicker();
                        $("#EndDate").datepicker();
                        $(".hasDatepicker").width("85px"); 
                        $("#RealDays").width("85px"); 
                        $("#AllDays").width("85px"); 
                        $("#BeginDate").change(function(){getDateDiff();});
                        $("#EndDate").change(function(){getDateDiff();});
                     }
                 }
             }
            );
            $(newDiv).dialog(
            {
                // initialize dialog box
                autoOpen: true,
                modal: true,
                title: title,
                width: 830,
                height: 480,
                // fix IE6  
                bgiframe: true,
                open: function (event, ui) {
                    $("#BeginDate").datepicker();
                    $("#EndDate").datepicker();
                    $(".hasDatepicker").width("75px"); 
                },
                close: function (event, ui) {
                    $(this).dialog("destroy").remove();
                },
                buttons:
                {
                    "Сохранить": function () {
                        if(!validateTarget())
                            return;
                        addObject();
                        $(this).dialog("close");
                    },
                    "Отмена": function () {
                        $(this).dialog("close");
                    }
                }
            });
        }
        function validateTarget()
        {
            clearEditTargetErrors($("#targetDialogTable"));
            var result = true;
            var beginDate = undefined;
            var endDate = undefined;
            result = validate_FieldIsNotEmptyAddError($("#BeginDate"));
            if (result) {
                try {
                    beginDate = $.datepicker.parseDate("dd.mm.yy",$('#BeginDate').val());
                }
                catch (error) {
                    addEditTargetError($("#BeginDate"), "Неправильная дата");
                    result = false;
                }
            }
            var result1 = validate_FieldIsNotEmptyAddError($("#EndDate"));
            if (result1) {
                try {
                    endDate = $.datepicker.parseDate("dd.mm.yy", $('#EndDate').val());
                }
                catch (error) {
                    addEditTargetError($("#EndDate"), "Неправильная дата");
                    result = false;
                }
            }
            else
                result = false;
            if ((beginDate != undefined) && (endDate != undefined) && (beginDate > endDate)) {
                addEditTargetError($("#BeginDate"), "Дата начала не может превышать дату окончания");
                result = false;
            }
            if(!validate_FieldIsNotEmptyAddError($("#City")))
                result = false;
            if(!validate_FieldIsNotEmptyAddError($("#Organization")))
                result = false;
            if(!validate_FieldIsNotEmptyAddError($("#RealDays")))
                result = false;
            else
            {
                var days = parseInt($("#RealDays").val(), 10);
                if (isNaN(days) || (days < 0)) {
                    addEditTargetError($("#RealDays"),"Поле должно быть целым неотрицательным числом");
                    result = false;
                }
            }
            
            return result;
        }
        function clearEditTargetErrors(form) {
            form.find(":input").removeClass("input-validation-error");
            form.find(".error").remove();
        }
        function addEditTargetError(el, value) {
            el.addClass("input-validation-error");
            var msg = value.toString();
            $("<span/>").addClass("error field-validation-error").text(msg).appendTo(el.parent());
            if (value.length > 20) $("<span/>").parent().css("width", 500);
        }
        function validate_FieldIsNotEmptyAddError(control) {
            return validate_FieldIsNotEmpty(control, true);
        }
        function validate_FieldIsNotEmpty(control, addErrorToForm) {
            if (control.val() != '')
                return true;
            if (addErrorToForm) {
                addEditTargetError(control, "Обязательное поле");
            }
            return false;
        }
        function getDateDiff()
        {
            var beginDate = undefined;
            var endDate = undefined;
            if(($("#BeginDate").val() != '') && ($("#EndDate").val() != ''))
            {
                try {
                    beginDate = $.datepicker.parseDate("dd.mm.yy",$('#BeginDate').val());
                    endDate = $.datepicker.parseDate("dd.mm.yy", $('#EndDate').val());
                }
                catch (error) {
                   
                }
                if ((beginDate != undefined) && (endDate != undefined)) {
                    $("#AllDays").val((endDate - beginDate)/(3600*24*1000));
                    return;
                }
            }
            $("#AllDays").val("");
        }
    </script>
    <script src="@Url.Content("~/Scripts/mustache.js")" type="text/javascript"></script>
}