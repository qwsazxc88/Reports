@model Reports.Presenters.UI.ViewModel.SurchargeNoteEditModel
@using Reports.Core
@using Reports.Presenters.Services.Impl
@using Reports.Presenters.UI.Bl.Impl;

@{
    Layout = "~/Views/Shared/_LayoutSurchargeNote.cshtml";
    ViewBag.Title = "Начисления";
    var dto = UserDto.Deserialize(((FormsIdentity)(HttpContext.Current.User.Identity)).Ticket.UserData);
    
}
<form action="/SurchargeNote/SurchargeNoteEdit" method="post" enctype = "multipart/form-data"> 
    @Html.HiddenFor(m => m.NoteType)
    @Html.HiddenFor(m => m.CreatorId)
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.IsDelete)
    <div class="doc-wrap">
    <table style="width:100%">
    <tr>
        <td colspan="2">
            @Html.ValidationSummary(false)
            <div id="Error" style="color:Red;display:none;"></div>
        </td>
    </tr>
    
   <tr>
       <td>Дата создания документа:</td>
       <td>@Html.DisplayFor(m => m.CreateDate)</td>
   </tr>
   <tr>
       <td>Номер документа:</td>
       <td>@Html.DisplayFor(m => m.Number)</td>
   </tr>
   <tr>
       <td>ФИО Руководителя:</td>
       <td>@Html.DisplayFor(m => m.CreatorName)</td>
   </tr>
   <tr>
       <td>Должность:</td>
       <td>@Html.DisplayFor(m => m.Position)</td>
   </tr>
   <tr>
       <td>Подразделение:</td>
       <td>@Html.DisplayFor(m => m.CreatorDepartment)</td>
   </tr>
   <tr>
    <td>Вышестоящие руководители:</td>
    <td>@Model.Chiefs</td>
   </tr>
   <tr>
    <td>Сотрудники отдела кадров:</td>
    <td>@Model.Personnels</td>
   </tr>
   <tr>
                <td>
                    Подразделение 7 уровня:
                </td>
                <td>
                    <label id="DepartmentNameLabel">@Model.DepartmentName</label>
                    <input type="hidden" id="DepartmentName" name="DepartmentName" value="@Model.DepartmentName" />
                    <input type="hidden" id="DepartmentId" name="DepartmentId" value="@Model.DepartmentId" />
                    <input type="hidden" id="DepartmentRequiredLevel" name="DepartmentRequiredLevel" value="@Model.DepartmentRequiredLevel" />
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    @if (Model.CreatorId == dto.Id && Model.IsEditable)
                    {
                        <input type="button" id="SelectDepartmentBtn" value="Выбрать" onclick="changeDepartment();"/>
                    }            
                </td>
            </tr>
   <tr>
       <td>Оплачиваемый день:</td>
       <td>@Html.EditorFor(m => m.PayDay, (Model.CreatorId == dto.Id && Model.IsEditable) ? null : new { disabled = "disabled" })</td>
   </tr>
   
    <tr>
         <td>
            <label>Файл:</label>
         </td>
         <td>
         @if (Model.AttachmentId > 0)
         {
             @Html.ActionLink(Model.AttachmentName, "ViewAttachment", (object)new { Id = Model.AttachmentId }, null);
         }
         @if (Model.IsEditable && dto.Id == Model.CreatorId)
         {
             <input type="file" name="File"/>
             @Html.ValidationMessageFor(m => m.File)
         }
         
         </td>
    </tr>
    @*<tr>
        <td>
           Сотрудник:
        </td>
        <td>
            @Html.DropDownListFor(m => m.UserId, new SelectList(Model.Users, "Id", "Name"), Model.IsEditable ? null : new { diasebled = "disabled" }) 
         </td>
    </tr>*@
    @if (Model.Id > 0)
    {
        <tr>
        <td>
        Сотрудник УКДиУ:
        </td>
        <td>
        @if (dto.UserRole == UserRole.PersonnelManagerBank )
        {     @Html.CheckBoxFor(m => m.PersonnelManagerBankAccept)      } 
        &nbsp;@Model.PersonnelManagerBankDateAccept &nbsp; @Model.PersonnelManagerBankName
        </td>
        </tr>
        <tr>
        <td>
        Сотрудник отдела кадров:
        </td>
        <td>
        @if (Model.PersonnelManagerBankAccept && dto.UserRole == UserRole.PersonnelManager && dto.Id != 10 && Model.PersonnelsApproved.Any(x => x.Id == dto.Id))
        {     @Html.CheckBoxFor(m => m.PersonnelAccept)      } 
        &nbsp;@Model.PersonnelDateAccept &nbsp; @Model.PersonnelName
        </td>
        </tr>
        <tr>
        <td>
        Сотрудник расчетного отдела:
        </td>
        <td>
        @if (dto.Id == 10 && Model.PersonnelAccept)
        {      @Html.CheckBoxFor(m => m.CountantAccept) } 
        &nbsp;  @Model.CountantDateAccept &nbsp; @Model.CountantName
        </td>
        </tr>
    }
    <tr>
    @if (!Model.IsDelete && 
        (dto.UserRole == UserRole.PersonnelManagerBank 
        || (dto.UserRole == UserRole.PersonnelManager && Model.PersonnelsApproved.Any(x => x.Id == dto.Id)) 
        || dto.Id == 10 
        || (dto.Id == Model.CreatorId && !Model.PersonnelDateAccept.HasValue && !Model.CountantDateAccept.HasValue)))
    {<td><button >Сохранить</button></td>}
    </tr>
    <tr>
    <td>@if (!Model.IsDelete && (dto.UserRole == UserRole.PersonnelManager || dto.Id == 10))
        {
            <input type="submit" onclick="$('#IsDelete').val('true');" value="Отклонить заявку" />
        }
    </td>
    </tr>
    </table>
    </div>
</form>
<script src="@Url.Content("~/Scripts/jquery.maskedinput-1.2.2.js")" type="text/javascript"></script>
    <script type="text/javascript">
        var actionDepUrl = "@Url.Action("GetChildren", "Home")";
        var actionDepDialogUrl = "@Url.Action("DepartmentDialog", "Home")";
   
        $(document).ready(function () {
        var menuitem="moSurchargeNoteList"+"@Model.NoteType";
            $('#PayDay').mask('99.99.9999');
            setActiveMenuItem(menuitem);
            $("#PayDay").datepicker({changeMonth: true, changeYear: true});
        });
    </script>



