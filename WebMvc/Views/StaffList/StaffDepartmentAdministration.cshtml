@model Reports.Presenters.UI.ViewModel.StaffList.StaffDepartmentAdministrationModel
@{
    ViewBag.Title = "Справочник управлений";
}

@using (Html.BeginForm("StaffDepartmentAdministration", "StaffList", FormMethod.Post, new { enctype = "multipart/form-data", id = "StaffDepartmentAdministrationForm", target = "tab3" }))
{
    <label id="aMessageStr" style="color:Red;font-size:medium;"></label>
    <br /><br />
    <div style="border:solid 1px black; padding:10px; background-color:#FAFAFA;">
        <table id="tblAdministration" class="grid">
            <thead>
                <tr>
                    <th colspan="4">Финград</th>
                    <th rowspan="2">Название управления в СКД</th>
                    <th rowspan="2" colspan="2"><button type="button" title="Создать новую запись" onclick="AddEditAdministrationRow(-1);">Создать</button></th>
                    @*<th rowspan="2" class="tdBtn"></th>*@
                </tr>    
                <tr>
                    <th>Название управления</th>
                    <th>Код управления</th>
                    <th>Дирекция</th>
                    <th>Филиал</th>
                </tr>
                <tr>
                    <td colspan="7">
                        <div id="AFilterDiv">
                            <h3>Фильтры:</h3>
                            <div>
                                @Html.LabelFor(m => m.ManagementFilterId)
                                @Html.DropDownListFor(m => m.ManagementFilterId, new SelectList(Model.Managements, "mId", "mName"), (object)new { onchange = "SetAFilter();" })
                                @Html.HiddenFor(m => m.ManagementFilterId)
                                <br /><br />
                                @Html.LabelFor(m => m.BranchFilterId)
                                @Html.DropDownListFor(m => m.BranchFilterId, new SelectList(Model.Branches, "Id", "Name"), (object)new { onchange = "SetAFilter();" })
                                @Html.HiddenFor(m => m.BranchFilterId)
                                
                                <button id="btnAClearFilter" type="button" title="Сбросить параметры поиска" style="float:right;">Сброс</button>
                            </div>
                        </div>
                    </td>
                </tr>
            </thead>
            
            <tbody class="tblAdministrationRows">
                @{ int i = 1; }

                @foreach (var item in Model.Administrations)
                {
                    <tr class="tblAdministrationRow">
                        <td>
                            @Html.HiddenFor(m => m.Administrations[i - 1].aId)
                            @Html.HiddenFor(m => m.Administrations[i - 1].aName)
                            @Html.DisplayFor(m => m.Administrations[i - 1].aName)
                        </td>
                        <td>
                            @Html.HiddenFor(m => m.Administrations[i - 1].aCode)
                            @Html.DisplayFor(m => m.Administrations[i - 1].aCode)
                        </td>
                        <td>
                            @Html.DisplayFor(m => m.Administrations[i - 1].ManagementName)
                            @Html.HiddenFor(m => m.Administrations[i - 1].ManagementId)
                        </td>
                        <td>@Html.DisplayFor(m => m.Administrations[i - 1].BranchName)</td>
                        <td>
                            @Html.DisplayFor(m => m.Administrations[i - 1].DepName)
                            @Html.HiddenFor(m => m.Administrations[i - 1].aDepartmentId)
                        </td>
                        <td class="tdBtn">
                            <a class="CallModal" onclick="AddEditAdministrationRow(@i-1);" href="#" >Изменить</a>
                        </td>
                        <td class="tdBtn">
                            <a onclick="DeleteAdministrationRow(@item.aId);" href="#" >Удалить</a>
                        </td>
                        @{ i++; }
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<div id="AddEditAdministrationDialog" style="display:none;">
    @using (Html.BeginForm("StaffDepartmentAdministrationDialog", "StaffList", FormMethod.Post))
    {
        <label id="aMsg" style="color:Red;font-size:medium;"></label>
        <table>
            <tr>
                @Html.HiddenFor(m => m.aId)
                <td>@Html.LabelFor(m => m.aName)</td>
                <td>@Html.TextBoxFor(m => m.aName, new { style = "width:500px", maxlength = "150" }) </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.aCode)</td>
                <td>@Html.TextBoxFor(m => m.aCode, new { style = "width:60px", maxlength = "7" }) </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ManagementId)</td>
                <td>@Html.DropDownListFor(m => m.ManagementId, new SelectList(Model.Managements, "mId", "mName"))</td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.aDepartmentId)</td>
                <td>@Html.DropDownListFor(m => m.aDepartmentId, new SelectList(Model.FourLevelDeps, "Id", "Name"))</td>
            </tr>
        </table>
    }
        
</div>

<script type="text/javascript">
    $(document).ready(function () {
        setActiveMenuItem("moDepEncoding");

        $.ajaxSetup({ cache: false });
        
        $(document).tooltip({ track: false });

        $(":button").button();

        $(".CallModal").click(function(e){e.preventDefault(); return false;});//чтобы при вызове модального окна не скроллилась страница вверх

        $("#AFilterDiv").accordion({
            header: "h3",
            active: false,
            collapsible: true,
            autoHeight: false,
            heightStyle: "content"
        });

        $("#btnAClearFilter").click(function(){
            $("#ManagementFilterId").val(0);
            $("#BranchFilterId").val(0);

            SetAFilter();
        });
    });

    //вкл/выкл режима редактирования
    function AddEditAdministrationRow(IndexRow) {
        if(IndexRow >= 0){
            $("#aId").val($("#Administrations_" + IndexRow + "__aId").val());
            $("#aName").val($("#Administrations_" + IndexRow + "__aName").val());
            $("#aCode").val($("#Administrations_" + IndexRow + "__aCode").val());
            $("#ManagementId").val($("#Administrations_" + IndexRow + "__ManagementId").val());
            $("#aDepartmentId").val($("#Administrations_" + IndexRow + "__aDepartmentId").val());
        }
        else{
            $("#aId").val(0);
            $("#aName").val("");
            $("#aCode").val("");
            $("#ManagementId").val(0);
            $("#aDepartmentId").val(0);
        }

        $("#aMsg").text("");
        $("#aMessageStr").text("");

        CreateAdministrationEdtRowDialog(IndexRow >= 0 ? true : false);
    }


    function CreateAdministrationEdtRowDialog(flgEdit) {
        var Title = (flgEdit ? "Редактирование строки" : "Создание новой строки");
        $('#AddEditAdministrationDialog').dialog(
        {
            autoOpen: false,
            modal: true,
            title: Title,
            width: "auto",
            draggable: false,
            resizable: false,
            //position: "center",
            buttons:
            {
                "OK": function () {
                    processAddEditAdministrationRow();
                    //$(this).dialog("close");
                },
                "Отмена": function () {
                    $(this).dialog("close");
                }
            }
        });

        $(".ui-dialog-titlebar").show();
        $(".ui-dialog-titlebar-close").show();

        $('#AddEditAdministrationDialog').dialog("open");
    }

    function processAddEditAdministrationRow()
    {
    
        var url = "@Url.Action("AddEditStaffDepartmentAdministration", "StaffList")";
        url += "?ManagementFilterId=" + $("#ManagementFilterId").val() + "&BranchFilterId="+ $("#BranchFilterId").val();
        var dataToSend = $("#AddEditAdministrationDialog form").serialize();
        ShowFlash(true);    //это диалоговое окно находится на родительской странице
        $.post(url, dataToSend, function(data){
            if (data.ok == true){
                $('#AddEditAdministrationDialog').dialog("close");
                $("#aMessageStr").text(data.msg);
                var $table = $("#tblAdministration");
                var $rows = $("#tblAdministration .tblAdministrationRow");
                $rows.remove();
                FillAdministrationTableData(data);
                
                ShowFlash(false);
            }
            else{
                ShowFlash(false);
                $("#aMsg").text(data.msg);
            }
        }, "json")
        .fail(function(data){
            ShowFlash(false);
            $('#AddEditAdministrationDialog').dialog("close");
            $("#aMessageStr").text("У вас нет прав для выполнения данной операции!");
        });
    };

    function DeleteAdministrationRow(Id){
        var result = confirm("Подтвердите удаление выбранной записи!");
        if (!result) {return;}

        var actionUrl="@Url.Action("DeleteStaffDepartmentAdministration", "StaffList")";
        var url = actionUrl + "?Id=" + Id;
        ShowFlash(true);
        var dataToSend = $("#StaffDepartmentAdministrationForm").serialize();
            $.post(url, dataToSend, function(data){
                if (data.ok == true){
                    $("#aMessageStr").text(data.msg);
                    var $table = $("#tblAdministration");
                    var $rows = $("#tblAdministration .tblAdministrationRow");
                    $rows.remove();
                    FillAdministrationTableData(data);
                    ShowFlash(false);
                }
                else{
                    ShowFlash(false);
                    $("#aMessageStr").text(data.msg);
                    alert(data.msg);
                }
            }, "json")
            .fail(function(data){
                ShowFlash(false);
                $("#aMessageStr").text("У вас нет прав для выполнения данной операции!");
            });
    }

    function SetAFilter(){
        var actionUrl="@Url.Action("StaffDepartmentAdministration", "StaffList")";
        var url = actionUrl + "?ManagementFilterId=" + $("#ManagementFilterId").val() + "&BranchFilterId="+ $("#BranchFilterId").val();
        ShowFlash(true);
        var dataToSend = $("#StaffDepartmentAdministrationForm").serialize();
            $.post(url, dataToSend, function(data){
                if (data.ok == true){
                    $("#aMessageStr").text(data.msg);
                    var $table = $("#tblAdministration");
                    var $rows = $("#tblAdministration .tblAdministrationRow");
                    $rows.remove();
                    FillAdministrationTableData(data);
                    ShowFlash(false);
                }
                else{
                    ShowFlash(false);
                    $("#aMessageStr").text(data.msg);
                    alert(data.msg);
                }
            }, "json")
            .fail(function(data){
                ShowFlash(false);
                $("#aMessageStr").text("У вас нет прав для выполнения данной операции!");
            });
    }

    function FillAdministrationTableData(data){
        for (var i = 0; i < data.Administrations.length; i++)
        {
            $("#tblAdministration").append(
                
                "<tr class=\"tblAdministrationRow\">" +
                    "<td><input id='Administrations_" + i + "__aId' name='Administrations[" + i + "].aId' value='" + data.Administrations[i].aId + "' type='hidden'>" +
                        "<input id='Administrations_" + i + "__aName' name='Administrations[" + i + "].aName' value='" + data.Administrations[i].aName + "' type='hidden'>" + (data.Administrations[i].aName ? data.Administrations[i].aName : "") + "</td>" +
                    "<td><input id='Administrations_" + i + "__aCode' name='Administrations[" + i + "].aCode' value='" + data.Administrations[i].aCode + "' type='hidden'>" + (data.Administrations[i].aCode ? data.Administrations[i].aCode : "") + "</td>" +
                    "<td><input id='Administrations_" + i + "__ManagementId' name='Administrations[" + i + "].ManagementId' value='" + data.Administrations[i].ManagementId + "' type='hidden'>" + (data.Administrations[i].ManagementName ? data.Administrations[i].ManagementName : "") + "</td>" +
                    "<td>" + (data.Administrations[i].BranchName ? data.Administrations[i].BranchName : "") + "</td>" +
                    "<td><input id='Administrations_" + i + "__aDepartmentId' name='Administrations[" + i + "].aDepartmentId' value='" + data.Administrations[i].aDepartmentId + "' type='hidden'>" + (data.Administrations[i].DepName ? data.Administrations[i].DepName : "") + "</td>" +
                    "<td class='tdBtn'><a id='AddEdit" + i + "' onclick='AddEditAdministrationRow(" + i + ");' href='#' >Изменить</a></td>" + 
                    "<td class='tdBtn'><a onclick='DeleteAdministrationRow(" + data.Administrations[i].aId + ");' href='#' >Удалить</a></td>" +
                "</tr>"
            );
            
            $("#AddEdit" + i).addClass("CallModal");
            $("#AddEdit" + i).click(function(e){ e.preventDefault(); })
        }
    }

</script>

