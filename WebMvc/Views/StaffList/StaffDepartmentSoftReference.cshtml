@model Reports.Presenters.UI.ViewModel.StaffList.StaffDepartmentSoftReferenceModel
@{
    if (!Model.IsModal)
    {
        Layout = "~/Views/Shared/_LayoutStaffList.cshtml";
        ViewBag.Title = "Справочник ПО";        
    }

}


@using (Html.BeginForm("StaffDepartmentSoftReference", "StaffList", FormMethod.Post, new { enctype = "multipart/form-data", id = "StaffDepartmentSoftReferenceForm", target = "divSoftReferenceDialog" }))
{
    <h3>@Html.ValidationMessageFor(m => m.MessageStr)</h3>
    @Html.HiddenFor(m => m.SwitchOperation)
    @Html.HiddenFor(m => m.TabIndex)
    @Html.HiddenFor(m => m.SoftId)
    @Html.HiddenFor(m => m.GroupId)
    @Html.HiddenFor(m => m.IsError)
    @Html.HiddenFor(m => m.IsModal)

    <div id="tabs">
        <ul>
            <li><a href="#tabs1">Группы ПО</a></li>
            <li><a href="#tabs2">Связи ПО с группами</a></li>
            <li><a href="#tabs3">ПО</a></li>
        </ul>

        <div id="tabs1">
            @Html.LabelFor(m => m.SoftGroupName)
            @Html.TextBoxFor(m => m.SoftGroupName, (object)new { style = "width:300px" })
            @Html.ValidationMessageFor(m => m.SoftGroupName)
            <button type="button" id="btnNewGroup" title="Записать запись в справочник">Сохранить</button>

            <table class="grid">
                <tr>
                    <th>Название</th>
                    <th class="tdBtn"></th>
                </tr>
                <tbody>
                    @{string btnEditName = "";}
                    @{string btnSaveName = "";}
                    @{string btnCancelName = "";}
                    @{string LabelName = "";}

                    @{ int i = 1; }
                    @foreach (var group in Model.GroupList)
                    {
                        <tr>
                            <td>
                                @Html.HiddenFor(m => m.GroupList[i - 1].Id)
                                @Html.TextBoxFor(m => m.GroupList[i - 1].Name, (object)new { style = "display:none;width:99%" })
                                @Html.HiddenFor(m => m.GroupList[i - 1].OldName)
                                @Html.ValidationMessageFor(m => m.GroupList[i - 1].Name)

                                @{LabelName = "lblGroup" + @i.ToString();}

                                <label id=@LabelName>@group.Name</label>
                            </td>
                            <td class="tdBtn">
                                @{btnEditName = "EditGroup" + @group.Id.ToString();}
                                @{btnSaveName = "SaveGroup" + @i.ToString();}
                                @{btnCancelName = "CancelEditGroup" + @i.ToString();}
                                

                                <a id=@btnEditName href="#" onclick="EditRow(@i-1, 1, 1);">Изменить</a>
                                <a id=@btnSaveName href="#" onclick="EditRow(@i-1, 2, 1);" style="display:none;">Сохранить</a>
                                <a id=@btnCancelName href="#" onclick="EditRow(@i-1, 3, 1);" style="display:none;">Отменить</a>
                            </td>
                            @{i++;}
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div id="tabs2">
            @Html.LabelFor(m => m.SoftGroupId)
            @Html.DropDownListFor(model => model.SoftGroupId, new SelectList(Model.GroupList, "ID", "Name")) 
            @Html.HiddenFor(m => m.SoftGroupId)
            <br /><br />
            <table class="grid">
                <tr>
                    <th>ПО</th>
                    <th>Использовать</th>
                </tr>
                <tbody>
                    @{ i = 1; }
                    @foreach (var link in Model.SoftGroupLink)
                    {
                        <tr>
                            <td>
                                @Html.HiddenFor(m => m.SoftGroupLink[i - 1].Id)
                                @Html.HiddenFor(m => m.SoftGroupLink[i - 1].SoftId)
                                @Html.DisplayTextFor(m => m.SoftGroupLink[i - 1].Name)
                                @Html.HiddenFor(m => m.SoftGroupLink[i - 1].Name)
                            </td>
                            <td align="center" style="text-align:center;">
                                @Html.CheckBoxFor(m => m.SoftGroupLink[i - 1].IsUsed)
                            </td>
                            @{i++;}
                        </tr>
                    }
                </tbody>
            </table>
            <br />
            <button type="button" id="btnSaveLink" title="Сохранить изменения">Сохранить</button>
        </div>

        <div id="tabs3">
            @Html.LabelFor(m => m.SoftName)
            @Html.TextBoxFor(m => m.SoftName, (object)new { style = "width:300px" })
            @Html.ValidationMessageFor(m => m.SoftName)
            <button type="button" id="btnNewSoft" title="Записать запись в справочник">Сохранить</button>
            <br /><br />
            <table class="grid">
                <thead>
                    <tr>
                        <th>Название</th>
                        <th class="tdBtn"></th>
                    </tr>
                </thead>
                
                    @{ i = 1; }
                    @foreach (var soft in Model.SoftList)
                    {
                        <tr>
                            <td>
                                @Html.HiddenFor(m => m.SoftList[i - 1].Id)
                                @Html.TextBoxFor(m => m.SoftList[i - 1].Name, (object)new { style = "display:none;width:99%" })
                                @Html.HiddenFor(m => m.SoftList[i - 1].OldName)

                                @Html.ValidationMessageFor(m => m.SoftList[i - 1].Name)

                                @{LabelName = "lblSoft" + @i.ToString();}

                                <label id=@LabelName>@soft.Name</label>
                                
                            </td>
                            <td class="tdBtn">
                                @{btnEditName = "EditSoft" + @soft.Id.ToString();}
                                @{btnSaveName = "SaveSoft" + @i.ToString();}
                                @{btnCancelName = "CancelEditSoft" + @i.ToString();}
                                

                                <a id=@btnEditName href="#" onclick="EditRow(@i-1, 1, 2);">Изменить</a>
                                <a id=@btnSaveName href="#" onclick="EditRow(@i-1, 2, 2);" style="display:none;">Сохранить</a>
                                <a id=@btnCancelName href="#" onclick="EditRow(@i-1, 3, 2);" style="display:none;">Отменить</a>
                            </td>
                            @{i++;}
                        </tr>
                    }
                
            </table>
        </div>
    </div>
    
}

@*
<link href="@Url.Content("~/Content/themes/base/jquery-ui-1.10.4.custom.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.10.2.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui-1.10.4.custom.min.js")" type="text/javascript"></script>
 *@   
<script type="text/javascript">
    $(document).ready(function () {
        if ($("#IsModal").val() == "False") {
            setActiveMenuItem("moSoftReference");
        }

        $.ajaxSetup({ cache: false });
        $('#tabs').tabs({ active: $("#TabIndex").val() });
        $(document).tooltip({ track: true });
        $(":button").button();

        $("#btnNewGroup").click(function () {
            $("#SwitchOperation").val(1);
            $("#TabIndex").val(0);
            if ($("#IsModal").val() == "False") {
                $("#StaffDepartmentSoftReferenceForm").submit();
            }
            else {
                AjaxFormRequest('divSoftReferenceDialog', 'StaffDepartmentSoftReferenceForm', '/StaffList/StaffDepartmentSoftReference')
            }
        })

        $("#btnSaveLink").click(function () {
            $("#SwitchOperation").val(3);
            $("#TabIndex").val(1);
            if ($("#IsModal").val() == "False") {
                $("#StaffDepartmentSoftReferenceForm").submit();
            }
            else {
                AjaxFormRequest('divSoftReferenceDialog', 'StaffDepartmentSoftReferenceForm', '/StaffList/StaffDepartmentSoftReference')
            }
        })

        $("#btnNewSoft").click(function () {
            $("#SwitchOperation").val(4);
            $("#TabIndex").val(2);
            if ($("#IsModal").val() == "False") {
                $("#StaffDepartmentSoftReferenceForm").submit();
            }
            else {
                AjaxFormRequest('divSoftReferenceDialog', 'StaffDepartmentSoftReferenceForm', '/StaffList/StaffDepartmentSoftReference')
            }
        })

        $("#SoftGroupId").change(function () {
            $("#TabIndex").val(1);
            if ($("#IsModal").val() == "False") {
                $("#StaffDepartmentSoftReferenceForm").submit();
            }
            else {
                AjaxFormRequest('divSoftReferenceDialog', 'StaffDepartmentSoftReferenceForm', '/StaffList/StaffDepartmentSoftReference')
            }
        });

        if ($("#IsError").val() == "True") {
            if ($("#TabIndex").val() == 0 && $("#SwitchOperation").val() == 2) {
                $("#EditGroup" + $("#GroupId").val()).click();
            }
            if ($("#TabIndex").val() == 2 && $("#SwitchOperation").val() == 5) {
                $("#EditSoft" + $("#SoftId").val()).click();
            }
        }
    });

    function EditRow(RowIndex, OperationId, Type) 
    {
        var TypeName = (Type == 1 ? "Group" : "Soft");
        //входим в режим редактирования
        if (OperationId == 1) {
            $("#" + TypeName + "List_" + RowIndex + "__Name").show();
            $("#lbl" + TypeName + (RowIndex + 1)).hide();
            $("#Edit" + TypeName + (RowIndex + 1)).hide();
            $("#Save" + TypeName + (RowIndex + 1)).show();
            $("#CancelEdit" + TypeName + (RowIndex + 1)).show();
            //позиционируемся в конце поля
            $("#" + TypeName + "List_" + RowIndex + "__Name").focus();
            //$("#" + TypeName + "List_" + RowIndex + "__Name").selectionStart = $("#" + TypeName + "List_" + RowIndex + "__Name").text().length;
            var field = document.getElementById(TypeName + "List_" + RowIndex + "__Name");
            field.setSelectionRange(field.value.length, field.value.length);

        }

        //сохранение
        if (OperationId == 2) {
            $("#" + TypeName + "Id").val($("#" + TypeName + "List_" + RowIndex + "__Id").val());
            $("#lbl" + TypeName + (RowIndex + 1)).text($("#" + TypeName + "List_" + RowIndex + "__Name").val());
            $("#SwitchOperation").val(Type == 1 ? "2" : "5");
            $("#TabIndex").val(Type == 1 ? 0 : 2);
            if ($("#IsModal").val() == "False") {
                $("#StaffDepartmentSoftReferenceForm").submit();
            }
            else {
                AjaxFormRequest('divSoftReferenceDialog', 'StaffDepartmentSoftReferenceForm', '/StaffList/StaffDepartmentSoftReference')
            }
        }

        //отмена редактирования
        if (OperationId == 3) {
//            $("#" + TypeName + "List_" + RowIndex + "__Name").hide();
//            $("#Edit" + TypeName + (RowIndex + 1)).show();
//            $("#Save" + TypeName + (RowIndex + 1)).hide();
//            $("#lbl" + TypeName + (RowIndex + 1)).show();
//            $("#" + TypeName + "List_" + RowIndex + "__Name").val($("#" + TypeName + "List_" + RowIndex + "__OldName").val());
//            $("#lbl" + TypeName + (RowIndex + 1)).text($("#" + TypeName + "List_" + RowIndex + "__OldName").val());
//            $("#Edit" + TypeName + (RowIndex + 1)).show();
//            $("#Save" + TypeName + (RowIndex + 1)).hide();
//            $("#CancelEdit" + TypeName + (RowIndex + 1)).hide();

            $("#TabIndex").val(Type == 1 ? 0 : 2);
            $("#SwitchOperation").val(0);
            if ($("#IsModal").val() == "False") {
                $("#StaffDepartmentSoftReferenceForm").submit();
            }
            else {
                AjaxFormRequest('divSoftReferenceDialog', 'StaffDepartmentSoftReferenceForm', '/StaffList/StaffDepartmentSoftReference')
            }
        }
    }

</script>
