@model Reports.Presenters.UI.ViewModel.StaffList.StaffListModel
@{
    Layout = "~/Views/Shared/_LayoutStaffList.cshtml";
    ViewBag.Title = "Штатные расписание";
}


@using (Html.BeginForm("StaffListGetNodes", "StaffList", FormMethod.Post, new { enctype = "multipart/form-data", id = "StaffListForm" }))
{
    @Html.HiddenFor(m => m.DepId)
    <div style="border:solid 1px black; padding:10px; background-color:#FAFAFA;">
        @*
        <div id="DivTooltip">
            <table style="border: 1px solid black;">
                <tr style="background:#D1FFE0;"><td>ПАО "Совкомбанк"</td></tr>
                <tr style="background:#E9FFE9;"><td>Филиал</td></tr>
                <tr style="background:#FBFFFA;"><td>Дирекция</td></tr>
                <tr style="background:#EDFFFC;"><td>Управление</td></tr>
                <tr style="background:#D1FFF7;"><td>Бизнес-группа</td></tr>
                <tr style="background:#E0F5FF;"><td>Подразделение 6 уровня</td></tr>
                <tr style="background:#FAFBFF;"><td>Подразделение 7 уровня</td></tr>
                <tr><td>Штатные единицы</td></tr>
            </table>
        </div>
        *@

        <table id="tbl" class="grid">
            <thead>
                <tr>
                    <th rowspan="2">Уровень<br />подразделений</th>
                    <th rowspan="2">Структура подразделений</th>
                    <th rowspan="2">Должность</th>
                    <th rowspan="2">Количество<br />штатных<br />единиц</th>
                    <th rowspan="2">Оклад</th>
                    <th colspan="3">Подразделения</th>
                    <th colspan="3">Штатные единицы</th>
                    <th rowspan="2">Название в<br />Финграде</th>
                    <th rowspan="2">Комментарий</th>
                    <th rowspan="2">Код в<br />Финграде</th>
                </tr>    
                <tr>
                    <th class="tdBtn">Создать</th>
                    <th class="tdBtn">Изменить</th>
                    <th class="tdBtn">Закрыть</th>
                    <th class="tdBtn">Создать</th>
                    <th class="tdBtn">Изменить</th>
                    <th class="tdBtn">Сократить</th>
                </tr>
            </thead>
            
            @{ int i = 0;}
            @foreach (var item in Model.Departments.OrderBy(x => x.Priority))
            {
                @*background-color: #E9FFE9;*@
                <tr id="tr-@item.Code1C" accessKey="@item.Path" style="@switch(item.ItemLevel){
                                                                            case 1:
                                                                               <text>background-color: #D1FFE0;</text>
                                                                               break;
                                                                            case 2:
                                                                               <text>background-color: #E9FFE9;</text>
                                                                               break;
                                                                            case 3:
                                                                                <text>background-color: #FBFFFA;</text>
                                                                               break;
                                                                            case 4:
                                                                               <text>background-color: #EDFFFC;</text>
                                                                               break;
                                                                            case 5:
                                                                                <text>background-color: #D1FFF7;</text>
                                                                               break;
                                                                            case 6:
                                                                                <text>background-color: #E0F5FF;</text>
                                                                               break;
                                                                            case 7:
                                                                                <text>background-color: #FAFBFF;</text>
                                                                               break;
                                                                            default:
                                                                                <text>background-color: #E9FFE9;</text>
                                                                                break;
                                                                       }">
                    <td class="tdBtn" DepToolTip="">@item.ItemLevel</td>
                    <td>
                        <span>
                            <a class="Acollapsible" accessKey="@item.Path" href="#" id="getnodes-@item.Code1C" onclick="GetNodes(@item.Code1C);"><span id=@("span-tr" + item.Id.ToString()) class="collapse collapsible">&nbsp;</span> @item.Name</a>
                        </span>
                        <button type="button" class="btnDepExpand" title="Раскрыть ветку" onclick="$('#span-tr' + @item.Id.ToString()).toggleClass('collapse expand'); GetNodes(@item.Code1C, true);" style="@if (item.ItemLevel == 7 || item.ItemLevel == 1)
                                                                                                                                                                                                             {<text>display:none;</text>}"></button>
                        <button type="button" class="btnDepNewWindow" title="Открыть ветку в новом окне" onclick="GetDepartments(@item.Code);" style="@if (item.ItemLevel == 7 || item.ItemLevel == 1)
                                                                                                                                                      {<text>display:none;</text>}"></button>
                    </td>
                    <td></td>
                    <td>@item.SEPCount</td>
                    <td></td>
                    <td class="tdBtn"><button type="button" class="btnDepAdd" title="Создать заявку на создание нового подразделения" onclick="GetDepartmentRequest(1, @item.Id);" style="@if (item.ItemLevel == 7)
                                                                                                                                                                                          {<text>display:none;</text>}"></button></td>
                    <td class="tdBtn"></td>
                    <td class="tdBtn"></td>
                    <td class="tdBtn"><button type="button" class="btnPosAdd" title="Создать заявку на создание новой штатной единицы" onclick="GetEstablishedPostRequest(1, @item.Id);"></button></td>
                    <td class="tdBtn"></td>
                    <td class="tdBtn"></td>
                    <td>@item.DepFingradName</td>
                    <td>@item.DepFingradNameComment</td>
                    <td>@item.FinDepPointCode</td>
                </tr>
            }
            @{ i++; }
        </table>             

    </div>
    <div id="DivIndicator" style="display:none;">
        <table>
            <tr>
                <td><span id="LoadingIndicator2"></span></td>
                <td><label>Идет загрузка данных...</label></td>
            </tr>
        </table>
    </div>
}

<script type="text/javascript">
    var DepTable = [];

    $(document).ready(function () {
        setActiveMenuItem("moStaffPost");

         $(document).tooltip({
            track: false,
            show: { effect: "blind", duration: 300 },
            items: "[DepToolTip], [title]",
            content: function() {
                var element = $( this );
                if ( element.is( "[DepToolTip]" ) ) {
                    return "<div id='DivTooltip'>Легенда<br/>" +
                                "<table style='border: 1px solid black;'>" +
                                    "<tr style='background:#D1FFE0;border: 1px solid black;'><td>ПАО Совкомбанк</td></tr>" +
                                    "<tr style='background:#E9FFE9;border: 1px solid black;'><td>Филиал</td></tr>" +
                                    "<tr style='background:#FBFFFA;border: 1px solid black;'><td>Дирекция</td></tr>" +
                                    "<tr style='background:#EDFFFC;border: 1px solid black;'><td>Управление</td></tr>" +
                                    "<tr style='background:#D1FFF7;border: 1px solid black;'><td>Бизнес-группа</td></tr>" +
                                    "<tr style='background:#E0F5FF;border: 1px solid black;'><td>Подразделение 6 уровня</td></tr>" +
                                    "<tr style='background:#FAFBFF;border: 1px solid black;'><td>Подразделение 7 уровня</td></tr>" +
                                    "<tr style='border: 1px solid black;'><td>Штатные единицы</td></tr>" +
                                "</table>" +
                            "</div>";
                }
                else {
                  return element.attr( "title" );
                }
            }
         });

        ShowFlash(true);
        ShowFlash(false);
        $(":button").button();
        //для эффекта раскрытой ветки
        $(".Acollapsible").click(function (e) {
            e.preventDefault();
            $(this).children('span').toggleClass("collapse expand");
        })
    });


    //подгружаем уровни структуры и штатные единицы
    function GetNodes(Id, IsExpandAll) {
        //чтобы не подгружались данные вторично
        if($("#getnodes-" + Id).hasClass("IsLoading")){
            var IsCollapse = false;
            var akParent = "";
            akParent = $("#tr-" + Id)[0].accessKey;
            //перебираем загруженные строковые элементы страницы, чтобы скрывать/раскрывать загруженные ветки
            $("tr").each(function(){
                if (this.id == "tr-" + Id){
                }
                else{
                    //по пути определяем нужные строки и по наличию класса показываем/скрываем их
                    if (akParent.length != 0)
                    {
                        if (this.accessKey.indexOf(akParent) > -1){
                            if (this.accessKey.substring(akParent.length) == this.id.substring(3) + "." || this.accessKey == akParent)//дочерние следующего уровня
                            {
                                if($("#" + this.id).hasClass("IsVisible")){ IsCollapse = true; }    //определяем что происходит в данный момент, скрытие/расркытие дочерних строк

                                if (IsCollapse)
                                {
                                    $("#" + this.id).removeClass("IsVisible");
                                    $("#" + this.id).hide();
                                }
                                else
                                {
                                    $("#" + this.id).addClass("IsVisible");
                                    $("#" + this.id).show();
                                }
                            }

                            if(IsCollapse)
                            {
                                $("#" + this.id).hide();
                                $("#" + this.id).addClass("IsHide");
                            }
                            else
                            {
                                if ($("#" + this.id).hasClass("IsVisible") && $("#" + this.id).hasClass("IsHide"))
                                {
                                    $("#" + this.id).show();
                                    $("#" + this.id).removeClass("IsHide");
                                }
                            }
                        }
                    }
                }
            });
            return;
        }
        else{$("#getnodes-" + Id).addClass("IsLoading");}

        var actionUrl="@Url.Action("StaffListGetNodes", "StaffList")";
            $("#DepId").val(Id);
            var dataToSend = $("#StaffListForm").serialize();
            ShowFlash(true);

            jQuery.ajax({
                url: actionUrl,
                type: 'POST',
                dataType: 'json',
                data: dataToSend,
                async: true,
                success: function(result){
                    // $liParent = $("#li-" + Id.toString());
                    var ResultStr = "";
                    var tblStr = "";


                    if (result.Departments != null)
                    {
                        //DepTable = result.Departments;
                        for (var i = 0; i < result.Departments.length; i++)
                        {   
                            if(IsExpandAll)
                            {
                                DepTable[i] = result.Departments[i].Code1C;
                            }

                            tblStr = "<tr id='tr-" + result.Departments[i].Code1C + "' accessKey='" + result.Departments[i].Path + "' class='IsVisible' style='background-color: " + GetBackgroundColor(result.Departments[i].ItemLevel) + ";'>" +
                                        "<td class='tdBtn' DepToolTip=''>" + result.Departments[i].ItemLevel + "</td>" +
                                        "<td>" +
                                        "<span>";
                                            var BSCount = (result.Departments[i].ItemLevel - 1) * 4; //отступ от левого края каждого вложения на 4 пробела больше родительского
                                            for (var j = 0; j < BSCount; j++)
                                            {
                                                tblStr += "&nbsp;";
                                            }
                                            tblStr += "<a class='Acollapsible' accessKey='" + result.Departments[i].Path + "' href='#' id='getnodes-" + result.Departments[i].Code1C + "' onclick='GetNodes(" + result.Departments[i].Code1C + ");'>" +
                                            "<span Id='span-tr" + result.Departments[i].Code1C + "' class='collapse collapsible'>&nbsp;</span>" + result.Departments[i].Name + "</a>" +
                                        "</span>" +
                                            "<button type='button' class='btnDepExpand' title='Раскрыть ветку' onclick='GetNodes("+ result.Departments[i].Code1C +", true);' " + (result.Departments[i].ItemLevel == 7 ? "style='display:none;'" : "") + "></button>" +
                                            "<button type='button' class='btnDepNewWindow' title='Открыть ветку в новом окне' onclick='GetDepartments("+ result.Departments[i].Code + ");' " + (result.Departments[i].ItemLevel == 7 ? "style='display:none;'" : "") + "></button>" +
                                        "</td>" + 
                                        "<td></td>" +
                                        "<td>" + result.Departments[i].SEPCount + "</td>" +
                                        "<td></td>" +
                                        "<td class='tdBtn'><button type='button' class='btnDepAdd' title='Создать заявку на создание нового подразделения' onclick='GetDepartmentRequest(1, " + result.Departments[i].Id + ");' " + (result.Departments[i].ItemLevel == 7 ? "style='display:none;'" : "") + "></td>" +
                                        "<td class='tdBtn'><button type='button' class='btnDepEdit' title='Создать заявку на изменение данного подразделения' onclick='GetDepartmentRequest(2, " + result.Departments[i].Id + ");'></button></td>" +
                                        "<td class='tdBtn'><button type='button' class='btnDepDelete' title='Создать заявку на закрытие данного подразделения' onclick='GetDepartmentRequest(3, " + result.Departments[i].Id + ");'></button></td>" +
                                        "<td class='tdBtn'><button type='button' class='btnPosAdd' title='Создать заявку на создание новой штатной единицы' onclick='GetEstablishedPostRequest(1, " + result.Departments[i].Id + ");'></button></td>" +
                                        "<td></td>" +
                                        "<td></td>" +
                                        "<td>" + (result.Departments[i].DepFingradName == null ? "" : result.Departments[i].DepFingradName) + "</td>" +
                                        "<td>" + (result.Departments[i].DepFingradNameComment == null ? "" : result.Departments[i].DepFingradNameComment) + "</td>" +
                                        "<td>" + (result.Departments[i].FinDepPointCode == null ? "" : result.Departments[i].FinDepPointCode) + "</td>" +
                                        "</tr>";

                            var ParentRowName = "#tr-" + (i == 0 ? Id : result.Departments[i - 1].Code1C);//определяем Id строки после которой нужно добавить новую строку
                            $(ParentRowName).after(tblStr);//вставляем новую строку
                            //var aa = $(ParentRowName);
                            //console.log(aa);
                            $("#span-tr" + result.Departments[i].Code1C).removeClass("collapse collapsible");
                            $("#getnodes-" + result.Departments[i].Code1C).removeClass("Acollapsible");

                            //для седьмого уровня надо обработчик, так как показываем еще и сотрудников
                            if (result.Departments[i].ItemLevel <= 7){
                                $("#span-tr" + result.Departments[i].Code1C).addClass("collapse collapsible");
                                $("#getnodes-" + result.Departments[i].Code1C).addClass("Acollapsible");
                                //console.log(ResultStr);
                                //назначаем обработчик для раскрытия веток дерева
                                $("#getnodes-" + result.Departments[i].Code1C).click(function (e) {
                                    e.preventDefault();
                                    $(this).children('span').toggleClass("collapse expand");
                                    $(this).closest('li').children('ul').slideToggle();
                                });

                                //при автооткрытии имитируем клик, меняем внешний вид
                                if (IsExpandAll){
                                    $("#span-tr" + result.Departments[i].Code1C).toggleClass("collapse expand");

                                }
                            }
                        }
                    }
                    

                    if(result.EstablishedPosts != null)
                    {
                        for (var i = 0; i < result.EstablishedPosts.length; i++)//штатные единицы
                        {   
                            tblStr = "<tr id='tru-" + result.EstablishedPosts[i].Id + "' accessKey='" + result.EstablishedPosts[i].Path + "' class='IsVisible' ;'>" +
                                        "<td DepToolTip=''></td>" +
                                        "<td></td>" +
                                        "<td>" +
                                        "<span>" +
                                            "<a class='Acollapsible' accessKey='' href='#' id='' onclick='' style='color:green;'>" +
                                            "<span Id='span-tr'" + result.EstablishedPosts[i].Id + "' >&nbsp;</span> " + result.EstablishedPosts[i].PositionName + "</a>" +
                                        "</span>" +
                                        "</td>" + 
                                        "<td>" + result.EstablishedPosts[i].Quantity + "</td>" +
                                        "<td>" + result.EstablishedPosts[i].Salary + "</td>" +
                                        "<td></td>" +
                                        "<td></td>" +
                                        "<td></td>" +
                                        "<td></td>" +
                                        //onclick='GetEstablishedPostRequest(1, " + result.Departments[i].Id + ");'
                                        "<td class='tdBtn'><button type='button' class='btnPosEdit' title='Создать заявку на изменение данной штатной единицы' onclick='GetEstablishedPostRequest(2, " + result.EstablishedPosts[i].DepartmentId + ", " + result.EstablishedPosts[i].Id + ");'></button></td>" +
                                        "<td class='tdBtn'><button type='button' class='btnPosDelete' title='Создать заявку на сокращение штатной единицы' onclick='GetEstablishedPostRequest(3, " + result.EstablishedPosts[i].DepartmentId + ", " + result.EstablishedPosts[i].Id + ");'></button></td>" +
                                        "<td></td>" +
                                        "<td></td>" +
                                        "<td></td>" +
                                        "</tr>";

                            var ParentRowName = "#tr-" + Id;//определяем Id строки после которой нужно добавить новую строку
                            $(ParentRowName).after(tblStr);//вставляем новую строку
                        }
                    }
                    
                    
                    //пытаемся раскрыть рекурсивно всю ветку 
                    if (DepTable.length > 0)
                    {
                        for (var i = 0; i < DepTable.length; i++)
                        {
                            GetNodes(DepTable[i], IsExpandAll);
                        }
                        DepTable = [];
                    }
                    

                    $(":button").button();
                    
                    ShowFlash(false);

                },
                error: function(){
                    alert("При загрузке данных произошла ошибка.");
                    ShowFlash(false);
                }
            });
    }


    function ShowFlash(IsShow)  //показываем индикатор загрузки
    {
        if (!IsShow) {
            $("#LoadingIndicator2").removeClass("loading2");
            $("#DivIndicator").dialog("close");
            $("#DivIndicator").hide();
        }
        else {
            $("#LoadingIndicator2").addClass("loading2");
            $("#DivIndicator").show();
            $("#DivIndicator").dialog(
            { // initialize dialog box
                autoOpen: true,
                modal: true,
                // fix IE6  
                bgiframe: true,
                draggable: false,
                resizable: false,
                width: 300,
                height: 60,
                closeOnEscape: false,
                close: function (event, ui) {
                    //$(this).dialog("destroy").remove();
                }
            });
            $(".ui-dialog-titlebar").hide();
            $(".ui-dialog-titlebar-close").hide();
        }
    }


    //переходим в заявку для подразделения
    function GetDepartmentRequest(RequestType, DepartmentId)
    {
        var actionUrl="@Url.Action("StaffDepartmentRequest", "StaffList")";
        actionUrl += "?RequestType=" + RequestType + "&DepartmentId=" + DepartmentId;
        location.href = actionUrl;
    }


    //переходим в заявку для штатной единицы
    function GetEstablishedPostRequest(RequestType, DepartmentId, SEPId)
    {
        var actionUrl="@Url.Action("StaffEstablishedPostRequest", "StaffList")";
        actionUrl += "?RequestType=" + RequestType + "&DepartmentId=" + DepartmentId + "&SEPId=" + SEPId;
        location.href = actionUrl;
    }

    //открываем ветку в новом окне
    function GetDepartments(DepCode)
    {
        var actionUrl="@Url.Action("StaffList", "StaffList")";
        actionUrl += "?DepId=" + DepCode + "&IsParentDepOnly=true";
        location.href = actionUrl;
    }

    function GetBackgroundColor(ItemLevel){
        var BgColor = "";
        switch(ItemLevel){
            case 1:
            BgColor = "#D1FFE0";
            //BgColor = "#E9FFE9";
            break;
            case 2:
            BgColor = "#E9FFE9";
            //BgColor = "#D1FFF7";
            break;
            case 3:
            BgColor = "#FBFFFA";
            //BgColor = "#D1FFE0";
            break;
            case 4:
            BgColor = "#EDFFFC";
            //BgColor = "#E0F5FF";
            break;
            case 5:
            BgColor = "#D1FFF7";
            //BgColor = "#FAFBFF";
            break;
            case 6:
            BgColor = "#E0F5FF";
            //BgColor = "#EDFFFC";
            break;
            case 7:
            BgColor = "#FAFBFF";
            //BgColor = "#FBFFFA";
            break;
            default:
            BgColor = "#E9FFE9";
            break;
        }

        return BgColor;
    }
</script>

