@model Reports.Presenters.UI.ViewModel.StaffList.StaffDepartmentRequestModel
@{
    Layout = "~/Views/Shared/_LayoutStaffList.cshtml";
}

  <style>
  body {
    min-width: 520px;
  }
  .column {
    width: 170px;
    float: left;
    padding-bottom: 100px;
  }
  .portlet {
    margin: 0 1em 1em 0;
    padding: 0.3em;
  }
  .portlet-header {
    padding: 0.2em 0.3em;
    margin-bottom: 0.5em;
    position: relative;
  }
  .portlet-toggle {
    position: absolute;
    top: 50%;
    right: 0;
    margin-top: -8px;
  }
  .portlet-content {
    padding: 0.4em;
  }
  .portlet-placeholder {
    border: 1px dotted black;
    margin: 0 1em 1em 0;
    height: 50px;
  }
  </style>

@using (Html.BeginForm("StaffDepartmentRequest", "StaffList", FormMethod.Post, new { enctype = "multipart/form-data", id = "StaffDepartmentRequestForm" }))
{
    <legend style="text-align:left;font-size:medium;">Заявка</legend>
    <div style="border:solid 1px black; padding:10px; background-color:#FAFAFA;">
        <div id="MainDiv">
            <h3>Реквизиты инициатора</h3>
            <div>
                @Html.Partial("DepRequestInfoView", Model.DepRequestInfo)
            </div>
        </div>


        <div id="MainDiv1">
            <h3>Общие реквизиты</h3>
            <div>
                <table>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.DateState)
                        </td>
                        <td>
                            @(Model.DateState.HasValue ? Model.DateState.Value.ToShortDateString() : string.Empty)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.Id)</td>
                        <td>
                            @(Model.Id != 0 ? Model.Id.ToString() : "")
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.RequestType)</td>
                        <td>@Model.RequestTypes.Where(x => x.Id == Model.RequestType).Single().Name</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.ItemLevel)</td>
                        <td>@Model.ItemLevel.ToString()</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.Name)</td>
                        <td>
                            @Html.TextBoxFor(m => m.Name, (object)new { maxlength = "128", style = "width:600px;" })
                            @Html.ValidationMessageFor(model => model.Name)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.IsBack)
                        </td>
                        <td>
                            <div id="IsBackContainer">
                                @Html.RadioButtonFor(m => m.IsBack, true, new { @id = "IsBackTrue" })<label id="lblIsBackTrue" for="IsBackTrue" @if (Model.IsBack)
                                                                                                                                                                        {<text>style="border-color:red;"</text>}
                                                                                                                                                                        else
                                                                                                                                                                        {<text> style="border-color:none;"</text>}>Да</label>
                                @Html.RadioButtonFor(m => m.IsBack, false, new { @id = "IsBackFalse" })<label id="lblIsBackFalse" for="IsBackFalse" @if (!Model.IsBack)
                                                                                                                                                                    {<text>style="border-color:red;"</text>}
                                                                                                                                                                    else
                                                                                                                                                                    {<text> style="border-color:none;"</text>}>Нет</label>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.OrderNumber)</td>
                        <td>
                            @Html.TextBoxFor(m => m.OrderNumber, (object)new { maxlength = "50", style = "width:400px;" })
                            @Html.ValidationMessageFor(model => model.OrderNumber)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.OrderDate)</td>
                        <td>@Html.TextBoxFor(m => m.OrderDate) @Html.ValidationMessageFor(model => model.OrderDate)</td>
                    </tr>
                    <tr>
                        <td>
                            @Html.HiddenFor(m => m.LegalAddressId)
                            @Html.HiddenFor(m => m.LegalPostIndex)
                            @Html.HiddenFor(m => m.LegalRegionCode)
                            @Html.HiddenFor(m => m.LegalAreaCode)
                            @Html.HiddenFor(m => m.LegalCityCode)
                            @Html.HiddenFor(m => m.LegalSettlementCode)
                            @Html.HiddenFor(m => m.LegalStreetCode)
                            @Html.HiddenFor(m => m.LegalHouseType)
                            @Html.HiddenFor(m => m.LegalHouseNumber)
                            @Html.HiddenFor(m => m.LegalBuildType)
                            @Html.HiddenFor(m => m.LegalBuildNumber)
                            @Html.HiddenFor(m => m.LegalFlatType)
                            @Html.HiddenFor(m => m.LegalFlatNumber)


                            @Html.LabelFor(m => m.LegalAddressId)<br />
                            <button type="button" title="Выбрать адрес" onclick="CreateAddressDialog(1);">Выбрать</button>
                        </td>
                        <td>
                            <label id="LegalAddressLabel">@Model.LegalAddress</label>
                            @Html.ValidationMessageFor(model => model.LegalAddress)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.IsTaxAdminAccount)
                        </td>
                        <td>
                            <div id="IsTaxAdminAccountContainer">
                                @Html.RadioButtonFor(m => m.IsTaxAdminAccount, true, new { @id = "IsTaxAdminAccountTrue" })<label id="lblIsTaxAdminAccountTrue" for="IsTaxAdminAccountTrue" @if (Model.IsTaxAdminAccount)
                                                                                                                                                                        {<text>style="border-color:red;"</text>}
                                                                                                                                                                        else
                                                                                                                                                                        {<text> style="border-color:none;"</text>}>Да</label>
                                @Html.RadioButtonFor(m => m.IsTaxAdminAccount, false, new { @id = "IsTaxAdminAccountFalse" })<label id="lblIsTaxAdminAccountFalse" for="IsTaxAdminAccountFalse" @if (!Model.IsTaxAdminAccount)
                                                                                                                                                                    {<text>style="border-color:red;"</text>}
                                                                                                                                                                    else
                                                                                                                                                                    {<text> style="border-color:none;"</text>}>Нет</label>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.IsEmployeAvailable)
                        </td>
                        <td>
                            <div id="IsEmployeAvailableContainer">
                                @Html.RadioButtonFor(m => m.IsEmployeAvailable, true, new { @id = "IsEmployeAvailableTrue" })<label id="lblIsEmployeAvailableTrue" for="IsEmployeAvailableTrue" @if (Model.IsEmployeAvailable)
                                                                                                                                                                        {<text>style="border-color:red;"</text>}
                                                                                                                                                                        else
                                                                                                                                                                        {<text> style="border-color:none;"</text>}>Да</label>
                                @Html.RadioButtonFor(m => m.IsEmployeAvailable, false, new { @id = "IsEmployeAvailableFalse" })<label id="lblIsEmployeAvailableFalse" for="IsEmployeAvailableFalse" @if (!Model.IsEmployeAvailable)
                                                                                                                                                                    {<text>style="border-color:red;"</text>}
                                                                                                                                                                    else
                                                                                                                                                                    {<text> style="border-color:none;"</text>}>Нет</label>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.DepNextId)<br />
                            <input type="button" value="Выбрать" title="Выбрать подразделение" onclick="changeDepartment(1);"/>
                        </td>
                        <td>
                            <label id="DepNextNameLabel">@Model.DepNextName</label>
                            @Html.HiddenFor(m => m.DepNextId)
                            @Html.HiddenFor(m => m.DepNextName)
                            @Html.ValidationMessageFor(model => model.DepNextId)
                        </td>
                    </tr>
                </table>
            </div>
        </div>


        <div id="MainDiv2">
            <h3>Налоговые реквизиты</h3>
            <div>
                <table>
                    <tr>
                        <td>@Html.LabelFor(m => m.KPP)</td>
                        <td>@Model.KPP</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.OKTMO)</td>
                        <td>@Model.OKTMO</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.OKATO)</td>
                        <td>@Model.OKATO</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.RegionCode)</td>
                        <td>@Model.RegionCode</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.TaxAdminCode)</td>
                        <td>@Model.TaxAdminCode</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.TaxAdminName)</td>
                        <td>@Model.TaxAdminName</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.PostAddress)</td>
                        <td>@Model.PostAddress</td>
                    </tr>
                </table>
            </div>
        </div>


        <div id="MainDiv3">
            <h3>ЦБ реквизиты</h3>
            <div>
                <table>
                    <tr>
                        <td>@Html.LabelFor(m => m.ATMCountTotal)</td>
                        <td>
                            @Html.TextBoxFor(m => m.ATMCountTotal, (object)new { style = "width:70px;" })
                            @Html.ValidationMessageFor(model => model.ATMCountTotal)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.ATMCashInCount)</td>
                        <td>
                            @Html.TextBoxFor(m => m.ATMCashInCount, (object)new { style = "width:70px;" })
                            @Html.ValidationMessageFor(model => model.ATMCashInCount)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.ATMCount)</td>
                        <td>
                            @Html.TextBoxFor(m => m.ATMCount, (object)new { style = "width:70px;" })
                            @Html.ValidationMessageFor(model => model.ATMCount)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.DepCachinId)<br />
                            <input type="button" value="Выбрать" title="Выбрать подразделение" onclick="changeDepartment(2);"/>
                        </td>
                        <td>
                            <label id="DepCachinNameLabel">@Model.DepCachinName</label>
                            @Html.HiddenFor(m => m.DepCachinId)
                            @Html.HiddenFor(m => m.DepCachinName)
                            @Html.ValidationMessageFor(model => model.DepCachinId)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.DepATMId)<br />
                            <input type="button" value="Выбрать" title="Выбрать подразделение" onclick="changeDepartment(3);"/>
                        </td>
                        <td>
                            <label id="DepATMNameLabel">@Model.DepATMName</label>
                            @Html.HiddenFor(m => m.DepATMId)
                            @Html.HiddenFor(m => m.DepATMName)
                            @Html.ValidationMessageFor(model => model.DepATMId)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.CashInStartedDate)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.CashInStartedDate)
                            @Html.ValidationMessageFor(model => model.CashInStartedDate)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.ATMStartedDate)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.ATMStartedDate)
                            @Html.ValidationMessageFor(model => model.ATMStartedDate)
                        </td>
                    </tr>
                </table>
            </div>
        </div>


        <div id="MainDiv4">
            <h3>Управленческие реквизиты</h3>
            <div>
                <table>
                    <tr>
                        <td>@Html.LabelFor(m => m.NameShort)</td>
                        <td>
                            @Html.TextBoxFor(m => m.NameShort, (object)new { style = "width:400px;" })
                            @Html.ValidationMessageFor(model => model.NameShort)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.ReferenceReason)</td>
                        <td>
                            @Html.TextBoxFor(m => m.ReferenceReason, (object)new { style = "width:400px;" })
                            @Html.ValidationMessageFor(model => model.ReferenceReason)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.HiddenFor(m => m.FactAddressId)
                            @Html.HiddenFor(m => m.FactPostIndex)
                            @Html.HiddenFor(m => m.FactRegionCode)
                            @Html.HiddenFor(m => m.FactAreaCode)
                            @Html.HiddenFor(m => m.FactCityCode)
                            @Html.HiddenFor(m => m.FactSettlementCode)
                            @Html.HiddenFor(m => m.FactStreetCode)
                            @Html.HiddenFor(m => m.FactHouseType)
                            @Html.HiddenFor(m => m.FactHouseNumber)
                            @Html.HiddenFor(m => m.FactBuildType)
                            @Html.HiddenFor(m => m.FactBuildNumber)
                            @Html.HiddenFor(m => m.FactFlatType)
                            @Html.HiddenFor(m => m.FactFlatNumber)


                            @Html.LabelFor(m => m.FactAddressId)<br />
                            <button type="button" onclick="CreateAddressDialog(2);">Выбрать</button>
                        </td>
                        <td>
                            <label id="FactAddressLabel">@Model.FactAddress</label>
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.DepStatus)</td>
                        <td>
                            @Html.TextBoxFor(m => m.DepStatus, (object)new { style = "width:400px;" })
                            @Html.ValidationMessageFor(model => model.DepStatus)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.DepTypeId):
                        </td>
                        <td>
                            @Html.DropDownListFor(model => model.DepTypeId, new SelectList(Model.DepTypes, "ID", "Name")) 
                            @Html.ValidationMessageFor(model => model.DepTypeId)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.OpenDate)</td>
                        <td>
                            @Html.TextBoxFor(m => m.OpenDate)
                            @Html.ValidationMessageFor(model => model.OpenDate)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.CloseDate)</td>
                        <td>
                            @Html.TextBoxFor(m => m.CloseDate)
                            @Html.ValidationMessageFor(model => model.CloseDate)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.Reason)</td>
                        <td>
                            @Html.TextBoxFor(m => m.Reason, (object)new { style = "width:400px;" })
                            @Html.ValidationMessageFor(model => model.Reason)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.OperationMode)</td>
                        <td>
                            @Html.TextBoxFor(m => m.OperationMode, (object)new { style = "width:400px;" })
                            @Html.ValidationMessageFor(model => model.OperationMode)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.BeginIdleDate)</td>
                        <td>
                            @Html.TextBoxFor(m => m.BeginIdleDate)
                            @Html.ValidationMessageFor(model => model.BeginIdleDate)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.EndIdleDate)</td>
                        <td>
                            @Html.TextBoxFor(m => m.EndIdleDate)
                            @Html.ValidationMessageFor(model => model.EndIdleDate)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.IsRentPlace)
                        </td>
                        <td>
                            <div id="IsRentPlaceContainer">
                                @Html.RadioButtonFor(m => m.IsRentPlace, true, new { @id = "IsRentPlaceTrue" })<label id="lblIsRentPlaceTrue" for="IsRentPlaceTrue" @if (Model.IsRentPlace)
                                                                                                                                                                        {<text>style="border-color:red;"</text>}
                                                                                                                                                                        else
                                                                                                                                                                        {<text> style="border-color:none;"</text>}>Да</label>
                                @Html.RadioButtonFor(m => m.IsRentPlace, false, new { @id = "IsRentPlaceFalse" })<label id="lblIsRentPlaceFalse" for="IsRentPlaceFalse" @if (!Model.IsRentPlace)
                                                                                                                                                                    {<text>style="border-color:red;"</text>}
                                                                                                                                                                    else
                                                                                                                                                                    {<text> style="border-color:none;"</text>}>Нет</label>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.Phone)</td>
                        <td>
                            @Html.TextBoxFor(m => m.Phone, (object)new { style = "width:400px;" })
                            @Html.ValidationMessageFor(model => model.Phone)
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            <div class="portlet">
                                <div class="portlet-header">@Html.LabelFor(m => m.ProgramCodes)</div>
                                <div class="portlet-content">
                                    <table class="grid">
                                        <thead>
                                            <tr>
                                                <th>Название программы</th>
                                                <th style="width:30%;">Код</th>
                                            </tr>
                                        <//thead>
                                        @{ int i = 1; }
                                        @foreach (var item in Model.ProgramCodes)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.HiddenFor(m => m.ProgramCodes[i - 1].Id)
                                                    @Html.HiddenFor(m => m.ProgramCodes[i - 1].ProgramId)
                                                    @item.ProgramName
                                                </td>
                                                <td>@Html.TextBoxFor(m => m.ProgramCodes[i - 1].Code)</td>
                                            </tr>
                                            {i++;}
                                        }
                                    </table>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.IsBlocked)
                        </td>
                        <td>
                            <div id="IsBlockedContainer">
                                @Html.RadioButtonFor(m => m.IsBlocked, true, new { @id = "IsBlockedTrue" })<label id="lblIsBlockedTrue" for="IsBlockedTrue" @if (Model.IsBlocked)
                                                                                                                                                                        {<text>style="border-color:red;"</text>}
                                                                                                                                                                        else
                                                                                                                                                                        {<text> style="border-color:none;"</text>}>Да</label>
                                @Html.RadioButtonFor(m => m.IsBlocked, false, new { @id = "IsBlockedFalse" })<label id="lblIsBlockedFalse" for="IsBlockedFalse" @if (!Model.IsBlocked)
                                                                                                                                                                    {<text>style="border-color:red;"</text>}
                                                                                                                                                                    else
                                                                                                                                                                    {<text> style="border-color:none;"</text>}>Нет</label>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.IsNetShop)
                        </td>
                        <td>
                            <div id="IsNetShopContainer">
                                @Html.RadioButtonFor(m => m.IsNetShop, true, new { @id = "IsNetShopTrue" })<label id="lblIsNetShopTrue" for="IsNetShopTrue" @if (Model.IsNetShop)
                                                                                                                                                                        {<text>style="border-color:red;"</text>}
                                                                                                                                                                        else
                                                                                                                                                                        {<text> style="border-color:none;"</text>}>Да</label>
                                @Html.RadioButtonFor(m => m.IsNetShop, false, new { @id = "IsNetShopFalse" })<label id="lblIsNetShopFalse" for="IsNetShopFalse" @if (!Model.IsNetShop)
                                                                                                                                                                    {<text>style="border-color:red;"</text>}
                                                                                                                                                                    else
                                                                                                                                                                    {<text> style="border-color:none;"</text>}>Нет</label>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.IsAvailableCash)
                        </td>
                        <td>
                            <div id="IsAvailableCashContainer">
                                @Html.RadioButtonFor(m => m.IsAvailableCash, true, new { @id = "IsAvailableCashTrue" })<label id="lblIsAvailableCashTrue" for="IsAvailableCashTrue" @if (Model.IsAvailableCash)
                                                                                                                                                                        {<text>style="border-color:red;"</text>}
                                                                                                                                                                        else
                                                                                                                                                                        {<text> style="border-color:none;"</text>}>Да</label>
                                @Html.RadioButtonFor(m => m.IsAvailableCash, false, new { @id = "IsAvailableCashFalse" })<label id="lblIsAvailableCashFalse" for="IsAvailableCashFalse" @if (!Model.IsAvailableCash)
                                                                                                                                                                    {<text>style="border-color:red;"</text>}
                                                                                                                                                                    else
                                                                                                                                                                    {<text> style="border-color:none;"</text>}>Нет</label>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            <div class="portlet">
                                <div class="portlet-header">@Html.LabelFor(m => m.Operations)</div>
                                <div class="portlet-content">
                                    <table class="grid">
                                        <thead>
                                            <tr>
                                                <th>Название Операции</th>
                                                <th style="width:30%;">Использовать</th>
                                            </tr>
                                        <//thead>
                                        @{ i = 1; }
                                        @foreach (var item in Model.Operations)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.HiddenFor(m => m.Operations[i - 1].Id)
                                                    @Html.HiddenFor(m => m.Operations[i - 1].OperationId)
                                                    @item.OperationName
                                                </td>
                                                <td align="center" style="text-align:center;">@Html.CheckBoxFor(m => m.Operations[i - 1].IsUsed)</td>
                                            </tr>
                                            {i++;}
                                        }
                                    </table>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.IsLegalEntity)
                        </td>
                        <td>
                            <div id="IsLegalEntityContainer">
                                @Html.RadioButtonFor(m => m.IsLegalEntity, true, new { @id = "IsLegalEntityTrue" })<label id="lblIsLegalEntityTrue" for="IsLegalEntityTrue" @if (Model.IsLegalEntity)
                                                                                                                                                                        {<text>style="border-color:red;"</text>}
                                                                                                                                                                        else
                                                                                                                                                                        {<text> style="border-color:none;"</text>}>Да</label>
                                @Html.RadioButtonFor(m => m.IsLegalEntity, false, new { @id = "IsLegalEntityFalse" })<label id="lblIsLegalEntityFalse" for="IsLegalEntityFalse" @if (!Model.IsLegalEntity)
                                                                                                                                                                    {<text>style="border-color:red;"</text>}
                                                                                                                                                                    else
                                                                                                                                                                    {<text> style="border-color:none;"</text>}>Нет</label>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            <div class="portlet">
                                <div class="portlet-header">@Html.LabelFor(m => m.DepLandmarks)</div>
                                <div class="portlet-content">
                                    <table class="grid">
                                        <thead>
                                            <tr>
                                                <th>Вид ориентира</th>
                                                <th>Ориентир</th>
                                            </tr>
                                        <//thead>
                                        @{ i = 1; }
                                        @foreach (var item in Model.DepLandmarks)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.HiddenFor(m => m.DepLandmarks[i - 1].Id)
                                                    @Html.HiddenFor(m => m.DepLandmarks[i - 1].LandmarkId)
                                                    @item.LandmarkName
                                                </td>
                                                <td>@Html.TextBoxFor(m => m.DepLandmarks[i - 1].Description, new { style = "width:99%;" })</td>
                                            </tr>
                                            {i++;}
                                        }
                                    </table>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.PlanEPCount)</td>
                        <td>
                            @Html.TextBoxFor(m => m.PlanEPCount, (object)new { style = "width:70px;" })
                            @Html.ValidationMessageFor(model => model.PlanEPCount)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.PlanSalaryFund)</td>
                        <td>
                            @Html.TextBoxFor(m => m.PlanSalaryFund, (object)new { style = "width:70px;" })
                            @Html.ValidationMessageFor(model => model.PlanSalaryFund)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(m => m.Note)</td>
                        <td>
                            @Html.TextAreaFor(m => m.Note, (object)new { maxlength = "250", style = "width:99%;" })
                            @Html.ValidationMessageFor(model => model.Note)
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    var OldAddressType = -1;
    var actionDepUrl = "@Url.Action("GetChildren", "Home")";    
    var actionDepDialogUrl = "@Url.Action("DepartmentDialog", "Home")";

    $(document).ready(function () {
        setActiveMenuItem("moStaffPost");

        $(document).tooltip({ track: true });
        $(":button").button();



        $("#MainDiv").accordion({
            header: "h3",
            //active: false,
            collapsible: true,
            autoHeight: false,
            heightStyle: "content"
        });
        $("#MainDiv1").accordion({
            header: "h3",
            active: false,
            collapsible: true,
            autoHeight: false,
            heightStyle: "content"
        });
        $("#MainDiv2").accordion({
            header: "h3",
            active: false,
            collapsible: true,
            autoHeight: false,
            heightStyle: "content"
        });
        $("#MainDiv3").accordion({
            header: "h3",
            active: false,
            collapsible: true,
            autoHeight: false,
            heightStyle: "content"
        });
        $("#MainDiv4").accordion({
            header: "h3",
            active: false,
            collapsible: true,
            autoHeight: false,
            heightStyle: "content"
        });
        

        $( ".portlet" )
            .addClass( "ui-widget ui-widget-content ui-helper-clearfix ui-corner-all" )
            .find( ".portlet-header" )
            .addClass( "ui-state-default ui-corner-all" )
            .prepend( "<span class='ui-icon ui-icon-minusthick portlet-toggle'></span>");
 
        $( ".portlet-toggle" ).click(function() {
            var icon = $( this );
            icon.toggleClass( "ui-icon-minusthick ui-icon-plusthick" );
            icon.closest( ".portlet" ).find( ".portlet-content" ).toggle();
        });

        $( ".portlet-toggle" ).click();//чтобы по умолчанию быо закрыто

        $("#OrderDate").datepicker({ changeYear: true, changeMonth: true });
        $("#CashInStartedDate").datepicker({ changeYear: true, changeMonth: true });
        $("#ATMStartedDate").datepicker({ changeYear: true, changeMonth: true });
        $("#OpenDate").datepicker({ changeYear: true, changeMonth: true });
        $("#CloseDate").datepicker({ changeYear: true, changeMonth: true });
        $("#BeginIdleDate").datepicker({ changeYear: true, changeMonth: true });
        $("#EndIdleDate").datepicker({ changeYear: true, changeMonth: true });
        $(".hasDatepicker").width("85px");


        $('#IsBackContainer').buttonset();
        $('#IsTaxAdminAccountContainer').buttonset();
        $('#IsEmployeAvailableContainer').buttonset();
        $('#IsRentPlaceContainer').buttonset();
        $('#IsBlockedContainer').buttonset();
        $('#IsNetShopContainer').buttonset();
        $('#IsAvailableCashContainer').buttonset();
        $('#IsLegalEntityContainer').buttonset();


        $("#IsBackTrue").click(function () {
            $("#lblIsBackTrue").css("border-color", "red");
            $("#lblIsBackFalse").css("border-color", "silver");
        });
        $("#IsBackFalse").click(function () {
            $("#lblIsBackFalse").css("border-color", "red");
            $("#lblIsBackTrue").css("border-color", "silver");
        });

                
        $("#IsTaxAdminAccountTrue").click(function () {
            $("#lblIsTaxAdminAccountTrue").css("border-color", "red");
            $("#lblIsTaxAdminAccountFalse").css("border-color", "silver");
        });
        $("#IsTaxAdminAccountFalse").click(function () {
            $("#lblIsTaxAdminAccountFalse").css("border-color", "red");
            $("#lblIsTaxAdminAccountTrue").css("border-color", "silver");
        });


        $("#IsEmployeAvailableTrue").click(function () {
            $("#lblIsEmployeAvailableTrue").css("border-color", "red");
            $("#lblIsEmployeAvailableFalse").css("border-color", "silver");
        });
        $("#IsEmployeAvailableFalse").click(function () {
            $("#lblIsEmployeAvailableFalse").css("border-color", "red");
            $("#lblIsEmployeAvailableTrue").css("border-color", "silver");
        });


        $("#IsRentPlaceTrue").click(function () {
            $("#lblIsRentPlaceTrue").css("border-color", "red");
            $("#lblIsRentPlaceFalse").css("border-color", "silver");
        });
        $("#IsRentPlaceFalse").click(function () {
            $("#lblIsRentPlaceFalse").css("border-color", "red");
            $("#lblIsRentPlaceTrue").css("border-color", "silver");
        });


        $("#IsBlockedTrue").click(function () {
            $("#lblIsBlockedTrue").css("border-color", "red");
            $("#lblIsBlockedFalse").css("border-color", "silver");
        });
        $("#IsBlockedFalse").click(function () {
            $("#lblIsBlockedFalse").css("border-color", "red");
            $("#lblIsBlockedTrue").css("border-color", "silver");
        });


        $("#IsNetShopTrue").click(function () {
            $("#lblIsNetShopTrue").css("border-color", "red");
            $("#lblIsNetShopFalse").css("border-color", "silver");
        });
        $("#IsNetShopFalse").click(function () {
            $("#lblIsNetShopFalse").css("border-color", "red");
            $("#lblIsNetShopTrue").css("border-color", "silver");
        });


        $("#IsAvailableCashTrue").click(function () {
            $("#lblIsAvailableCashTrue").css("border-color", "red");
            $("#lblIsAvailableCashFalse").css("border-color", "silver");
        });
        $("#IsAvailableCashFalse").click(function () {
            $("#lblIsAvailableCashFalse").css("border-color", "red");
            $("#lblIsAvailableCashTrue").css("border-color", "silver");
        });


        $("#IsLegalEntityTrue").click(function () {
            $("#lblIsLegalEntityTrue").css("border-color", "red");
            $("#lblIsLegalEntityFalse").css("border-color", "silver");
        });
        $("#IsLegalEntityFalse").click(function () {
            $("#lblIsLegalEntityFalse").css("border-color", "red");
            $("#lblIsLegalEntityTrue").css("border-color", "silver");
        });

        //ShowFlash(true);
        //ShowFlash(false);
    });

    //строим строку параметров для вызова кладра
    function GetParamStr(Type)
    {
        var ParamStr = "";
        if (Type == 1)
        {
            ParamStr = "?Id=" + $("#LegalAddressId").val();
            ParamStr += "&PostIndex=" + ($("#LegalPostIndex").val() == "null" ? "" : $("#LegalPostIndex").val());
            ParamStr += "&RegionCode=" + ($("#LegalRegionCode").val() == "null" ? "" : $("#LegalRegionCode").val());
            ParamStr += "&AreaCode=" + ($("#LegalAreaCode").val() == "null" ? "" : $("#LegalAreaCode").val());
            ParamStr += "&CityCode=" + ($("#LegalCityCode").val() == "null" ? "" : $("#LegalCityCode").val());
            ParamStr += "&SettlementCode=" + ($("#LegalSettlementCode").val() == "null" ? "" : $("#LegalSettlementCode").val());
            ParamStr += "&StreetCode=" + ($("#LegalStreetCode").val() == "null" ? "" : $("#LegalStreetCode").val());
            ParamStr += "&HouseType=" + $("#LegalHouseType").val();
            ParamStr += "&HouseNumber=" + $("#LegalHouseNumber").val();
            ParamStr += "&BuildType=" + $("#LegalBuildType").val();
            ParamStr += "&BuildNumber=" + $("#LegalBuildNumber").val();
            ParamStr += "&FlatType=" + $("#LegalFlatType").val();
            ParamStr += "&FlatNumber=" + $("#LegalFlatNumber").val();
        }

        if (Type == 2)
        {
            ParamStr = "?Id=" + $("#FactAddressId").val();
            ParamStr += "&PostIndex=" + ($("#FactPostIndex").val() == "null" ? "" : $("#FactPostIndex").val());
            ParamStr += "&RegionCode=" + ($("#FactRegionCode").val() == "null" ? "" : $("#FactRegionCode").val());
            ParamStr += "&AreaCode=" + ($("#FactAreaCode").val() == "null" ? "" : $("#FactAreaCode").val());
            ParamStr += "&CityCode=" + ($("#FactCityCode").val() == "null" ? "" : $("#FactCityCode").val());
            ParamStr += "&SettlementCode=" + ($("#FactSettlementCode").val() == "null" ? "" : $("#FactSettlementCode").val());
            ParamStr += "&StreetCode=" + ($("#FactStreetCode").val() == "null" ? "" : $("#FactStreetCode").val());
            ParamStr += "&HouseType=" + $("#FactHouseType").val();
            ParamStr += "&HouseNumber=" + $("#FactHouseNumber").val();
            ParamStr += "&BuildType=" + $("#FactBuildType").val();
            ParamStr += "&BuildNumber=" + $("#FactBuildNumber").val();
            ParamStr += "&FlatType=" + $("#FactFlatType").val();
            ParamStr += "&FlatNumber=" + $("#FactFlatNumber").val();
        }
        return ParamStr;
    }

    //сохраняем полученные параметры адреса
    function SaveKladrParam(Type)
    {
        if(Type == 1)
        {
            $("#LegalPostIndex").val($("#PostIndex").val());
            $("#LegalRegionCode").val($("#RegionCode").val());
            $("#LegalAreaCode").val($("#AreaCode").val());
            $("#LegalCityCode").val($("#CityCode").val());
            $("#LegalSettlementCode").val($("#SettlementCode").val());
            $("#LegalStreetCode").val($("#StreetCode").val());
            $("#LegalHouseType").val($("#HouseType").val());
            $("#LegalHouseNumber").val($("#HouseNumber").val());
            $("#LegalBuildType").val($("#BuildType").val());                            
            $("#LegalBuildNumber").val($("#BuildNumber").val()); 
            $("#LegalFlatType").val($("#FlatType").val()); 
            $("#LegalFlatNumber").val($("#FlatNumber").val()); 

            $("#LegalAddress").val($("#Address").val());
            $("#LegalAddressLabel").text($("#Address").val());                
        }

        if(Type == 2)
        {
            $("#FactPostIndex").val($("#PostIndex").val());
            $("#FactRegionCode").val($("#RegionCode").val());
            $("#FactAreaCode").val($("#AreaCode").val());
            $("#FactCityCode").val($("#CityCode").val());
            $("#FactSettlementCode").val($("#SettlementCode").val());
            $("#FactStreetCode").val($("#StreetCode").val());
            $("#FactHouseType").val($("#HouseType").val());
            $("#FactHouseNumber").val($("#HouseNumber").val());
            $("#FactBuildType").val($("#BuildType").val());                            
            $("#FactBuildNumber").val($("#BuildNumber").val()); 
            $("#FactFlatType").val($("#FlatType").val()); 
            $("#FactFlatNumber").val($("#FlatNumber").val()); 

            $("#FactAddress").val($("#Address").val());
            $("#FactAddressLabel").text($("#Address").val());                
        }
    }

    function CreateAddressDialog(Type) {
        if (Type == null) return;
        var title = "Адрес";
        //если уже вызывалось модальное окно, то не создаем его, а открываем уже существующее
        if (OldAddressType == Type)
        {
            if($("#divDetailDialog").length){
                $("#divDetailDialog").dialog("open");
                return;
            }
        }
        else  //если окно вызывается из другого места и уже существует готовый экземпляр, то убиваем его
        {
            if($("#divDetailDialog").length){
                $("#divDetailDialog").dialog("destroy").remove();
            }
        }
        
        OldAddressType = Type;

        var elem = document.createElement('div');
        elem.id = "divDetailDialog";
        var newDiv = $(elem);

        var actionDetailDialogUrl = "@Url.Action("Address", "StaffList")";

        actionDetailDialogUrl += GetParamStr(Type);
      

        $(newDiv).text('Подождите, идет загрузка данных ...');
        $.ajaxSetup({ cache: false });
        $(newDiv).load(actionDetailDialogUrl
            , function (response, status, xhr) {
                if (status == "error") {
                    var msg = "Произошла ошибка: ";
                    $(newDiv).html("<div style='color:Red'>" + msg + xhr.status + " " + xhr.statusText + "</div>");
                }
            }
        );

        $(newDiv).dialog(
        { // initialize dialog box
            autoOpen: false,
            modal: true,
            //title: title,     
            // fix IE6  
            bgiframe: true,
            draggable: false,
            resizable: false,
            width: 700,
            height: 450,
            closeOnEscape: false,
            close: function (event, ui) {
                //$(this).dialog("destroy").remove();
            },
            buttons:
            {
                "OK": function () {
                    SaveKladrParam(Type);
                    $(this).dialog("close");
                }
                ,
                "Отмена": function () {
                    $(this).dialog("close");
                }
            }
        });

        //убрал заголовок окна, потому что он пропадает, если после вызова модального окна использовать поверх еще одно модальное окно в качестве индикатора загрузки данных
        $(".ui-dialog-titlebar").hide();
        $(".ui-dialog-titlebar-close").hide();

        $(newDiv).dialog("open");

    }
</script>

