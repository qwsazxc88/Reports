@model Reports.Presenters.UI.ViewModel.StaffList.TreeGridAjaxModel
@using Reports.Presenters.UI.Bl.Impl;
@using Reports.Core.Domain;

@{
    Layout = "~/Views/Shared/_LayoutStaffList.cshtml";
    ViewBag.Title = "TreeGridAjax";
}

<h2>Структура подразделений с подзагрузкой в табличном виде</h2>


<style>
    .collapse 
    {
        width:15px;
        background-image: url('../../Content/themes/base/ui-icons_454545_256x240.png');
        background-repeat:no-repeat;
        background-position: -36px -17px;
        display:inline-block;
        cursor:pointer;
    }
    .expand
    {
        width:15px;
        background-image: url('../../Content/themes/base/ui-icons_454545_256x240.png');
        background-repeat:no-repeat;
        background-position: -50px -17px;
        display:inline-block;
        cursor:pointer;   
    }
    .Acollapse 
    {
        width:15px;
        display:inline-block;
        cursor:pointer;
    }
    .Aexpand
    {
        width:15px;
        display:inline-block;
        cursor:pointer;   
    }
    .treeview ul
    {
        font:14px Arial Sans-Serif;
        margin:0px;
        padding-left:20px;
        list-style:none;
    }
    .treeview > li > a
    {
        font-weight:bold;
    }
    .treeview li
    {
    }
    .treeview li a
    {
        padding:4px;
        font-size:12px;
        display:inline-block;
        text-decoration:none;
        width:auto;
    }
</style>
@using (Html.BeginForm("TreeViewAjax", "StaffList", FormMethod.Post, new { enctype = "multipart/form-data", id = "Tree-View-Ajax-form" }))
{
    @Html.HiddenFor(m => m.DepId)

    <div style="border:solid 1px black; padding:10px; background-color:#FAFAFA;">
        
        <table id="tbl" class="grid">
            <tr>
                <th>Подразделение</th>
                <th>Код</th>
                <th>Путь</th>
                <th>Уровень</th>
            </tr>
            
            @{ int i = 0; }
            @foreach (var item in Model.Departments)
            {
                <tr id="tr-@item.Code.Trim()" accessKey="@item.Path.Trim()">
                <td>
                    <span>
                        <a class="Acollapsible" accessKey="@item.Path.Trim()" href="#" id="getnodes-@item.Code.Trim()" onclick="GetNodes(@item.Code.Trim());"><span class="collapse collapsible">&nbsp;</span> @item.Name.ToUpper()</a>
                    </span>
                </td>
                <td>@item.Code1C</td>
                <td>@item.Path</td>
                <td>@item.ItemLevel</td>
                </tr>
            }
            @{ i++; }
        </table>             
        <table>
        </table>
    </div>
}


<script type="text/javascript">
    $(document).ready(function () {
        setActiveMenuItem("moTreeGridAjax");

        //для эффекта раскрытой ветки
        $(".Acollapsible").click(function (e) {
            e.preventDefault();
            $(this).children('span').toggleClass("collapse expand");
            $(this).closest('li').children('ul').slideToggle();
        })
        
    });

    function GetNodes(Id) {
        //чтобы не подгружались данные вторично
        if($("#getnodes-" + Id).hasClass("IsLoading")){
            //перебираем строковые элементы страницы
            $("tr").each(function(){
                if (this.id == "tr-" + Id){
                    //console.log(this);
                }
                else{
                    //по пути определяем нужные строки и по наличию класса показываем/скрываем их
                    if (this.accessKey.indexOf(Id + ".") > -1){
                        if($("#" + this.id).hasClass("IsVisible")){
                            $("#" + this.id).removeClass("IsVisible");
                            $("#" + this.id).hide();
                        }
                        else{
                            $("#" + this.id).addClass("IsVisible");
                            $("#" + this.id).show();
                        }
                        //this.hide();
                    }
                }
            });
            return;
        }
        else{$("#getnodes-" + Id).addClass("IsLoading");}

        var actionUrl="@Url.Action("TreeViewAjax", "StaffList")";
            $("#DepId").val(Id);
            var dataToSend = $("#Tree-View-Ajax-form").serialize();

            jQuery.ajax({
                url: actionUrl,
                type: 'POST',
                dataType: 'json',
                data: dataToSend,
                success: function(result){
                    var $liParent = $("#li-" + Id.toString());
                    var ResultStr = "";
                    var tblStr = "";

                    for (var i = 0; i < result.length; i++)
                    {   
                        tblStr = "<tr id='tr-" + result[i].Code.trim() + "' accessKey='" + result[i].Path.trim() + "' class='IsVisible'>" +
                                  "<td>" +
                                    "<span>";
                                        var BSCount = (result[i].ItemLevel - 2) * 4; //отступ от левого края каждого вложения на 4 пробела больше родительского
                                        for (var j = 0; j < BSCount; j++)
                                        {
                                            tblStr += "&nbsp;";
                                        }
                                        tblStr += "<a class='Acollapsible' accessKey='" + result[i].Path.trim() + "' href='#' id='getnodes-" + result[i].Code.trim() + "' onclick='GetNodes(" + result[i].Code.trim() + ");'>" +
                                        "<span Id='span-tr'" + result[i].Code.trim() + "' class='collapse collapsible'>&nbsp;</span> " + result[i].Name + "</a>" +
                                    "</span>" +
                                    "</td>" + 
                                    "<td>" + result[i].Code.trim() + "</td>" +
                                    "<td>" + result[i].Path + "</td>" +
                                    "<td>" + result[i].ItemLevel + "</td>" +
                                    "</tr>";

                        var ParentRowName = "#tr-" + (i == 0 ? Id : result[i - 1].Code.trim());//определяем Id строки после которой нужно добавить новую строку
                        $(ParentRowName).after(tblStr);//вставляем новую строку

                        $("#span" + result[i].Code.trim()).removeClass("collapse collapsible");
                        $("#getnodes-" + result[i].Code.trim()).removeClass("Acollapsible");

                        //для седьмого уровня не надо обработчик
                        if (result[i].ItemLevel < 7){
                            $("#span" + result[i].Code.trim()).addClass("collapse collapsible");
                            $("#getnodes-" + result[i].Code.trim()).addClass("Acollapsible");
                            //console.log(ResultStr);
                            //назначаем обработчик для раскрытия веток дерева
                            $("#getnodes-" + result[i].Code.trim()).click(function (e) {
                                e.preventDefault();
                                $(this).children('span').toggleClass("collapse expand");
                                $(this).closest('li').children('ul').slideToggle();
                            });
                        }
                    }
                },
                error: function(){
                    alert("При загрузке данных произошла ошибка.");
                }
            });
    }

</script>