@model Reports.Presenters.UI.ViewModel.StaffList.StaffDepartmentBranchModel
@{
    ViewBag.Title = "Справочник филиалов";
}

@using (Html.BeginForm("StaffDepartmentBranch", "StaffList", FormMethod.Post, new { enctype = "multipart/form-data", id = "StaffDepartmentBranchForm", target = "tab1" }))
{
    <h3>@Html.ValidationMessageFor(m => m.MessageStr)</h3>
    
    <div style="border:solid 1px black; padding:10px; background-color:#FAFAFA;">
        <table id="tblBranch" class="grid">
            <thead>
                <tr>
                    <th colspan="2">Финград</th>
                    <th rowspan="2">Название филиала в СКД</th>
                    <th rowspan="2" class="tdBtn">Редактировать</th>
                    <th rowspan="2" class="tdBtn">Удалить</th>
                </tr>    
                <tr>
                    <th>Название филиала</th>
                    <th>Код филиала</th>
                </tr>
            </thead>
            <tbody id="tblBranchRows">
                @{ int i = 1; }
                @{string ln = "";}
                @{string bn = "";}
                @{string dn = "";}

                @foreach (var item in Model.Branches)
                {
                    <tr>
                        <td>
                            @Html.HiddenFor(m => m.Branches[i - 1].Id)
                            @Html.TextBoxFor(m => m.Branches[i - 1].Name, new { style = "display:none;width:99%", maxlength = "50" })

                            @{ln = "lblName_" + @Convert.ToString(i - 1);}
                            <label id=@ln>@item.Name</label>
                            @Html.ValidationMessageFor(m => m.Branches[i - 1].Name)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.Branches[i - 1].Code, new { style = "display:none;width:25px", maxlength = "2" })

                            @{ln = "lblCode_" + @Convert.ToString(i - 1);}
                            <label id=@ln>@item.Code</label>
                            @Html.ValidationMessageFor(m => m.Branches[i - 1].Code)
                        </td>
                        <td>
                            @{ln = "lblDepName_" + @Convert.ToString(i - 1);}
                            <label id=@ln>@(item.DepName != null ? item.DepName : "")</label>

                            @{dn = "dropdown_" + @Convert.ToString(i - 1);}
                            @Html.DropDownListFor(m => m.Branches[i - 1].DepartmentId, new SelectList(Model.TwoLevelDeps, "Id", "Name"), new { id = @dn, style = "width:99%;display:none;", onchange = "SetDepartmentValue(" + @i + "-1);" }) 
                            @Html.HiddenFor(m => m.Branches[i - 1].DepartmentId)
                            @Html.HiddenFor(m => m.Branches[i - 1].OldDepartmentId)
                            @Html.HiddenFor(m => m.Branches[i - 1].OldDepName)
                        </td>
                        <td class="tdBtn">
                            @{bn = "btnEdit_" + @Convert.ToString(i - 1);}
                            <button id=@bn type="button" class="btnDepEdit" style="background-image: url('../../Content/themes/base/ui-icons_454545_256x240.png');background-position: -45px -82px;" title="Редактировать" onclick="EditModeOnOff(@i-1, true);"></button>
                            @{bn = "btnCancel_" + @Convert.ToString(i - 1);}
                            <button id=@bn type="button" class="btnDepEdit" style="background-image: url('../../Content/themes/base/ui-icons_454545_256x240.png');background-position: 4px -178px;display:none" title="Отменить" onclick="EditModeOnOff(@i-1, false);"></button>
                            @{bn = "btnSave_" + @Convert.ToString(i - 1);}
                            <button id=@bn type="button" class="btnDepEdit" style="background-image: url('../../Content/themes/base/ui-icons_454545_256x240.png');background-position: -61px -115px;display:none" title="Сохранить" onclick="SaveChange();"></button>
                        </td>
                        <td class="tdBtn">
                            <button type="button" class="btnDepDelete" style="background-image: url('../../Content/themes/base/ui-icons_454545_256x240.png');background-position: -77px -131px;" title="Удалить" onclick="DeleteLink(@item.Id);"></button>
                        </td>
                        @{ i++; }
                    </tr>
                }
                
            </tbody>
        </table>
    </div>
    
    @*<div id="DivIndicator" style="display:none;">
        <table>
            <tr>
                <td><span id="LoadingIndicator2"></span></td>
                <td><label>Идет загрузка данных...</label></td>
            </tr>
        </table>
    </div>*@
}

<div id="AddEditRow" style="display:none;">
    @using (Html.BeginForm("TestStaffDepartmentBranch", "StaffList", FormMethod.Post))
    {
        <table>
            <tr>
                @Html.HiddenFor(m => m.Id)
                <td>@Html.LabelFor(m => m.Name)</td>
                <td>@Html.TextBoxFor(m => m.Name) @Html.ValidationMessageFor(m => m.Name)</td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.Code)</td>
                <td>@Html.TextBoxFor(m => m.Code, new { style = "width:25px", maxlength = "2" }) @Html.ValidationMessageFor(m => m.Code)</td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.DepartmentId)</td>
                <td>@Html.DropDownListFor(m => m.DepartmentId, new SelectList(Model.TwoLevelDeps, "Id", "Name"))</td>
            </tr>
        </table>
    }
        
</div>

<script type="text/javascript">
    var EditModeOn = false;
    $(document).ready(function () {
        setActiveMenuItem("moDepEncoding");

        //$.ajaxSetup({ cache: false });
        
        $(document).tooltip({ track: false });

        //ShowFlash(true);
        //ShowFlash(false);
        $(":button").button();
    });

    //вкл/выкл режима редактирования
    function EditModeOnOff(IndexRow, IsOn) {

        $("#Id").val($("#Branches_" + IndexRow + "__Id").val());
        $("#Name").val($("#Branches_" + IndexRow + "__Name").val());
        $("#Code").val($("#Branches_" + IndexRow + "__Code").val());
        $("#DepartmentId").val($("#Branches_" + IndexRow + "__DepartmentId").val());


        CreateEdtRowDialog(true);
//        if (IsOn == true) {
//            if (EditModeOn) { return; }
//            EditModeOn = IsOn;

//            $("#lblName_" + IndexRow).hide();
//            $("#Branches_" + IndexRow + "__Name").show();
//            $("#lblCode_" + IndexRow).hide();
//            $("#Branches_" + IndexRow + "__Code").show();
//            $("#lblDepName_" + IndexRow).hide();
//            $("#dropdown_" + IndexRow).show();
//            $("#dropdown_" + IndexRow).val($("#Branches_" + IndexRow + "__DepartmentId").val());
//            $("#btnEdit_" + IndexRow).hide();
//            $("#btnSave_" + IndexRow).show();
//            $("#btnCancel_" + IndexRow).show();
//        }
//        else {
//            EditModeOn = IsOn;
//            $("#lblName_" + IndexRow).show();
//            $("#Branches_" + IndexRow + "__Name").hide();
//            $("#lblCode_" + IndexRow).show();
//            $("#Branches_" + IndexRow + "__Code").hide();
//            $("#lblDepName_" + IndexRow).show();
//            $("#dropdown_" + IndexRow).hide();
//            $("#btnEdit_" + IndexRow).show();
//            $("#btnSave_" + IndexRow).hide();
//            $("#btnCancel_" + IndexRow).hide();
//            //возвращаем старые значения
//            $("#Branches_" + IndexRow + "__DepartmentId").val($("#Branches_" + IndexRow + "__OldDepartmentId").val());
//            $("#lblDepName_" + IndexRow).text($("#Branches_" + IndexRow + "__OldDepName").val());
//        }
    }

    //присваиваем новое значение выбранное в выпадающем списке
    function SetDepartmentValue(IndexRow) {
        $("#Branches_" + IndexRow + "__Department_Id").val($("#dropdown_" + IndexRow).val());
        $("#lblDepName_" + IndexRow).text($("#dropdown_" + IndexRow + " option:selected").text());
    }


    function SaveChange() {
        //$("#StaffDepartmentBranchForm").submit();
        AjaxFormRequest("tab1", "StaffDepartmentBranchForm", "/StaffList/StaffDepartmentBranch", "POST");
    }


    function DeleteLink(Id) {
        if (!EditModeOn) {
            $("#StaffDepartmentBranchForm").submit();
        }
    }

    function CreateEdtRowDialog(flgEdit) {
        var Title = (flgEdit ? "Редактирование строки" : "Создание новой строки");
        $('#AddEditRow').dialog(
        {
            autoOpen: false,
            modal: true,
            title: Title,
            width: "auto",
            draggable: false,
            resizable: false,
            buttons:
            {
                "OK": function () {
                    processAddEditRow();
                    $(this).dialog("close");
                },
                "Отмена": function () {
                    $(this).dialog("close");
                }
            }
        });

        $('#AddEditRow').dialog("open");
    }

    var processAddEditRow = function()
    {
        var url = "@Url.Action("TestStaffDepartmentBranch", "StaffList")";
        var dataToSend = $("#AddEditRow form").serialize();
        $.post(url, dataToSend, function(dataReceived){
            var $table = $("#tblBranch");
            var $rows = $("#tblBranchRows");
            $rows.remove();
            for (var i = 0; i < dataReceived.length; i++)
            {
                $table.append(
                    "<tr class=\"tblBranchRows\"><td>" +
                    (dataReceived[i].Name ? dataReceived[i].Name : "") + "</td><td>" +
                    (dataReceived[i].Code ? dataReceived[i].Code : "") + "</td><td>" +
                    (dataReceived[i].DepName ? dataReceived[i].DepName : "") + "</td>" +
                    "<td></td>" + 
                    "<td></td>"
                    //"<a onclick='DeleteNameChange(" + dataReceived[i].Id + ");' href='#' data-index=" + dataReceived[i].Id + ">Удалить</a></td></tr>"
                );
            }
        }, "json");
    };

//    function DeleteRow(Id){
//        var actionUrl="@Url.Action("TestStaffDepartmentBranch", "StaffList")";
//        var url = actionUrl + "?NameID=" + Id;

//        var dataToSend = $("#add-name-change-dialog form").serialize();
//            $.post(url, dataToSend, function(dataReceived){
//                var $table = $("#name-changes-container>table");
//                var $rows = $("#name-changes-container>table .name-change-row");
//                $rows.remove();
//                for (var i = 0; i < dataReceived.length; i++)
//                {
//                    $table.append(
//                        "<tr class=\"name-change-row\"><td>" +
//                        (dataReceived[i].PreviousName ? dataReceived[i].PreviousName : "") + "</td><td>" +
//                        UIHelpers.convertMSJsonDateToShortDateString(dataReceived[i].Date) + "</td><td>" +
//                        (dataReceived[i].Place ? dataReceived[i].Place : "") + "</td><td>" +
//                        (dataReceived[i].Reason ? dataReceived[i].Reason : "") + "</td><td>" +
//                        "<a onclick='DeleteNameChange(" + dataReceived[i].Id + ");' href='#' data-index=" + dataReceived[i].Id + ">Удалить</a></td></tr>"
//                    );
//                }
//            }, "json");
//    }


//    function ShowFlash(IsShow)  //показываем индикатор загрузки
//    {
//        if (!IsShow) {
//            $("#LoadingIndicator2").removeClass("loading2");
//            $("#DivIndicator").dialog("close");
//            $("#DivIndicator").hide();
//        }
//        else {
//            $("#LoadingIndicator2").addClass("loading2");
//            $("#DivIndicator").show();
//            $("#DivIndicator").dialog(
//            { // initialize dialog box
//                autoOpen: true,
//                modal: true,
//                // fix IE6  
//                bgiframe: true,
//                draggable: false,
//                resizable: false,
//                width: 300,
//                height: 60,
//                closeOnEscape: false,
//                close: function (event, ui) {
//                    //$(this).dialog("destroy").remove();
//                }
//            });
//            $(".ui-dialog-titlebar").hide();
//            $(".ui-dialog-titlebar-close").hide();
//        }
//    }

//    //функция отправки и получения ajax-запроса
//    function AjaxFormRequest(result_id, form_id, url, TypePost) {
//        jQuery.ajax({
//            url: url, //Адрес подгружаемой страницы
//            type: TypePost, //Тип запроса
//            dataType: "html", //Тип данных
//            data: jQuery("#" + form_id).serialize(),
//            success: function (response) { //Если все нормально
//                document.getElementById(result_id).innerHTML = response;
//            },
//            error: function (response) { //Если ошибка
//                document.getElementById(result_id).innerHTML = "Ошибка при отправке формы";
//            }
//        });
//    }
</script>

