@model Reports.Presenters.UI.ViewModel.RequestAttachmentsModel
@*<script src="@Url.Content("~/Scripts/jquery.upload-1.0.2.min.js")" type="text/javascript"></script>*@

@Html.HiddenFor(model => model.AttachmentRequestId)      
@Html.HiddenFor(model => model.AttachmentRequestTypeId)          
<table id="AttachmentDialogTable" style="width: 100%;">
        <tr>
            <td colspan="2">
               
                <input type="button" value="Прикрепить файл" @if (!Model.IsAddAvailable){ <text>style = "display:none"</text>;} id="AddAttachment" onclick="OnAddAttachment('');"/>
            </td>
        </tr>
        <tr>
            <td colspan="2">Прикрепленные файлы</td>
        </tr>
        <tr>
            <td colspan="2">
                <div id="AttachmentError" style="color:Red" visible="false"/>
            </td>    
        </tr>    
        @if (Model != null && Model.Attachments != null && Model.Attachments.Count > 0)
        {
            int i = 0;
            <tr>
                <td>Файл</td>         
                <td></td>  
            </tr>   

                    foreach (var attach in Model.Attachments)
                    {
                        var bkColor = i++ % 2 == 0 ? "#e8e8e8" : "transparent";
                    <tr style="background-color:@bkColor">
                       @* <td>@attach.Description</td>*@
                        <td>
                            <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = attach.AttachmentId })' style="cursor:hand" target="_blank" >@attach.Description</a>
                        </td>         
                        <td>
                            @if (attach.IsDeleteAvailable)
                            {<text><a class="ui-notify-close" onclick="return deleteAttachmentPartial(@attach.AttachmentId);" href='' style="cursor:hand" target="_blank" >Удалить</a></text>}
                         </td>  
                    </tr>   
                    }
        }
</table>

@*<input  type="button"  id="btnRender" value="Срендерить" onclick="Render();"/>*@

<script type="text/javascript">
//$(document).ready(function () {
//});
    function RenderAttachments() {
        var actionUrl="@Url.Action("RenderAttachments", "Help")";
        var documentId = $("#AttachmentRequestId").val();
        var typeId = $("#AttachmentRequestTypeId").val();
        var url = actionUrl + "?id=" + documentId+"&typeId="+typeId+"&dummy=" + new Date().getTime();
        $("#AttachmentModelContext").load(url);
    }
    function OnAddAttachment(name) {
        createAttachmentDialog(0,name);
    }
    function createAttachmentDialog(id,name) 
    {
        var elem = document.createElement('div');
        elem.id = "divAttachmentDialog";
        var newDiv = $(elem);
        var documentId = $("#AttachmentRequestId").val();
        var typeId = $("#AttachmentRequestTypeId").val();

        var title =  "Прикрепление нового файла";
        $(newDiv).text('Подождите, идет загрузка данных ...'); 
        $.ajaxSetup({cache: false});
        $(newDiv).load("@Url.Action("AddAttachmentDialog", "Help")?id=" + documentId + "&typeId="+typeId  + "&name=" + escapeJson(name) + " #AttachmentDialogTable");
        $(newDiv).dialog(
        { // initialize dialog box
            autoOpen: true,
            modal: true,
            title: title,
            // fix IE6  
            bgiframe: true, 
            draggable: false,
            resizable: false,
            width: 750,
	        height: 220,
            close: function (event, ui) {
                $(this).dialog("destroy").remove();
            },
            open: function(event, ui) {
                timedSetupUploader();
            },
            buttons:
            {
                "Отмена": function () {
                    $(this).dialog("close");
                }
            }
        });
    }
    function timedSetupUploader()
    {
            elem = document.getElementById('file-uploader');
            if(elem == null)
            {
                setTimeout(function()   {
                    timedSetupUploader();
                }, 100);    
            }
            else
                setupUploader();
    }
    function ValidateAttachment()
    {
        if(trimSpaces($("#Description").val()) == "")
        {
            addAttachmentError("Описание - обязательное поле");
            return false;
        }
        return true;
    }
    function addAttachmentError(value) {
    $("#AddAttachmentError").text(value);
    $("#AddAttachmentError").show();
}
function clearAttachmentErrors() {
    $("#AddAttachmentError").text("");
    $("#AddAttachmentError").hide();
}
function setupUploader()
{
    var uploader = new qq.FileUploader(
    {
        // pass the dom node (ex. $(selector)[0] for jQuery users)
        element: document.getElementById('file-uploader'),
        // path to server-side upload script      
        action: "@Url.Action("SaveAttachment", "Help")",
        sizeLimit: 2097152,
        onSubmit: function (id, fileName) {
            if(!ValidateAttachment())
                return false;
            clearAttachmentErrors();
            $('.qq-upload-list').hide();
            var description = $('#Description').val();
            var id = $('#DocumentId').val();
            var type = $('#AttachmentRequestTypeId').val();
            uploader.setParams({
                id: id
                ,type:type
                ,Description: description
            });
        },
        onProgress: function (id, fileName, loaded, total) {
            $('.qq-upload-list').hide();
        },
        onComplete: function (id, fileName, responseJSON) {
            $('.qq-upload-list').hide();
            if(responseJSON == "")
            {
                addAttachmentError("Ошибка асинхронного запроса - не был получен ответ.");
                return;
            }
            var result = responseJSON; //JSON.parse("{"+responseJSON+"}");  
            if(((result.success != undefined) && (!result.success)) || !result.Result)
            {
                if((result.success != undefined) && (!result.success))
                    addAttachmentError("Ошибка - не получен ответ сервера.");
                else
                    addAttachmentError(result.Error);
            }
            else
            {
                clearAttachmentErrors();
                $("#divAttachmentDialog").dialog("close");
                RenderAttachments();
            }    
        },
        debug: true
    });
}
    function deleteAttachmentPartial(id){
        var actionUrl="@Url.Action("DeleteAttachment", "Help")";
        var url = actionUrl + "?Id=" + id;
        $.getJSON(url,
                       function (result) {
                            if(!result.Result){
                                $("#AttachmentError").text(result.Error);
                                $("#AttachmentError").show(); 
                            }
                            else{
                                $("#AttachmentError").text("");
                                $("#AttachmentError").hide();                                 
                           }
                           RenderAttachments();
                       }
                     );
        return false;
    }
//setupUploader();
</script>