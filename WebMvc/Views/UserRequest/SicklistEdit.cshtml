@model Reports.Presenters.UI.ViewModel.SicklistEditModel
@{
    ViewBag.Title = "Редактирование больничного(неявки)";
}

@using (Html.BeginForm("SicklistEdit", "UserRequest", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="doc-wrap">
    <table style="width:100%">
    <tr>
        <td colspan="2">
            @Html.ValidationSummary(false)
            <div id="Error" style="color:Red;display:none;"></div>
        </td>
    </tr>
    <tr>
        <td colspan="2">
            @Html.Partial("../UserInfoView", Model)
        </td>
    </tr>
    @if (Model.IsDeleted)
    { 
        <tr>
            <td colspan="2" style="color:Red;">Заявка отклонена</td>
        </tr>
    }
    <tr>
        <td>
            <input type="hidden" id="Id" name="Id" value="@Model.Id" />
            <input type="hidden" id="Version" name="Version" value="@Model.Version" />
             <input type="hidden" id="UserId" name="UserId" value="@Model.UserId" />
            <input type="hidden" id="IsSaveAvailable" name="IsSaveAvailable" value="@Model.IsSaveAvailable" />
            <input type="hidden" id="IsDeleteAvailable" name="IsDeleteAvailable" value="@Model.IsDeleteAvailable" />
            <input type="hidden" id="IsDelete" name="IsDelete" value="@Model.IsDelete" />
            <input type="hidden" id="IsDeleted" name="IsDeleted" value="@Model.IsDeleted" />
            <input type="hidden" id="IsTypeEditable" name="IsTypeEditable" value="@Model.IsTypeEditable" />
            <input type="hidden" id="IsDatesEditable" name="IsDatesEditable" value="@Model.IsDatesEditable" />
            <input type="hidden" id="IsTimesheetStatusEditable" name="IsTimesheetStatusEditable" value="@Model.IsTimesheetStatusEditable" />
            <input type="hidden" id="IsPersonnelFieldsEditable" name="IsPersonnelFieldsEditable" value="@Model.IsPersonnelFieldsEditable" />
            <input type="hidden" id="TimesheetStatusIdHidden" name="TimesheetStatusIdHidden" value="@Model.TimesheetStatusIdHidden" />
            <input type="hidden" id="TypeIdHidden" name="TypeIdHidden" value="@Model.TypeIdHidden" />
            <input type="hidden" id="BabyMindingTypeIdHidden" name="BabyMindingTypeIdHidden" value="@Model.BabyMindingTypeIdHidden" />
            <input type="hidden" id="DaysCountHidden" name="DaysCountHidden" value="@Model.DaysCountHidden" />
            <input type="hidden" id="SicklistTypeIdBabyMindingHidden" name="SicklistTypeIdBabyMindingHidden" value="@Model.SicklistTypeIdBabyMindingHidden" />
            @Html.LabelFor(m => m.TypeId):
        </td>
        <td>
            @Html.DropDownListFor(model => model.TypeId, new SelectList(Model.Types, "ID", "Name"), Model.IsTypeEditable ? null : (object)new { disabled = "disabled" }) 
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.BabyMindingTypeId):
        </td>
        <td>
            @Html.DropDownListFor(model => model.BabyMindingTypeId, new SelectList(Model.BabyMindingTypes, "ID", "Name"), Model.IsBabyMindingTypeEditable ? null : (object)new { disabled = "disabled" }) 
        </td>
    </tr>
    <tr>
        <td style="width:300px">
            @Html.LabelFor(m => m.SicklistNumber):
        </td>
        <td>
            @Html.TextBoxFor(model => model.SicklistNumber, Model.IsDatesEditable ? null : (object)new { @readonly = "readonly" })
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.BeginDate):
        </td>
        <td>
            @if (Model.IsDatesEditable)
            {
                @Html.EditorFor(model => model.BeginDate) 
            }
            else
            {
                @Html.DisplayFor(model => model.BeginDate)
                @Html.HiddenFor(model => model.BeginDate)
            } 
        </td>
     </tr>
     <tr>
        <td>
            @Html.LabelFor(m => m.EndDate):
        </td>
        <td>
            @if (Model.IsDatesEditable)
            {
                @Html.EditorFor(model => model.EndDate)
            }
            else
            {
                @Html.DisplayFor(model => model.EndDate)
                @Html.HiddenFor(model => model.EndDate)
            } 
         </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.PaymentBeginDate):
        </td>
        <td>
            @if (Model.IsPersonnelFieldsEditable)
            {
                @Html.EditorFor(model => model.PaymentBeginDate)
            }
            else
            {
                @Html.DisplayFor(model => model.PaymentBeginDate)
                @Html.HiddenFor(model => model.PaymentBeginDate)
            } 
         </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.DaysCount):
        </td>
        <td>
            @Html.DisplayFor(model => model.DaysCount)  
         </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.ExperienceYears):
        </td>
        <td>
          @*  @if (Model.IsPersonnelFieldsEditable)
            {
                @Html.EditorFor(model => model.ExperienceYears) if (Model.IsPersonnelFieldsEditable || !string.IsNullOrEmpty(Model.ExperienceYears))
                                                                {<text> лет</text>} 
                @Html.EditorFor(model => model.ExperienceMonthes) if (Model.IsPersonnelFieldsEditable || !string.IsNullOrEmpty(Model.ExperienceMonthes))
                                                                  {<text> месяцев</text>}
            }
            else
            {
                @Html.DisplayFor(model => model.ExperienceYears) if (Model.IsPersonnelFieldsEditable || !string.IsNullOrEmpty(Model.ExperienceYears))
                                                                 { <text> лет</text>} 
                @Html.DisplayFor(model => model.ExperienceMonthes) if (Model.IsPersonnelFieldsEditable || !string.IsNullOrEmpty(Model.ExperienceMonthes))
                                                                   { <text> месяцев</text>}
                @Html.HiddenFor(model => model.ExperienceYears)
                @Html.HiddenFor(model => model.ExperienceMonthes)
            } *@
            @Html.TextBoxFor(model => model.ExperienceYears, Model.IsPersonnelFieldsEditable ? null : (object)new { @readonly = "readonly" }) лет
            @Html.TextBoxFor(model => model.ExperienceMonthes, Model.IsPersonnelFieldsEditable ? null : (object)new { @readonly = "readonly" }) месяцев 
         </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.PaymentPercentTypeId):
        </td>
        <td>
            @Html.DropDownListFor(model => model.PaymentPercentTypeId, new SelectList(Model.PaymentPercentTypes, "ID", "Name"), Model.IsPersonnelFieldsEditable ? null : (object)new { disabled = "disabled" }) 
            <input type="hidden" id="PaymentPercentTypeIdHidden" name="PaymentPercentTypeIdHidden" value="@Model.PaymentPercentTypeIdHidden" />
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.PaymentRestrictTypeId):
        </td>
        <td>
            @Html.DropDownListFor(model => model.PaymentRestrictTypeId, new SelectList(Model.PaymentRestrictTypes, "ID", "Name"), (object)new { disabled = "disabled" }) 
            <input type="hidden" id="PaymentRestrictTypeIdHidden" name="PaymentRestrictTypeIdHidden" value="@Model.PaymentRestrictTypeIdHidden" />
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.PaymentDecreaseDate):
        </td>
        <td>
@*            @if (Model.IsPersonnelFieldsEditable)
            {
                @Html.EditorFor(model => model.PaymentDecreaseDate)
            }
            else
            {
*@              @Html.DisplayFor(model => model.PaymentDecreaseDate)
                @Html.HiddenFor(model => model.PaymentDecreaseDate)
@*            } *@
         </td>
    </tr>
    <tr>
            <td colspan="2">
                @Html.CheckBox("IsContinued", Model.IsContinued, Model.IsDatesEditable ? null : (object)new { disabled = "disabled" }) 
                @Html.LabelFor(model => model.IsContinued)
                @if (!Model.IsDatesEditable)
                {
                    <input type="hidden" id="IsContinuedHidden" name="IsContinuedHidden" value="@Model.IsContinuedHidden" />
                }
            </td>
    </tr>
    <tr>
            <td colspan="2">
                @Html.CheckBox("IsPreviousPaymentCounted", Model.IsPreviousPaymentCounted, Model.IsPersonnelFieldsEditable ? null : (object)new { disabled = "disabled" }) 
                @Html.LabelFor(model => model.IsPreviousPaymentCounted)
                @if (!Model.IsPersonnelFieldsEditable)
                {
                    <input type="hidden" id="IsPreviousPaymentCountedHidden" name="IsPreviousPaymentCountedHidden" value="@Model.IsPreviousPaymentCountedHidden" />
                }
            </td>
    </tr>
@*     <tr>
            <td colspan="2">
                @Html.CheckBox("Is2010Calculate", Model.Is2010Calculate, Model.IsPersonnelFieldsEditable ? null : (object)new { disabled = "disabled" }) 
                @Html.LabelFor(model => model.Is2010Calculate)
                @if (!Model.IsPersonnelFieldsEditable)
                {
                    <input type="hidden" id="Is2010CalculateHidden" name="Is2010CalculateHidden" value="@Model.Is2010CalculateHidden" />
                }
            </td>
    </tr>*@ 
   <tr>
            <td colspan="2">
                @Html.CheckBox("IsAddToFullPayment", Model.IsAddToFullPayment, Model.IsPersonnelFieldsEditable ? null : (object)new { disabled = "disabled" }) 
                @Html.LabelFor(model => model.IsAddToFullPayment)
                @if (!Model.IsPersonnelFieldsEditable)
                {
                    <input type="hidden" id="IsAddToFullPaymentHidden" name="IsAddToFullPaymentHidden" value="@Model.IsAddToFullPaymentHidden" />
                }
            </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.TimesheetStatusId):
        </td>
@*    </tr>
    <tr>*@
        <td>
            @Html.DropDownListFor(model => model.TimesheetStatusId, new SelectList(Model.TimesheetStatuses, "ID", "Name"), Model.IsTimesheetStatusEditable ? null : (object)new { disabled = "disabled" }) 
        </td>
    </tr>
    <tr>
        <td colspan="2">
           
        </td>
    </tr>
    <tr>
        <td colspan="2">
            @Html.LabelFor(m => m.CreatorLogin):
       @* </td>
        <td>*@
            @Html.DisplayFor(model => model.CreatorLogin) 
         </td>
    </tr>
    <tr>
        <td colspan="2" style="height:5px">
        </td>
    </tr>
    <tr>
        <td colspan="2">@Html.LabelFor(model => model.Attachment):
@*        </td>
        <td>*@
            @if (!string.IsNullOrEmpty(Model.Attachment))
            {
                <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.AttachmentId })' style="cursor:hand" target="_blank" >@Model.Attachment</a>
                <input type="hidden" id="Attachment" name="Attachment" value="@Model.Attachment" />
                <input type="hidden" id="AttachmentId" name="AttachmentId" value="@Model.AttachmentId" />
               @* <input type="hidden" id="AttachmentTypeId" name="AttachmentTypeId" value="@Model.AttachmentTypeId" />*@
            }
        </td>
    </tr>
    <tr @if ((!Model.IsPersonnelFieldsEditable && !Model.IsDatesEditable) || (Model.Id == 0))
        {<text>style="display:none"</text>}>    
        <td colspan="2">Прикрепить скан документа 
@*        </td>
        <td>*@
        <input id="FileContext" type="file" name="file"/>&nbsp;<span style="color:Red">размер файла - не более 2 Мб</span></td>
    </tr>
     <tr>
        <td colspan="2">
            <input type="submit" value="Записать (черновик)" onclick="return ValidateForm();" @if (!Model.IsSaveAvailable)
                                                                                    {<text>style="display:none"</text>}/>
            <input type="submit" value="Отклонить заявку" onclick="return Delete();" @if (!Model.IsDeleteAvailable)
                                                                            {<text>style="display:none"</text>}/>
            
         </td>
    </tr>
    <tr>
             <td colspan="2" style="height:15px">
             </td>
    </tr>
    <tr>
             <td colspan="2">
                        <input type="hidden" id="IsApproved" name="IsApproved" value="@Model.IsApproved" />
                        <input type="hidden" id="IsApprovedEnable" name="IsApprovedEnable" value="@Model.IsApprovedEnable" />
                        <input type="submit" value="Отправить" onclick="return SetApprovedAndValidateForm();" @if (!Model.IsApprovedEnable)
                                                                        {<text>style="display:none"</text>}/>                    
            </td>
    </tr>
    <tr>
            <td colspan="2">
                <input type="hidden" id="IsApprovedByUserEnable" name="IsApprovedByUserEnable" value="@Model.IsApprovedByUserEnable" />
                <input type="checkbox" id="IsApprovedByUser" disabled = "disabled" name="IsApprovedByUser" @if (Model.IsApprovedByUser) {<text>checked="checked"</text>} />
                @*@Html.CheckBox("IsApprovedByUser", Model.IsApprovedByUser, (object)new { disabled = "disabled" }) *@

                @Html.LabelFor(model => model.IsApprovedByUser)
                @if (!Model.IsApprovedByUserEnable)
                {
                    <input type="hidden" id="IsApprovedByUserHidden" name="IsApprovedByUserHidden" value="@Model.IsApprovedByUser" />
                }
            </td>
@*            <td>
                        <input type="hidden" id="IsApprovedByUserChecked" name="IsApprovedByUserChecked" value="@Model.IsApprovedByUserChecked" />
                        <input type="submit" value="Отправить руководителю" onclick="return SetApprovedAndValidateForm();" @if (!Model.IsApprovedByUserEnable)
                                                                        {<text>style="display:none"</text>}/>                    
            </td>*@
    </tr>
    <tr>
            <td colspan="2">
                <input type="hidden" id="IsApprovedByManagerEnable" name="IsApprovedByManagerEnable" value="@Model.IsApprovedByManagerEnable" />
                @*@Html.CheckBox("IsApprovedByManager", Model.IsApprovedByManager, Model.IsApprovedByManagerEnable ? null : (object)new { disabled = "disabled" }) *@
                <input type="checkbox" id="IsApprovedByManager" disabled = "disabled" name="IsApprovedByManager" @if (Model.IsApprovedByManager) {<text>checked="checked"</text>} />
                @Html.LabelFor(model => model.IsApprovedByManager)
                @if (!Model.IsApprovedByManagerEnable)
                {
                    <input type="hidden" id="IsApprovedByManagerHidden" name="IsApprovedByManagerHidden" value="@Model.IsApprovedByManager" />
                }
            </td>
    </tr>
    <tr>
            <td colspan="2">
                <input type="hidden" id="IsApprovedByPersonnelManagerEnable" name="IsApprovedByPersonnelManagerEnable" value="@Model.IsApprovedByPersonnelManagerEnable" />
                @*@Html.CheckBoxFor(model => model.IsApprovedByPersonnelManager, Model.IsApprovedByPersonnelManagerEnable ? null : (object)new { disabled = "disabled" }) *@
                <input type="checkbox" id="IsApprovedByPersonnelManager" disabled = "disabled" name="IsApprovedByPersonnelManager" @if (Model.IsApprovedByPersonnelManager)
                                                                                                                                   {<text>checked="checked"</text>} />
                @Html.LabelFor(model => model.IsApprovedByPersonnelManager)
                @if (!Model.IsApprovedByPersonnelManagerEnable)
                {
                    <input type="hidden" id="IsApprovedByPersonnelManagerHidden" name="IsApprovedByPersonnelManagerHidden" value="@Model.IsApprovedByPersonnelManager" />
                }
            </td>
    </tr>
     <tr>
            <td colspan="2">
                <input type="hidden" id="IsPostedTo1CEnable" name="IsPostedTo1CEnable" value="@Model.IsPostedTo1CEnable" />
                @*@Html.CheckBox("IsPostedTo1C", Model.IsPostedTo1C, Model.IsPostedTo1CEnable ? null : (object)new { disabled = "disabled" }) *@
                <input type="checkbox" id="IsPostedTo1C" disabled = "disabled" name="IsPostedTo1C" @if (Model.IsPostedTo1C)
                                                                                                   {<text>checked="checked"</text>} />
                @Html.LabelFor(model => model.IsPostedTo1C)
                @if (!Model.IsPostedTo1CEnable)
                {
                    <input type="hidden" id="IsPostedTo1CHidden" name="IsPostedTo1CHidden" value="@Model.IsPostedTo1C" />
                }
            </td>
    </tr>
        <tr>
             <td colspan="2" style="height:15px">
             </td>
    </tr>

    </table>
    </div>
    
    <br />
    <div class="comment-wrap">
    <table style="width:100%">
     <tr>
        <td colspan="2">
            <div id="CommentModelContext">@Html.Partial("RequestCommentPartial", Model.CommentsModel)</div>
        </td>
    </tr>
    </table>
    </div>
    
    
    <script type="text/javascript">
        $(document).ready(function () {
            $("#BeginDate").datepicker();
            $("#EndDate").datepicker();
            $("#PaymentBeginDate").datepicker();
            $("#PaymentDecreaseDate").datepicker();
            $(".hasDatepicker").width("75px");
            $("#ExperienceYears").width("50px");
            $("#ExperienceMonthes").width("50px");
            $("#TypeId").change(function () {
                OnChangeType(this.value);
            });
            setActiveMenuItem("userSicklist");

        });
        function OnChangeType(value) {
            if (value == $("#SicklistTypeIdBabyMindingHidden").val()) 
                $("#BabyMindingTypeId").removeAttr("disabled");
            else
                $("#BabyMindingTypeId").attr("disabled", "disabled");
    }
    function ValidateForm()
    {
        return true;
    }
    function SetApprovedAndValidateForm() {
        $("#IsApproved").val('true');
        return true;
    }
    function Delete() {
        $("#IsDelete").val("true");
        return true;
    }
    </script>
}

