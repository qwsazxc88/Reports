@using Reports.Core
@using Reports.Presenters.Services.Impl
@model Reports.Presenters.UI.ViewModel.AbsenceListModel
@{
    ViewBag.Title = "Невыходы";
}

@using (Html.BeginForm())
{
    <table style="width:100%">
    <tr>
        <td colspan="4">
            <b>Выбор параметров</b>
        </td>
    </tr>
    <tr>
        <td colspan="4">
            @Html.ValidationSummary(false)
            @Html.HiddenFor(m => m.UserId)
        </td>
    </tr>
    <tr>
        <td style="width:200px">
            @Html.LabelFor(m => m.DepartmentName):
        </td>
        <td>
            <label id="DepartmentNameLabel">@Model.DepartmentName</label>
            <input type="hidden" id="DepartmentName" name="DepartmentName" value="@Model.DepartmentName" />
            <input type="hidden" id="DepartmentId" name="DepartmentId" value="@Model.DepartmentId" />
        </td>
    </tr>
    <tr>
        <td colspan="2">
            <input type="hidden" id="DepartmentReadOnly" name="DepartmentReadOnly" value="@Model.DepartmentReadOnly" />
            @if (!Model.DepartmentReadOnly)
            {
                <input type="button" value="Выбрать" onclick="changeDepartment();"/>
            }            
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.PositionId):
        </td>
        <td>
            @Html.DropDownListFor(model => model.PositionId, new SelectList(Model.Positions, "ID", "Name")) 
         </td>
    </tr>
@*    <tr>
         <td>
            @Html.LabelFor(m => m.RequestStatusId):
        </td>
        <td>
            @Html.DropDownListFor(model => model.RequestStatusId, new SelectList(Model.RequestStatuses, "ID", "Name")) 
         </td>
    </tr>*@
    <tr>
        <td>
            @Html.LabelFor(m => m.AbsenceTypeId):
        </td>
        <td>
            @Html.DropDownListFor(model => model.AbsenceTypeId, new SelectList(Model.AbsenceTypes, "ID", "Name")) 
        </td>
    </tr>
    <tr>
        <td colspan="2">
            @Html.LabelFor(m => m.BeginDate):
            @Html.EditorFor(model => model.BeginDate) 
            @Html.LabelFor(m => m.EndDate):
            @Html.EditorFor(model => model.EndDate) 
         </td>
    </tr>
    <tr>
      <td colspan="4">
        <input type="submit" value="Выбрать"/>
        <input type="button" value="Очистить" onclick="resetFilter();"/>
      </td>
    </tr>
     <tr>
        <td colspan="4">
        @if (((ReportPrincipal)HttpContext.Current.User).UserRole != UserRole.Inspector &&
            ((ReportPrincipal)HttpContext.Current.User).UserRole != UserRole.Chief)
        {
            if (((ReportPrincipal)HttpContext.Current.User).UserRole != UserRole.Employee)
            {
                @*@Html.ActionLink("Создать новую заявку", "CreateRequest") *@
                <input type="button" value="Создать новую заявку" onclick="location.href='@Url.Action("CreateRequest","UserRequest")'"/>
            }
        }                                                                                             
        </td>
    </tr>
    <tr>
        <td colspan="4">
            <table class="grid" style="width:100%">
                <tr>
                    <th>Название документа</th>
                    <th>Дата</th>
                </tr>
                @if (Model.Documents != null && Model.Documents.Count > 0)
                {
                    foreach (var doc in Model.Documents)
                    {
                        <tr>
                            <td style="text-align:left">
                                <a class="ui-notify-close" href='@Url.Action("AbsenceEdit", new { id = doc.Id, UserId = doc.UserId })' style="cursor:hand">@doc.Name</a>
                            </td>
                            <td>@doc.Date</td>
                            @*<td>@if (doc.IsApproved)
                                {<text>Да</text>}
                                else
                                {<text>Нет</text>}
                            </td>*@
                        </tr>
                    }
                }
            </table>
        </td>
    </tr>
</table> 
<script type="text/javascript">
    var actionDepUrl = "@Url.Action("GetChildren", "UserRequest")";
    var actionDepDialogUrl = "@Url.Action("DepartmentDialog", "UserRequest")";
    $(document).ready(function () {
        $("#BeginDate").datepicker();
        $("#EndDate").datepicker();
        $(".hasDatepicker").width("75px");
    });
    function resetFilter() {
        $("#BeginDate").val('');
        $("#EndDate").val('');
        //if ($('#DepartmentId option').length > 1)
        if($("#DepartmentReadOnly").val() == "False")
        {
            $("#DepartmentId").val('0');
            $("#DepartmentNameLabel").text('');
            $("#DepartmentName").val('');
        }
        if ($('#PositionId option').length > 1)
            $("#PositionId").val('0');
        $("#AbsenceTypeId").val('0');
        //$("#RequestStatusId").val('0');
    }
//    function changeDepartment() {
//        createDepartmentDialog();
//    }
//    function createDepartmentDialog() 
//    {
//        var elem = document.createElement('div');
//        elem.id = "divDepartmentDialog";
//        var newDiv = $(elem);
//        var departmentId = $("#DepartmentId").val();
//        //var typeId = $("#RequestTypeId").val();

//        var title =  "Выбор структурного подразделения";
//        $(newDiv).text('Подождите, идет загрузка данных ...'); 
//        $.ajaxSetup({cache: false});
//        $(newDiv).load("@Url.Action("DepartmentDialog", "UserRequest")?id=" + departmentId +" #DialogTable"
//        , function(response, status, xhr) {
//                    if (status == "error") {
//                        var msg = "Произошла ошибка: ";
//                        $(newDiv).html("<div style='color:Red'>"+msg + xhr.status + " " + xhr.statusText+"</div>");
//                    }
//            }
//        );
//        $(newDiv).dialog(
//        { // initialize dialog box
//            autoOpen: true,
//            modal: true,
//            title: title,
//            // fix IE6  
//            bgiframe: true, 
//            draggable: false,
//            resizable: false,
//            width: 550,
//	        height: 260,
//            close: function (event, ui) {
//                $(this).dialog("destroy").remove();
//            },
//            buttons:
//            {
//                "Сохранить": function () {
//                    if (!ValidateDepartment())
//                        return;
//                    SaveDepartment();
//                },
//                "Отмена": function () {
//                    $(this).dialog("close");
//                }
//            }
//        });
//    }
 </script>   
}

