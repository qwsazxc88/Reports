@using Reports.Core
@using Reports.Presenters.Services.Impl
@model Reports.Presenters.UI.ViewModel.MissionListModel
@{
    ViewBag.Title = "Командировки";
}

@using (Html.BeginForm())
{
    <table style="width:100%">
    <tr>
        <td colspan="2">
            <b>Выбор параметров</b>
        </td>
    </tr>
    <tr>
        <td colspan="2">
            @Html.ValidationSummary(false)
            @Html.HiddenFor(m => m.UserId)
        </td>
    </tr>
@*    <tr>
        <td  style="width:200px">
            @Html.LabelFor(m => m.Department):
        </td>
        <td>
            @Html.EditorFor(model => model.Department)
        </td>
    </tr>*@
    <tr>
        <td style="width:200px">
            @Html.LabelFor(m => m.DepartmentName):
        </td>
        <td>
            <label id="DepartmentNameLabel">@Model.DepartmentName</label>
            <input type="hidden" id="DepartmentName" name="DepartmentName" value="@Model.DepartmentName" />
            <input type="hidden" id="DepartmentId" name="DepartmentId" value="@Model.DepartmentId" />
        </td>
    </tr>     
    <tr>
        <td colspan="2">
            <input type="hidden" id="DepartmentReadOnly" name="DepartmentReadOnly" value="@Model.DepartmentReadOnly" />
            @if (!Model.DepartmentReadOnly)
            {
                <input type="button" value="Выбрать" onclick="changeDepartment();"/>
            }            
        </td>
    </tr>    
    <tr>
        <td>
            @Html.LabelFor(m => m.PositionId):
        </td>
        <td>
            @Html.DropDownListFor(model => model.PositionId, new SelectList(Model.Positions, "ID", "Name")) 
         </td>
    </tr>
@*    <tr>
         <td>
            @Html.LabelFor(m => m.StatusId):
        </td>
        <td>
            @Html.DropDownListFor(model => model.StatusId, new SelectList(Model.Statuses, "ID", "Name")) 
         </td>
    </tr>*@
    <tr>
        <td>
            @Html.LabelFor(m => m.TypeId):
        </td>
        <td>
            @Html.DropDownListFor(model => model.TypeId, new SelectList(Model.Types, "ID", "Name")) 
        </td>
    </tr>
    <tr>
        <td colspan="2">
            @Html.LabelFor(m => m.BeginDate):
            @Html.EditorFor(model => model.BeginDate) 
            @Html.LabelFor(m => m.EndDate):
            @Html.EditorFor(model => model.EndDate) 
         </td>
    </tr>
   @* <tr>
        <td>
            @Html.LabelFor(m => m.PaymentPercentType):
        </td>
        <td>
            @Html.DropDownListFor(model => model.PaymentPercentType, new SelectList(Model.PaymentPercentTypes, "ID", "Name")) 
        </td>
        <td colspan="2">
        </td>
     </tr>*@
    <tr>
      <td colspan="2">
        <input type="submit" value="Выбрать"/>
        <input type="button" value="Очистить" onclick="resetFilter();"/>
      </td>
    </tr>
     <tr>
        <td colspan="2">
        @if (((ReportPrincipal)HttpContext.Current.User).UserRole != UserRole.Inspector &&
            ((ReportPrincipal)HttpContext.Current.User).UserRole != UserRole.Chief)
        {
            if (((ReportPrincipal)HttpContext.Current.User).UserRole == UserRole.Employee)
            {
                @*@Html.ActionLink("Создать новую заявку", "MissionEdit", new { id = 0, userId = Model.UserId })*@
                <input type="button" value="Создать новую заявку" onclick="location.href='@Url.Action("MissionEdit", "UserRequest", new { id = 0, userId = Model.UserId })'"/>   
            }
            else
            {
            @*    @Html.ActionLink("Создать новую заявку", "CreateRequest") *@
                <input type="button" value="Создать новую заявку" onclick="location.href='@Url.Action("CreateRequest", "UserRequest")'"/>
            }
        }                                                                                               
        </td>
    </tr>
    <tr>
        <td colspan="2">
            <table class="grid" style="width:100%">
                <tr>
                    <th>Название документа</th>
                    <th>Дата</th>
                </tr>
                @if (Model.Documents != null && Model.Documents.Count > 0)
                {
                    foreach (var doc in Model.Documents)
                    {
                        <tr>
                            <td style="text-align:left">
                                <a class="ui-notify-close" href='@Url.Action("MissionEdit", new { id = doc.Id, UserId = doc.UserId })' style="cursor:hand">@doc.Name</a>
                            </td>
                            <td>@doc.Date</td>
                        </tr>
                    }
                }
            </table>
        </td>
    </tr>
</table> 
<script type="text/javascript">
    var actionDepUrl = "@Url.Action("GetChildren", "UserRequest")";
    var actionDepDialogUrl = "@Url.Action("DepartmentDialog", "UserRequest")";

    $(document).ready(function () {
        $("#BeginDate").datepicker();
        $("#EndDate").datepicker();
        $(".hasDatepicker").width("75px");
    });
    function resetFilter() {
        $("#BeginDate").val('');
        $("#EndDate").val('');
//        if ($('#DepartmentId option').length > 1)
//        $("#Department").val('');
        if($("#DepartmentReadOnly").val() == "False")
        {
            $("#DepartmentId").val('0');
            $("#DepartmentNameLabel").text('');
            $("#DepartmentName").val('');
        }
        if ($('#PositionId option').length > 1)
            $("#PositionId").val('0');
        $("#TypeId").val('0');
        //$("#StatusId").val('0');
        //$("#PaymentPercentType").val('0');
    }
 </script>   
}

