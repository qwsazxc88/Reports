@using Reports.Core
@using Reports.Presenters.Services.Impl
@model Reports.Presenters.UI.ViewModel.MissionListModel
@{
    ViewBag.Title = "Командировки";
}

@using (Html.BeginForm())
{
   <table style="width:100%">
    <tr>
        <td colspan="2">
          <div class="filter-wrap">
            <table style="width:100%">
                <tr>
                    <td colspan="2">
                       <b>Выбор параметров</b>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                @Html.ValidationSummary(false)
                                @Html.HiddenFor(m => m.UserId)
                            </td>
                        </tr>
                    @*    <tr>
                            <td  style="width:200px">
                                @Html.LabelFor(m => m.Department):
                            </td>
                            <td>
                                @Html.EditorFor(model => model.Department)
                            </td>
                        </tr>*@
                        <tr>
                            <td style="width:200px">
                                @Html.LabelFor(m => m.DepartmentName):
                            </td>
                            <td>
                                <label id="DepartmentNameLabel">@Model.DepartmentName</label>
                                <input type="hidden" id="DepartmentName" name="DepartmentName" value="@Model.DepartmentName" />
                                <input type="hidden" id="DepartmentId" name="DepartmentId" value="@Model.DepartmentId" />
                            </td>
                        </tr>     
                        <tr>
                            <td colspan="2">
                                <input type="hidden" id="DepartmentReadOnly" name="DepartmentReadOnly" value="@Model.DepartmentReadOnly" />
                                @if (!Model.DepartmentReadOnly)
                                {
                                    <input type="button" value="Выбрать" onclick="changeDepartment();"/>
                                }            
                            </td>
                        </tr>    
                        <tr>
                            <td>
                                @Html.LabelFor(m => m.PositionId):
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.PositionId, new SelectList(Model.Positions, "ID", "Name")) 
                             </td>
                        </tr>
                        <tr>
                             <td>
                                @Html.LabelFor(m => m.StatusId):
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.StatusId, new SelectList(Model.Statuses, "ID", "Name")) 
                             </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => m.TypeId):
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.TypeId, new SelectList(Model.Types, "ID", "Name")) 
                            </td>
                        </tr>
                        @if (((ReportPrincipal)HttpContext.Current.User).UserRole != UserRole.Employee)
                        {
                            <tr>
                                <td>
                                    @Html.LabelFor(m => m.UserName):
                            </td>
                            <td>
                                    @Html.TextBoxFor(model => model.UserName)
                                </td>
                            </tr>
                        }
                        <tr>
                            <td colspan="2">
                                @Html.LabelFor(m => m.BeginDate):
                                @Html.EditorFor(model => model.BeginDate) 
                                @Html.LabelFor(m => m.EndDate):
                                @Html.EditorFor(model => model.EndDate) 
                             </td>
                        </tr>
                        
                       @* <tr>
                            <td>
                                @Html.LabelFor(m => m.PaymentPercentType):
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.PaymentPercentType, new SelectList(Model.PaymentPercentTypes, "ID", "Name")) 
                            </td>
                            <td colspan="2">
                            </td>
                         </tr>*@
                        <tr>
                          <td colspan="2">
                            <input type="submit" value="Выбрать"/>
                            <input type="button" value="Очистить" onclick="resetFilter();"/>
                          </td>
                        </tr>
              </table>  
           </div>                        
        </td>
    </tr>
    @*
    <tr>
        <td colspan="2">
          <div class="action-wrap">
            <table style="width:100%">
                 <tr>
                    <td>
                            @if (((ReportPrincipal)HttpContext.Current.User).UserRole != UserRole.Inspector &&
                                ((ReportPrincipal)HttpContext.Current.User).UserRole != UserRole.OutsourcingManager &&
                                ((ReportPrincipal)HttpContext.Current.User).UserRole != UserRole.Chief)
                            {
                                if (((ReportPrincipal)HttpContext.Current.User).UserRole == UserRole.Employee)
                                {
                                    --- @Html.ActionLink("Создать новую заявку", "MissionEdit", new { id = 0, userId = Model.UserId })
                                    <input type="button" value="Создать новую заявку" onclick="location.href='@Url.Action("MissionEdit", "UserRequest", new { id = 0, userId = Model.UserId })'"/>   
                                }
                                else
                                {
                                --- @Html.ActionLink("Создать новую заявку", "CreateRequest") 
                                    <input type="button" value="Создать новую заявку" onclick="location.href='@Url.Action("CreateRequest", "UserRequest")'"/>
                                }
                            }                                                                                               
                            </td>
                            <td style="text-align:right">
                             <input type="hidden" id="IsApproveClick" name="IsApproveClick" value="@Model.IsApproveClick" />
                             @if (((ReportPrincipal)HttpContext.Current.User).UserRole == UserRole.OutsourcingManager)
                             {
                                 <input type="submit" value="Записать" onclick="return approveClick();"/>
                             }
                            </td>
                 </tr>
              </table>  
           </div>
        </td>
    </tr>
    *@
    <tr>
        <td colspan="2">
            <input type="hidden" id="SortBy" name="SortBy" value="@Model.SortBy" />
            <input type="hidden" id="SortDescending" name="SortDescending" value="@Model.SortDescending" />
            <table class="grid" style="width:100%">
                <tr>
                    @*<th>Название документа</th>
                    <th>Дата</th>*@
                    <th>№<br />п/п</th>
                    <th>
                        <div id="sort1"><a href="#" onclick = "SortChanged(1);">Вид заявки</a></div>
                    </th>
                    <th>
                        <div id="sort2"><a href="#"  onclick = "SortChanged(2);">Ф.И.О.</a></div>
                    </th>
                    <th>
                        <div id="sort3"><a href="#"  onclick = "SortChanged(3);">Дата</a></div>
                    </th>
                     <th style="width:80px">
                        <div id="sort6"><a href="#"  onclick = "SortChanged(6);">Номер</a></div>
                    </th>
                    <th>
                        <div id="sort4"><a href="#"  onclick = "SortChanged(4);">Тип заявки</a></div>
                    </th>
                    <th>
                        <div id="sort5"><a href="#"  onclick = "SortChanged(5);">Состояние</a></div>
                    </th>
                    <th>
                        <div id="sort7"><a href="#"  onclick = "SortChanged(7);">Период</a></div>
                    </th>
                    @if (((ReportPrincipal)HttpContext.Current.User).UserRole == UserRole.OutsourcingManager)
                    {
                        <th><div id="sort8"><a href="#"  onclick = "SortChanged(8);">Есть изменение<br/> приказа</a></div></th>
                        <th style="width:100px"><div id="sort9"><a href="#"  onclick = "SortChanged(9);">Пересчет</a></div></th>
                    }
                   @* <th>
                        Дата окончания
                    </th>*@
                </tr>
                @if (Model.Documents != null && Model.Documents.Count > 0)
                {
                    var i = 1;
                    
                    foreach (var doc in Model.Documents)
                    {
                        var j = i - 1; 
                        <tr>
                            <td>@i</td>
                            <td style="text-align:left">
                                <a class="ui-notify-close" href='@Url.Action("MissionEdit", new { id = doc.Id, UserId = doc.UserId })' style="cursor:hand">@doc.Name</a>
                            </td>
                            <td>@doc.UserName</td>
                            <td>@doc.Date</td>
                            <td>@doc.Number</td>
                            <td>@doc.RequestType</td>
                            <td>@doc.RequestStatus</td>
                            <td style="white-space:nowrap">@doc.BeginDate.ToString("dd.MM.yyyy") - @doc.EndDate.ToString("dd.MM.yyyy")</td>
                            @if (((ReportPrincipal)HttpContext.Current.User).UserRole == UserRole.OutsourcingManager)
                            {
                                <td>@doc.IsAdditionalOrderExists</td>
                                <td style="text-align:center">
                                    @if(doc.Flag.HasValue)
                                    {
                                        if (doc.Flag.Value)
                                        {
                                            @Html.CheckBoxFor(m => m.Documents[j].IsChecked, new { @class = "selcheck" })
                                            <input type="hidden" class="selid" id="Documents[@j].Id" name="Documents[@j].Id" value="@doc.Id" />
                                        }
                                        else
                                        {
                                            <text>Да</text>
                                        }
                                    }
                                </td>
                            }
                        </tr>
                        i++;
                    }
                }
            </table>
        </td>
    </tr>
</table> 
<script src="@Url.Content("~/Scripts/TableSort.js")" type="text/javascript"></script>
<script type="text/javascript">
    var actionDepUrl = "@Url.Action("GetChildren", "Home")";
    var actionDepDialogUrl = "@Url.Action("DepartmentDialog", "Home")";

    $(document).ready(function () {
        $("#BeginDate").datepicker();
        $("#EndDate").datepicker();
        $(".hasDatepicker").width("75px");
        setSortFields();
        setActiveMenuItem("userMission");
    });
    function resetFilter() {
        $("#BeginDate").val('');
        $("#EndDate").val('');
//        if ($('#DepartmentId option').length > 1)
//        $("#Department").val('');
        if($("#DepartmentReadOnly").val() == "False")
        {
            $("#DepartmentId").val('0');
            $("#DepartmentNameLabel").text('');
            $("#DepartmentName").val('');
        }
        if ($('#PositionId option').length > 1)
            $("#PositionId").val('0');
        $("#TypeId").val('0');
        $("#StatusId").val('0');
         $("#UserName").val('');
        //$("#PaymentPercentType").val('0');
    }
//    function setSelection()
//    {
//        if($("#setAll").is(':checked'))
//            $(".selcheck").attr('checked','checked');
//        else
//            $(".selcheck").removeAttr('checked');
//    }
    function approveClick()
    {
        clearErrors();
        if($(".selcheck").filter(':checked').length == 0)
        {
            alert("Не выбрано ни одной заявки для пересчета");
            return false;
        }
        $("#IsApproveClick").val('True');
        return true;
    }
 </script>   
}

