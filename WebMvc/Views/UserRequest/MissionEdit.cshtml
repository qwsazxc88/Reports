@model Reports.Presenters.UI.ViewModel.MissionEditModel
@{
    ViewBag.Title = "Редактирование командировки";
}

@using (Html.BeginForm("MissionEdit", "UserRequest", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="doc-wrap">
    <table style="width:100%">
    <tr>
        <td colspan="2">
            @Html.ValidationSummary(false)
            <div id="Error" style="color:Red;display:none;"></div>
            @*<div id="Success" style="color:Green;display:none;">Письмо успешно отправлено в биллинг.</div>*@
        </td>
    </tr>
    <tr>
        <td colspan="2">
            @{
                ViewBag.ShowManagers = true;                  
            }
            @Html.Partial("../UserInfoView", Model)
        </td>
    </tr>
     @if (Model.IsDeleted)
    { 
        <tr>
            <td colspan="2" style="color:Red">Заявка отклонена</td>
        </tr>
    }
    <tr>
        <td style="width:280px">
            <input type="hidden" id="Id" name="Id" value="@Model.Id" />
            <input type="hidden" id="UserId" name="UserId" value="@Model.UserId" />
            <input type="hidden" id="Version" name="Version" value="@Model.Version" />
            <input type="hidden" id="IsSaveAvailable" name="IsSaveAvailable" value="@Model.IsSaveAvailable" />
            <input type="hidden" id="IsDeleteAvailable" name="IsDeleteAvailable" value="@Model.IsDeleteAvailable" />
            <input type="hidden" id="IsDelete" name="IsDelete" value="@Model.IsDelete" />
            <input type="hidden" id="IsTypeEditable" name="IsTypeEditable" value="@Model.IsTypeEditable" />
            <input type="hidden" id="IsTimesheetStatusEditable" name="IsTimesheetStatusEditable" value="@Model.IsTimesheetStatusEditable" />
            <input type="hidden" id="IsReasonEditable" name="IsReasonEditable" value="@Model.IsReasonEditable" />
            <input type="hidden" id="TimesheetStatusIdHidden" name="TimesheetStatusIdHidden" value="@Model.TimesheetStatusIdHidden" />
            <input type="hidden" id="TypeIdHidden" name="TypeIdHidden" value="@Model.TypeIdHidden" />
            <input type="hidden" id="DaysCountHidden" name="DaysCountHidden" value="@Model.DaysCountHidden" />
            @Html.LabelFor(m => m.TypeId):
        </td>
        <td>
            @Html.DropDownListFor(model => model.TypeId, new SelectList(Model.Types, "ID", "Name"), Model.IsTypeEditable ? null : (object)new { disabled = "disabled" }) 
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.Country):
        </td>
        <td>
            @Html.TextBoxFor(model => model.Country, Model.IsTypeEditable ? null : (object)new { @readonly = "readonly" }) 
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.MissionOrganization):
        </td>
        <td>
            @Html.TextBoxFor(model => model.MissionOrganization, Model.IsTypeEditable ? null : (object)new { @readonly = "readonly" }) 
        </td>
    </tr>
    <tr>
        <td style="width:210px">
            @Html.LabelFor(m => m.BeginDate):
        </td>
        <td>
            @if (Model.IsTypeEditable)
            {
                @Html.EditorFor(model => model.BeginDate) 
            }
            else
            {
                @Html.DisplayFor(model => model.BeginDate)
                @Html.HiddenFor(model => model.BeginDate)
            } 
        </td>
     </tr>
     <tr>
        <td>
            @Html.LabelFor(m => m.EndDate):
        </td>
        <td>
            @if (Model.IsTypeEditable)
            {
                @Html.EditorFor(model => model.EndDate)
            }
            else
            {
                @Html.DisplayFor(model => model.EndDate)
                @Html.HiddenFor(model => model.EndDate)
            } 
         </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.DaysCount):
        </td>
        <td>
            @Html.DisplayFor(model => model.DaysCount) 
            @*@Html.TextBoxFor(model => model.DaysCount,(object)new { @readonly = "readonly" })  *@
         </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.Goal):
        </td>
        <td>
            @Html.TextBoxFor(model => model.Goal, Model.IsTypeEditable ? null : (object)new { @readonly = "readonly" }) 
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.FinancesSource):
        </td>
        <td>
            @Html.TextBoxFor(model => model.FinancesSource, Model.IsTypeEditable ? null : (object)new { @readonly = "readonly" }) 
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.Reason):
        </td>
        <td>
            @Html.TextBoxFor(model => model.Reason, Model.IsReasonEditable ? null : (object)new { @readonly = "readonly" }) 
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.TimesheetStatusId):
        </td>
        <td>
            @Html.DropDownListFor(model => model.TimesheetStatusId, new SelectList(Model.TimesheetStatuses, "ID", "Name"), Model.IsTimesheetStatusEditable ? null : (object)new { disabled = "disabled" }) 
        </td>
    </tr>
    <tr>
        <td colspan="2">
        </td>
    </tr>
    <tr>
        <td colspan="2">
            @Html.LabelFor(m => m.CreatorLogin):
            @Html.DisplayFor(model => model.CreatorLogin) 
         </td>
    </tr>
     <tr>
        <td colspan="2">
            <input type="submit" value="Записать (черновик)" onclick="return ValidateForm();" @if (!Model.IsSaveAvailable)
                                                                                    {<text>style="display:none"</text>}/>
            <div style="text-align: right;"><input type="submit" value="Отклонить заявку" onclick="return Delete();" @if (!Model.IsDeleteAvailable)
                                                                                    {<text>style="display:none"</text>}/>
            </div>
            <input type="button" value="Печать приказа" name="PrintOrderButton" onclick="window.location.href='@Url.Action("GetPrintForm", "UserRequest", new { id = Model.Id, typeId = 4 })';" 
                                                                @if (!Model.IsPrintOrderAvailable)
                                                                {<text>style="display:none"</text>}  />
            <input type="button" value="Печать удостоверения" name="PrintCertificatButton" onclick="window.location.href='@Url.Action("GetPrintForm", "UserRequest", new { id = Model.Id, typeId = 5 })';" 
                                                                @if (!Model.IsPrintCertificateAvailable)
                                                                {<text>style="display:none"</text>}  />
        </td>
    </tr>
    <tr>
             <td colspan="2" style="height:15px">
             </td>
    </tr>
    <tr>
             <td colspan="2">
                        <input type="hidden" id="IsApproved" name="IsApproved" value="@Model.IsApproved" />
                        <input type="hidden" id="IsApprovedEnable" name="IsApprovedEnable" value="@Model.IsApprovedEnable" />
                        <input type="submit" value="Отправить на согласование" onclick="return SetApprovedAndValidateForm();" @if (!Model.IsApprovedEnable)
                                                                        {<text>style="display:none"</text>}/>         
                        <input type="hidden" id="IsApprovedForAll" name="IsApprovedForAll" value="@Model.IsApprovedForAll" />
                        <input type="hidden" id="IsApprovedForAllEnable" name="IsApprovedForAllEnable" value="@Model.IsApprovedForAllEnable" />
                        <input type="submit" value="За всех" onclick="return SetApprovedForAllAndValidateForm();" @if (!Model.IsApprovedForAllEnable)
                                                                        {<text>style="display:none"</text>}/>                       
            </td>
    </tr>
    <tr>
            <td colspan="2">
                <input type="hidden" id="IsApprovedByUserEnable" name="IsApprovedByUserEnable" value="@Model.IsApprovedByUserEnable" />
                @*@Html.CheckBox("IsApprovedByUser", Model.IsApprovedByUser, Model.IsApprovedByUserEnable ? null : (object)new { disabled = "disabled" }) *@
                <input type="checkbox" id="IsApprovedByUser" disabled = "disabled" name="IsApprovedByUser" @if (Model.IsApprovedByUser) {<text>checked="checked"</text>} />
                @Html.LabelFor(model => model.IsApprovedByUser)
                @if (!Model.IsApprovedByUserEnable)
                {
                    <input type="hidden" id="IsApprovedByUserHidden" name="IsApprovedByUserHidden" value="@Model.IsApprovedByUser" />
                }
            </td>
    </tr>
    <tr>
            <td colspan="2">
                <input type="hidden" id="IsApprovedByManagerEnable" name="IsApprovedByManagerEnable" value="@Model.IsApprovedByManagerEnable" />
                @*@Html.CheckBox("IsApprovedByManager", Model.IsApprovedByManager, Model.IsApprovedByManagerEnable ? null : (object)new { disabled = "disabled" }) *@
                <input type="checkbox" id="IsApprovedByManager" disabled = "disabled" name="IsApprovedByManager" @if (Model.IsApprovedByManager) {<text>checked="checked"</text>} />
                @Html.LabelFor(model => model.IsApprovedByManager)
                @if (!Model.IsApprovedByManagerEnable)
                {
                    <input type="hidden" id="IsApprovedByManagerHidden" name="IsApprovedByManagerHidden" value="@Model.IsApprovedByManager" />
                }
            </td>
    </tr>
    <tr>
            <td colspan="2">
                <input type="hidden" id="IsApprovedByPersonnelManagerEnable" name="IsApprovedByPersonnelManagerEnable" value="@Model.IsApprovedByPersonnelManagerEnable" />
                @*@Html.CheckBoxFor(model => model.IsApprovedByPersonnelManager, Model.IsApprovedByPersonnelManagerEnable ? null : (object)new { disabled = "disabled" }) *@
                <input type="checkbox" id="IsApprovedByPersonnelManager" disabled = "disabled" name="IsApprovedByPersonnelManager" @if (Model.IsApprovedByPersonnelManager) {<text>checked="checked"</text>} />
                @Html.LabelFor(model => model.IsApprovedByPersonnelManager)
                @if (!Model.IsApprovedByPersonnelManagerEnable)
                {
                    <input type="hidden" id="IsApprovedByPersonnelManagerHidden" name="IsApprovedByPersonnelManagerHidden" value="@Model.IsApprovedByPersonnelManager" />
                }
            </td>
    </tr>
     <tr>
            <td colspan="2">
                <input type="hidden" id="IsPostedTo1CEnable" name="IsPostedTo1CEnable" value="@Model.IsPostedTo1CEnable" />
                @*@Html.CheckBox("IsPostedTo1C", Model.IsPostedTo1C, Model.IsPostedTo1CEnable ? null : (object)new { disabled = "disabled" }) *@
                <input type="checkbox" id="IsPostedTo1C" disabled = "disabled" name="IsPostedTo1C" @if (Model.IsPostedTo1C) {<text>checked="checked"</text>} />
                @Html.LabelFor(model => model.IsPostedTo1C)
                @if (!Model.IsPostedTo1CEnable)
                {
                    <input type="hidden" id="IsPostedTo1CHidden" name="IsPostedTo1CHidden" value="@Model.IsPostedTo1C" />
                }
            </td>
    </tr>

    <tr>
             <td colspan="2" style="height:15px">
                <hr />
             </td>
    </tr>

    @* Ссылка для открытия скана подписанного приказа *@

    <tr>
        <td colspan="2">@Html.LabelFor(model => model.OrderScanAttachment):
            @if (!string.IsNullOrEmpty(Model.OrderScanAttachment))
            {
                <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.OrderScanAttachmentId })' style="cursor:hand" target="_blank" >@Model.OrderScanAttachment</a>
                <input type="hidden" id="OrderScanAttachment" name="OrderScanAttachment" value="@Model.OrderScanAttachment" />
                <input type="hidden" id="OrderScanAttachmentId" name="OrderScanAttachmentId" value="@Model.OrderScanAttachmentId" />
            }
            else
            {
                <span>-</span>
            }
        </td>
    </tr>

    @* Прикрепление скана подписанного приказа *@

    @if (Model.IsConfirmationAllowed)
    {
        <tr>    
            <td colspan="2">Прикрепить скан подписанного приказа
                <input id="OrderScanFileContext" type="file" name="orderScanFile"/>&nbsp;<span style="color:Red">размер файла - не более 2 Мб</span>                
            </td>
        </tr>
        <tr>    
            <td colspan="2">
                <input type="submit" value="Сохранить" onclick="return ValidateForm();" />
            </td>
        </tr>
    }

    </table>
    </div>
    
    <br />
    <div class="comment-wrap">
    <table style="width:100%">
     <tr>
        <td colspan="2">
            <div id="CommentModelContext">@Html.Partial("RequestCommentPartial", Model.CommentsModel)</div>
        </td>
    </tr>
    </table>
    </div>
    
    <script type="text/javascript">
        $(document).ready(function () {
            $("#BeginDate").datepicker({changeMonth: true, changeYear: true});
            $("#EndDate").datepicker({changeMonth: true, changeYear: true});
            $(".hasDatepicker").width("75px");
            $("#DaysCount").width("50px");
            setActiveMenuItem("userMission");
        });    
    function ValidateForm()
    {
        return true;
    }
    function SetApprovedForAllAndValidateForm() {
        SetApprovedAndValidateForm();
        $("#IsApprovedForAll").val('true');
        return true;
    }
    function SetApprovedAndValidateForm() {
        $("#IsApproved").val('true');
        return true;
    }
    function Delete() {
        $("#IsDelete").val("true");
        return true;
    }
    </script>
}

