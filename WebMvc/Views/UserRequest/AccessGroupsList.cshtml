@model Reports.Presenters.UI.ViewModel.AccessGroupsListModel
@using Reports.Presenters.Services.Impl
@using Reports.Core
@{
    ViewBag.Title = "Группы доступа";
}

@using (Html.BeginForm("AccessGroupsList", "Userrequest", FormMethod.Post, new { enctype = "multipart/form-data", id = "AccessGroupsList" }))
{
    <table style="width:100%">
        <tr>
            <td>
              <div class="filter-wrap">
              <p style="color:red;">Программа по расчету сальдо отпусков работает в тестовом режиме, поэтому возможны некорректные расчеты сальдо отпусков. Если появились вопросы просьба обращаться к кадровику Дирекции через Инфоуслуги раздел "Задать вопрос".</p>
                <table style="width:100%">
                    <tr>
                        <td style="width:220px">
                            <b>Выбор параметров</b>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.ValidationSummary(false)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.DepartmentName):
                        </td>
                        <td>
                            <label id="DepartmentNameLabel">@Model.DepartmentName</label>
                            <input type="hidden" id="DepartmentName" name="DepartmentName" value="@Model.DepartmentName" />
                            <input type="hidden" id="DepartmentId" name="DepartmentId" value="@Model.DepartmentId" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <input type="button" value="Выбрать" onclick="changeDepartment();"/>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.AccessGroupCode):
                        </td>
                        <td>
                            @Html.DropDownListFor(model => model.AccessGroupCode, new SelectList(Model.AccessGroups, "Value", "Text")) 
                            </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.UserName):
                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.UserName, (object) new { placeholder = "ФИО сотрудника" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.IsManagerShow):
                        </td>
                        <td>
                            
                            @*@Html.CheckBoxFor(model => model.IsManagerShow)*@
                            <div class="formfield clear" id="IsManagerShowContainer">            
                                @Html.RadioButtonFor(m => m.IsManagerShow, false, new { @id = "IsManagerShowFalse" })<label id="lblMSFalse" for="IsManagerShowFalse" @if (!Model.IsManagerShow)
                                                                                                                                                                                        {<text>style="border-color:red;"</text>}
                                                                                                                                                                                        else
                                                                                                                                                                                        {<text> style="border-color:none;"</text>}>Без руководителей</label>
                                @Html.RadioButtonFor(m => m.IsManagerShow, true, new { @id = "IsManagerShowTrue" })<label id="lblMSTrue" for="IsManagerShowTrue" @if (Model.IsManagerShow)
                                                                                                                                                                                    {<text>style="border-color:red;"</text>}
                                                                                                                                                                                    else
                                                                                                                                                                                    {<text> style="border-color:none;"</text>}>Показать руководителей</label>
                            </div>
                        </td>
                    </tr>
                    <tr id="m6" @if(!Model.IsManagerShow){<text>style="display:none";</text>}>
                        <td>
                            @Html.LabelFor(m => m.Manager6):
                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.Manager6, (object)new { placeholder = "ФИО руководителя (6)" })
                        </td>
                    </tr>
                    <tr id="m5" @if(!Model.IsManagerShow){<text>style="display:none;"</text>}>
                        <td>
                            @Html.LabelFor(m => m.Manager5):
                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.Manager5, (object)new { placeholder = "ФИО руководителя (5)" })
                        </td>
                    </tr>
                    <tr id="m4" @if(!Model.IsManagerShow){<text>style="display:none;"</text>}>
                        <td>
                            @Html.LabelFor(m => m.Manager4):
                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.Manager4, (object)new { placeholder = "ФИО руководителя (4)" })
                        </td>
                    </tr>
                      
                    <tr>
                        <td>
                        <button id="btnSelect" type="button">Выбрать</button>
                        <input type="button" value="Очистить" onclick="resetFilter();"/>
                        </td>
                    </tr>
                </table>
            </div>                          
            </td>
        </tr>
        <tr>
            <td >
                <div class="action-wrap">
                    <span id="LoadingIndicator"></span>
                    <label id="CountRows">Количество записей: @(Model.AccessGroupList == null ? "0" : Model.AccessGroupList.Count.ToString())</label>&nbsp;&nbsp;
                    <label id="CountPreg">Из них в декрете: @(Model.AccessGroupList == null ? "0" : Model.AccessGroupList.Where(x => x.EndDate != null).Count().ToString())</label>
                    <input type="button" value="Печать" onclick="window.print();" align="right"/>
                </div>
            </td>
         </tr>
         <tr>
            <td >
                <input type="hidden" id="SortBy" name="SortBy" value="@Model.SortBy" />
                <input type="hidden" id="SortDescending" name="SortDescending" value="@Model.SortDescending" />
                <table class="grid" style="width:100%">
                    <tr>
                        <th>№<br />п/п</th>
                        <th>
                            <div id="sort1"><a href="#"  onclick = "SortChanged(1);">Ф.И.О.</a></div>
                        </th>
                        <th>
                            <div id="sort11"><a href="#"  onclick = "SortChanged(11);">Остаток дней<br /> отпуска<br />на 1 число тек. мес.</a></div>
                        </th>                        
                        <th>
                            <div id="sort7"><a href="#"  onclick = "SortChanged(7);">В декрете<br />(конец отпуска)</a></div>
                        </th>
                        <th>
                            <div id="sort13"><a href="#" onclick = "SortChanged(13);">Дата приёма<br />в СКБ</a></div>
                        </th>
                        <th>
                            <div id="sort2"><a href="#"  onclick = "SortChanged(2);">Должность</a></div>
                        </th>
                        <th>
                            <div id="sort3"><a href="#"  onclick = "SortChanged(3);">Подразделение<br /> 3 уровня</a></div>
                        </th>
                        <th>
                            <div id="sort4"><a href="#"  onclick = "SortChanged(4);">Подразделение<br />7 уровня</a></div>
                        </th>
                        <th>
                            <div id="sort8"><a href="#"  onclick = "SortChanged(8);">Руководитель<br />6 уровня</a></div>
                        </th>
                        <th>
                            <div id="sort9"><a href="#"  onclick = "SortChanged(9);">Руководитель<br />5уровня</a></div>
                        </th>
                        <th>
                            <div id="sort10"><a href="#"  onclick = "SortChanged(10);">Руководитель<br />4уровня</a></div>
                        </th>                        
                        <th>
                            <div id="sort5"><a href="#"  onclick = "SortChanged(5);">Группа доступа</a></div>
                        </th>
                        <th>
                            <div id="sort6"><a href="#"  onclick = "SortChanged(6);">Электронная<br />почта<br />сотрудника</a></div>
                        </th>
                        <th>
                            <div id="sort14"><a href="#"  onclick = "SortChanged(14);">Дополнительная<br />электронная<br />почта</a></div>
                        </th>
                        <th>
                            <div id="sort15"><a href="#"  onclick = "SortChanged(15);">Телефон</a></div>
                        </th>
                    </tr>
                    <tbody id="AGList">
                        @if (Model.AccessGroupList != null && Model.AccessGroupList.Count > 0)
                        {
                            var i = 1;
                            foreach (var doc in Model.AccessGroupList)
                            {
                                <tr>
                                    <td>
                                        @i
                                    </td>
                                    <td>@doc.UserName</td>
                                    <td>@((doc.SaldoPrimary + doc.SaldoAdditional) > 42 ? 42 : (doc.SaldoPrimary + doc.SaldoAdditional))</td>                                    
                                    <td>@(doc.EndDate.HasValue ? doc.EndDate.Value.ToShortDateString() : string.Empty)</td>
                                    <td>@(doc.DateAccept.HasValue? doc.DateAccept.Value.ToShortDateString(): string.Empty )</td>
                                    <td>@doc.PositionName</td>
                                    <td>@doc.Dep3Name</td>
                                    <td>@doc.Dep7Name</td>
                                    <td>@doc.Manager6</td>
                                    <td>@doc.Manager5</td>
                                    <td>@doc.Manager4</td>
                                    <td>@doc.AccessGroupName</td>
                                    <td>@doc.Email</td>
                                    <td><span id="@(doc.UserId+"Mail")">@doc.AlternativeMail</span>
                                    @if(Model.IsAlternativeMailEditable)
                                    {
                                        <input type="button" value="Изменить" onclick="ChangeAltMail(@doc.UserId)"/>
                                    }
                                    </td>
                                    <td><span id="@(doc.UserId+"Phone")">@doc.Phone</span>
                                    @if(Model.IsPhoneEditable)
                                    {
                                        <input type="button" value="Изменить" onclick="ChangePhone(@doc.UserId)"/>
                                    }
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                    </tbody>
                </table>
            </td>
        </tr>
    </table> 
}

<div style="visibility:hidden">
<input type="hidden" id="TargetUserId" />
<div id="AddEmailDialog" title="Добавление дополнительного адреса почты">
    <div><label>E-mail:</label>
    <input type="text" id="AlterMail" />
    </div>
    <input type="button" onclick="AddMail();" value="Ок"/>
</div>
<div id="AddPhoneDialog" title="Добавление телефона">
    <div><label>Телефон:</label>    
    <input type="text" id="UserPhone" />
    </div>
    <input type="button" onclick="AddPhone();" value="Ок"/>
</div>
</div>

<script type="text/javascript">
    var actionDepUrl = "@Url.Action("GetChildren", "Home")";
    var actionDepDialogUrl = "@Url.Action("DepartmentDialog", "Home")";
    function ChangeAltMail(userid)
    {
        $('#TargetUserId').val(userid);
        $('#AddEmailDialog').dialog('open');
    }
    function ChangePhone(userid)
    {
        $('#TargetUserId').val(userid);
        $('#AddPhoneDialog').dialog('open');
    }
    function AddMail() {
        $('#AddEmailDialog').dialog('close');
        $.ajax(
        {   
            type: "POST",
            url: "/Account/AddAlternativeEmailToUser",
            data: {Email:$('#AlterMail').val(), UserId:$('#TargetUserId').val() },
            success: function(data)
            {
                
                alert(data.message);                
            },
            error: function(data){ alert('При отправке данных произошла ошибка.');}
        }
        );
    }
    function AddPhone() {
        $('#AddPhoneDialog').dialog('close');
        $.ajax(
        {   
            type: "POST",
            url: "/Account/AddPhoneToUser",
            data: {Phone:$('#UserPhone').val(), UserId:$('#TargetUserId').val() },
            success: function(data)
            {
                var phoneselector = '#'+$('#TargetUserId').val()+'Phone';
                $(phoneselector).text($('#UserPhone').val());
                alert(data.message);
            },
            error: function(data){ alert('При отправке данных произошла ошибка.');}
        }
        );
    }
    $(document).ready(function () {
        //$("#BeginDate").datepicker({changeMonth: true, changeYear: true});
        //$("#EndDate").datepicker({changeMonth: true, changeYear: true});
        //$(".hasDatepicker").width("75px");
        
        $(".loading").removeClass("loading");
        $("#AddEmailDialog").dialog({ autoOpen: false });
        $("#AddPhoneDialog").dialog({ autoOpen: false });
        if(($("#SortBy").val() != 0) && ($("#SortDescending").val() != ''))
        {
            if($("#SortDescending").val() == 'True')
                $("#sort"+$("#SortBy").val()).addClass("sort-desc");
            else        
                $("#sort"+$("#SortBy").val()).addClass("sort-asc");
        }

        setActiveMenuItem("userAcceptGroup");

        $("#btnSelect").click(function(){
            SubmitForm();
        });

        //обрабатываем переключатель
        $("#IsManagerShowContainer").buttonset();
        $("#IsManagerShowTrue").click(function () {
            $("#lblMSTrue").css("border-color", "red");
            $("#lblMSFalse").css("border-color", "silver");
            $("#m6").show();
            $("#m5").show();
            $("#m4").show();
        });
        $("#IsManagerShowFalse").click(function () {
            $("#lblMSTrue").css("border-color", "silver");
            $("#lblMSFalse").css("border-color", "red");
            $("#m6").hide();
            $("#m5").hide();
            $("#m4").hide();
        });



    });


    function SubmitForm(){
        $("#LoadingIndicator").addClass("loading");
        $("#CountRows").text("Количество записей: 0");
        $("#CountPreg").text("Из них в декрете: 0");
        $("#AGList").remove();
        $("#AccessGroupsList").submit();
    }
    
    function SortChanged(sortedBy)
    {
        if($("#SortBy").val() != sortedBy)
            $("#SortDescending").val(''); 
        $("#SortBy").val(sortedBy);
        if($("#SortDescending").val() == '')
            $("#SortDescending").val('True');
        else if($("#SortDescending").val() == 'True')
            $("#SortDescending").val('False');
        else
            $("#SortDescending").val('True');
         SubmitForm();
         return false;
    }


    function resetFilter() {
        //$("#BeginDate").val('');
        //$("#EndDate").val('');
        $("#DepartmentId").val('0');
        $("#DepartmentNameLabel").text('');
        $("#DepartmentName").val('');
        $("#AccessGroupCode").val('');
        $("#UserName").val('');
        $("#Manager6").val('');
        $("#Manager5").val('');
        $("#Manager4").val('');
    }

 </script>   

