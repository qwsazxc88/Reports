@model Reports.Presenters.UI.ViewModel.ChildVacationEditModel
@{
    ViewBag.Title = "Редактирование отпуска по уходу за детьми";
}

@using (Html.BeginForm("ChildVacationEdit", "UserRequest", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="doc-wrap">
    <table style="width:100%">
    <tr>
        <td colspan="2">
            @Html.ValidationSummary(false)
            <div id="Error" style="color:Red;display:none;"></div>
            @*<div id="Success" style="color:Green;display:none;">Письмо успешно отправлено в биллинг.</div>*@
        </td>
    </tr>
    <tr>
        <td colspan="2">
            @{
                ViewBag.ShowManagers = true;                  
            }
            @Html.Partial("../UserInfoView", Model)
        </td>
    </tr>
    @if (Model.IsDeleted)
    { 
        <tr>
            <td colspan="2" style="color:Red;">Заявка отклонена</td>
        </tr>
    }
    @*<tr>
        <td>
            
            <input type="hidden" id="IsTimesheetStatusEditable" name="IsTimesheetStatusEditable" value="@Model.IsTimesheetStatusEditable" />
            <input type="hidden" id="TimesheetStatusIdHidden" name="TimesheetStatusIdHidden" value="@Model.TimesheetStatusIdHidden" />
            <input type="hidden" id="VacationTypeIdHidden" name="VacationTypeIdHidden" value="@Model.VacationTypeIdHidden" />
            <input type="hidden" id="DaysCountHidden" name="DaysCountHidden" value="@Model.DaysCountHidden" />
            @Html.LabelFor(m => m.VacationTypeId):
        </td>
        <td>
            @Html.DropDownListFor(model => model.VacationTypeId, new SelectList(Model.VacationTypes, "ID", "Name"), Model.IsVacationTypeEditable ? null : (object)new { disabled = "disabled" }) 
        </td>
    </tr>*@
    <tr>
        <td style="width:140px">
            @Html.LabelFor(m => m.BeginDate):
            <input type="hidden" id="Id" name="Id" value="@Model.Id" />
            <input type="hidden" id="UserId" name="UserId" value="@Model.UserId" />
            <input type="hidden" id="Version" name="Version" value="@Model.Version" />
            <input type="hidden" id="IsSaveAvailable" name="IsSaveAvailable" value="@Model.IsSaveAvailable" />
            <input type="hidden" id="IsDeleteAvailable" name="IsDeleteAvailable" value="@Model.IsDeleteAvailable" />
            <input type="hidden" id="IsDelete" name="IsDelete" value="@Model.IsDelete" />
            <input type="hidden" id="IsVacationDatesEditable" name="IsVacationDatesEditable" value="@Model.IsVacationDatesEditable" />
            <input type="hidden" id="IsPersonnelFieldsEditable" name="IsPersonnelFieldsEditable" value="@Model.IsPersonnelFieldsEditable" />
        </td>
        <td>
            @if (Model.IsVacationDatesEditable)
            {
                @Html.EditorFor(model => model.BeginDate) 
            }
            else
            {
                @Html.DisplayFor(model => model.BeginDate)
                @Html.HiddenFor(model => model.BeginDate)
            } 
        </td>
     </tr>
     <tr>
        <td>
            @Html.LabelFor(m => m.EndDate):
        </td>
        <td>
            @if (Model.IsVacationDatesEditable)
            {
                @Html.EditorFor(model => model.EndDate)
            }
            else
            {
                @Html.DisplayFor(model => model.EndDate)
                @Html.HiddenFor(model => model.EndDate)
            } 
         </td>
    </tr>
    <tr>
            <td colspan="2">
                @Html.CheckBox("IsFreeRate", Model.IsFreeRate, Model.IsPersonnelFieldsEditable ? null : (object)new { disabled = "disabled" }) 
                @Html.LabelFor(model => model.IsFreeRate)
                @if (!Model.IsPersonnelFieldsEditable)
                {
                    <input type="hidden" id="IsFreeRateHidden" name="IsFreeRateHidden" value="@Model.IsFreeRateHidden" />
                }
            </td>
    </tr>
    <tr>
        <td colspan="2" style="font-weight:bold">
           Пособие до 1,5 лет (за счет ФСС)
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.PaidToDate):
        </td>
        <td>
            @if (Model.IsPersonnelFieldsEditable)
            {
                @Html.EditorFor(model => model.PaidToDate)
            }
            else
            {
                @Html.DisplayFor(model => model.PaidToDate)
                @Html.HiddenFor(model => model.PaidToDate)
            } 
           
         </td>
    </tr>
    <tr>
            <td colspan="2">
                @Html.CheckBox("IsPreviousPaymentCounted", Model.IsPreviousPaymentCounted, Model.IsPersonnelFieldsEditable ? null : (object)new { disabled = "disabled" }) 
                @Html.LabelFor(model => model.IsPreviousPaymentCounted)
                @if (!Model.IsPersonnelFieldsEditable)
                {
                    <input type="hidden" id="IsPreviousPaymentCountedHidden" name="IsPreviousPaymentCountedHidden" value="@Model.IsPreviousPaymentCountedHidden" />
                }
            </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.ChildrenCount):
        </td>
        <td>
            @Html.TextBoxFor(model => model.ChildrenCount, Model.IsPersonnelFieldsEditable ? null : (object)new { @readonly = "readonly" })
            @Html.CheckBox("IsFirstChild", Model.IsFirstChild, Model.IsPersonnelFieldsEditable ? null : (object)new { disabled = "disabled" }) 
            @Html.LabelFor(model => model.IsFirstChild)
            @if (!Model.IsPersonnelFieldsEditable)
            {
                <input type="hidden" id="IsFirstChildHidden" name="IsFirstChildHidden" value="@Model.IsFirstChildHidden" />
            }
         </td>
    </tr>
    <tr>
        <td colspan="2" style="font-weight:bold">
           Пособие до 3 лет (за счет работодателя)
        </td>
    </tr>
     <tr>
        <td>
            @Html.LabelFor(m => m.PaidToDate1):
        </td>
        <td>
            @if (Model.IsPersonnelFieldsEditable)
            {
                @Html.EditorFor(model => model.PaidToDate1)
            }
            else
            {
                @Html.DisplayFor(model => model.PaidToDate1)
                @Html.HiddenFor(model => model.PaidToDate1)
            } 
         </td>
    </tr>
    @*<tr>
        <td>
            @Html.LabelFor(m => m.TimesheetStatusId):
        </td>
        <td>
            @Html.DropDownListFor(model => model.TimesheetStatusId, new SelectList(Model.TimesheetStatuses, "ID", "Name"), Model.IsTimesheetStatusEditable ? null : (object)new { disabled = "disabled" }) 
        </td>
    </tr>*@
    <tr>
        <td colspan="2">
           
        </td>
    </tr>
    <tr>
        <td colspan="2">
            @Html.LabelFor(m => m.CreatorLogin):
       @* </td>
        <td>*@
            @Html.DisplayFor(model => model.CreatorLogin) 
         </td>
    </tr>
        <tr>
        <td colspan="2" style="height:5px">
        </td>
    </tr>
    <tr>
        <td>@Html.LabelFor(model => model.Attachment):</td>
        <td>
            @if (!string.IsNullOrEmpty(Model.Attachment))
            {
                <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.AttachmentId })' style="cursor:hand" target="_blank" >@Model.Attachment</a>
                <input type="hidden" id="Attachment" name="Attachment" value="@Model.Attachment" />
                <input type="hidden" id="AttachmentId" name="AttachmentId" value="@Model.AttachmentId" />
               @* <input type="hidden" id="AttachmentTypeId" name="AttachmentTypeId" value="@Model.AttachmentTypeId" />*@
            }
        </td>
    </tr>
    <tr @if ((!Model.IsPersonnelFieldsEditable && !Model.IsVacationDatesEditable) || (Model.Id == 0))
        {<text>style="display:none"</text>}>    
        <td>Прикрепить скан документа </td>
        <td><input id="FileContext" type="file" name="file"/>&nbsp;<span style="color:Red">размер файла - не более 2 Мб</span></td>
    </tr>

     <tr>
        <td colspan="2">
            <input type="submit" value="Записать (черновик)" onclick="return ValidateForm();" @if (!Model.IsSaveAvailable)
                                                                                    {<text>style="display:none"</text>}/>
            <div style="text-align: right;"><input type="submit" value="Отклонить заявку" onclick="return Delete();" @if (!Model.IsDeleteAvailable)
                                                                                    {<text>style="display:none"</text>}/>
            </div>
            <input type="button" value="Печать" name="PrintButton" onclick="window.location.href='@Url.Action("GetPrintForm", "UserRequest", new { id = Model.Id, typeId = 6 })';" 
                                                                @if (!Model.IsPrintAvailable)
                                                                {<text>style="display:none"</text>}  />
            
           @* <input type="button" id="SendToBillingButton" name="SendToBillingButton" value="Отправить в биллинг" onclick="return SendToBilling();" @if (!Model.IsSendToBillingAvailable)
                                                                                   {<text>style="display:none"</text>}/>*@
        </td>
    </tr>
    <tr>
             <td colspan="2" style="height:15px">
             </td>
    </tr>
    <tr>
             <td colspan="2">
                        <input type="hidden" id="IsApproved" name="IsApproved" value="@Model.IsApproved" />
                        <input type="hidden" id="IsApprovedEnable" name="IsApprovedEnable" value="@Model.IsApprovedEnable" />
                        <input type="submit" value="Отправить на согласование" onclick="return SetApprovedAndValidateForm();" @if (!Model.IsApprovedEnable)
                                                                        {<text>style="display:none"</text>}/>     
                        <input type="hidden" id="IsApprovedForAll" name="IsApprovedForAll" value="@Model.IsApprovedForAll" />
                        <input type="hidden" id="IsApprovedForAllEnable" name="IsApprovedForAllEnable" value="@Model.IsApprovedForAllEnable" />
                        <input type="submit" value="За всех" onclick="return SetApprovedForAllAndValidateForm();" @if (!Model.IsApprovedForAllEnable)
                                                                        {<text>style="display:none"</text>}/>    
                        @Html.HiddenFor(m => m.IsApproveForAllByConsultant)     
                        @Html.HiddenFor(m => m.IsApproveForAllByConsultantEnable)                                                                                     
                        <input type="submit" value="Согласовать за всех" onclick="return SetApprovedForAllByConsultant();" @if (!Model.IsApproveForAllByConsultantEnable)
                        {<text>style="display:none"</text>}/>                                                                                                       
            </td>
    </tr>
    <tr>
            <td colspan="2">
                <input type="hidden" id="IsApprovedByUserEnable" name="IsApprovedByUserEnable" value="@Model.IsApprovedByUserEnable" />
                @*@Html.CheckBox("IsApprovedByUser", Model.IsApprovedByUser, Model.IsApprovedByUserEnable ? null : (object)new { disabled = "disabled" }) *@
                <input type="checkbox" id="IsApprovedByUser" disabled = "disabled" name="IsApprovedByUser" @if (Model.IsApprovedByUser) {<text>checked="checked"</text>} />
                @Html.LabelFor(model => model.IsApprovedByUser)
                @if (!Model.IsApprovedByUserEnable)
                {
                    <input type="hidden" id="IsApprovedByUserHidden" name="IsApprovedByUserHidden" value="@Model.IsApprovedByUser" />
                }
            </td>
    </tr>
    <tr>
            <td colspan="2">
                <input type="hidden" id="IsApprovedByManagerEnable" name="IsApprovedByManagerEnable" value="@Model.IsApprovedByManagerEnable" />
                @*@Html.CheckBox("IsApprovedByManager", Model.IsApprovedByManager, Model.IsApprovedByManagerEnable ? null : (object)new { disabled = "disabled" }) *@
                <input type="checkbox" id="IsApprovedByManager" disabled = "disabled" name="IsApprovedByManager" @if (Model.IsApprovedByManager) {<text>checked="checked"</text>} />
                @Html.LabelFor(model => model.IsApprovedByManager)
                @if (!Model.IsApprovedByManagerEnable)
                {
                    <input type="hidden" id="IsApprovedByManagerHidden" name="IsApprovedByManagerHidden" value="@Model.IsApprovedByManager" />
                }
                @if (Model.IsPyrusLinkAvailable)
                {
                    <a target="_blank" href="https://pyrus.com/ru/">Закрыть доступ к программам через систему Pyrus</a>
                    @Html.LabelFor(m => m.PyrusNumber)
                    @Html.TextBoxFor(m => m.PyrusNumber, Model.IsApprovedEnable ? null : (object)new { disabled = "disabled" })
                }
            </td>
    </tr>
    <tr>
            <td colspan="2">
                <input type="hidden" id="IsApprovedByPersonnelManagerEnable" name="IsApprovedByPersonnelManagerEnable" value="@Model.IsApprovedByPersonnelManagerEnable" />
                @*@Html.CheckBoxFor(model => model.IsApprovedByPersonnelManager, Model.IsApprovedByPersonnelManagerEnable ? null : (object)new { disabled = "disabled" }) *@
                <input type="checkbox" id="IsApprovedByPersonnelManager" disabled = "disabled" name="IsApprovedByPersonnelManager" @if (Model.IsApprovedByPersonnelManager) {<text>checked="checked"</text>} />
                @Html.LabelFor(model => model.IsApprovedByPersonnelManager)
                @if (!Model.IsApprovedByPersonnelManagerEnable)
                {
                    <input type="hidden" id="IsApprovedByPersonnelManagerHidden" name="IsApprovedByPersonnelManagerHidden" value="@Model.IsApprovedByPersonnelManager" />
                }
            </td>
    </tr>
     <tr>
            <td colspan="2">
                <input type="hidden" id="IsPostedTo1CEnable" name="IsPostedTo1CEnable" value="@Model.IsPostedTo1CEnable" />
                @*@Html.CheckBox("IsPostedTo1C", Model.IsPostedTo1C, Model.IsPostedTo1CEnable ? null : (object)new { disabled = "disabled" }) *@
                <input type="checkbox" id="IsPostedTo1C" disabled = "disabled" name="IsPostedTo1C" @if (Model.IsPostedTo1C) {<text>checked="checked"</text>} />
                @Html.LabelFor(model => model.IsPostedTo1C)
                @if (!Model.IsPostedTo1CEnable)
                {
                    <input type="hidden" id="IsPostedTo1CHidden" name="IsPostedTo1CHidden" value="@Model.IsPostedTo1C" />
                }
            </td>
    </tr>

    <tr>
             <td colspan="2" style="height:15px">
                <hr />
             </td>
    </tr>

    @* Ссылка для открытия скана подписанного приказа *@

    <tr>
        <td colspan="2">@Html.LabelFor(model => model.OrderScanAttachment):
            @if (!string.IsNullOrEmpty(Model.OrderScanAttachment))
            {
                <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.OrderScanAttachmentId })' style="cursor:hand" target="_blank" >@Model.OrderScanAttachment</a>
                <input type="hidden" id="OrderScanAttachment" name="OrderScanAttachment" value="@Model.OrderScanAttachment" />
                <input type="hidden" id="OrderScanAttachmentId" name="OrderScanAttachmentId" value="@Model.OrderScanAttachmentId" />
            }
            else
            {
                <span>-</span>
            }
        </td>
    </tr>

    @* Прикрепление скана подписанного приказа *@

    @if (Model.IsConfirmationAllowed)
    {
        <tr>    
            <td colspan="2">Прикрепить скан подписанного приказа
                <input id="OrderScanFileContext" type="file" name="orderScanFile"/>&nbsp;<span style="color:Red">размер файла - не более 2 Мб</span>                
            </td>
        </tr>
        <tr>    
            <td colspan="2">
                <input type="submit" value="Сохранить" onclick="return ValidateForm();" />
            </td>
        </tr>
    }

    </table>
    </div>
    
    <br />
    <div class="comment-wrap">
    <table style="width:100%">
     <tr>
        <td colspan="2">
            <div id="CommentModelContext">@Html.Partial("RequestCommentPartial", Model.CommentsModel)</div>
        </td>
    </tr>
    </table>
    </div>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#BeginDate").datepicker({changeMonth: true, changeYear: true});
            $("#EndDate").datepicker({changeMonth: true, changeYear: true});
            $("#PaidToDate1").datepicker({changeMonth: true, changeYear: true});
            $("#PaidToDate").datepicker({changeMonth: true, changeYear: true});
            $(".hasDatepicker").width("75px");
            $("#ChildrenCount").width("75px");
            setActiveMenuItem("userChildVacation");
        });    
    function ValidateForm()
    {
        return true;
    }

    function SetApprovedForAllByConsultant() {
        //SetApprovedAndValidateForm();
        $("#IsApproveForAllByConsultant").val('true');
        return true;
    }

    function SetApprovedForAllAndValidateForm() {
        SetApprovedAndValidateForm();
        $("#IsApprovedForAll").val('true');
        return true;
    }
    function SetApprovedAndValidateForm() {
        $("#IsApproved").val('true');
        return true;
    }
    function Delete() {
        $("#IsDelete").val("true");
        return true;
    }
    </script>
}

