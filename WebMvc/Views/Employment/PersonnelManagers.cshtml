@model Reports.Presenters.UI.ViewModel.Employment2.PersonnelManagersModel
@{
    Layout = "~/Views/Shared/_LayoutEmployment.cshtml";
    ViewBag.Title = "Прием - Кадры";
}

@Html.Partial("CandidateState", Model.CandidateStateModel)

<span style="color:red;">@ViewBag.Error</span>
<span style="font-size:large;">@Html.ValidationMessageFor(m => m.MessageStr)</span>

@using (Html.BeginForm("PersonnelManagers", "Employment", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.UserId)
    
    
    <fieldset class="bordered doc-wrap panel floatleft">
    <legend>Кадры</legend>
        <div class="formfield clearleft">
            @Html.LabelFor(m => m.EmploymentOrderDate)&nbsp;@Html.ValidationMessageFor(m => m.EmploymentOrderDate)<br />
            @Html.EditorFor(m => m.EmploymentOrderDate)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.EmploymentOrderNumber)&nbsp;@Html.ValidationMessageFor(m => m.EmploymentOrderNumber)<br />
            @Html.TextBoxFor(m => m.EmploymentOrderNumber, new { @class = "halfwidth" })
        </div>
        <div class="formfield clearleft">
            @Html.LabelFor(m => m.EmploymentDate)&nbsp;@Html.ValidationMessageFor(m => m.EmploymentDate)<br />
            @Html.EditorFor(m => m.EmploymentDate)
        </div>
        <div class="formfield clearleft">
            @Html.LabelFor(m => m.ContractDate)&nbsp;@Html.ValidationMessageFor(m => m.ContractDate)<br />
            @Html.EditorFor(m => m.ContractDate)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.ContractNumber)&nbsp;@Html.ValidationMessageFor(m => m.ContractNumber)<br />
            @Html.TextBoxFor(m => m.ContractNumber, new { @class = "halfwidth" })
        </div>
        @if (Model.IsFixedTermContract.HasValue && Model.IsFixedTermContract.Value)
        {
            <div class="formfield">
                @Html.LabelFor(m => m.ContractEndDate)&nbsp;@Html.ValidationMessageFor(m => m.ContractEndDate)<br />
                @Html.EditorFor(m => m.ContractEndDate)
            </div>
        }
        
        @if (Model.IsContractChangedToIndefinite)
        {
            <div class="formfield">
                @Html.LabelFor(m => m.SupplementaryAgreementCreateDate)&nbsp;@Html.ValidationMessageFor(m => m.SupplementaryAgreementCreateDate)<br />
                @Html.EditorFor(m => m.SupplementaryAgreementCreateDate)
            </div>
            <div class="formfield">
                @Html.LabelFor(m => m.SupplementaryAgreementNumber)&nbsp;@Html.ValidationMessageFor(m => m.SupplementaryAgreementNumber)<br />
                @Html.EditorFor(m => m.SupplementaryAgreementNumber)
            </div>
            <div class="formfield">
                @Html.LabelFor(m => m.ChangeContractToIndefiniteOrderCreateDate)&nbsp;@Html.ValidationMessageFor(m => m.ChangeContractToIndefiniteOrderCreateDate)<br />
                @Html.EditorFor(m => m.ChangeContractToIndefiniteOrderCreateDate)
            </div>
            <div class="formfield">
                @Html.LabelFor(m => m.ChangeContractToIndefiniteOrderNumber)&nbsp;@Html.ValidationMessageFor(m => m.ChangeContractToIndefiniteOrderNumber)<br />
                @Html.EditorFor(m => m.ChangeContractToIndefiniteOrderNumber)
            </div>
        }

        <div class="formfield clear" id="isHourlySalaryBasisContainer">            
            @Html.RadioButtonFor(m => m.IsHourlySalaryBasis, false, new { @id = "IsHourlySalaryBasisFalse" })<label id="lblHSBFalse" for="IsHourlySalaryBasisFalse" @if (!Model.IsHourlySalaryBasis)
                                                                                                                                                                    {<text>style="border-color:red;"</text>} else{<text> style="border-color:none;"</text>}>Оклад по дням</label>
            @Html.RadioButtonFor(m => m.IsHourlySalaryBasis, true, new { @id = "IsHourlySalaryBasisTrue" })<label id="lblHSBTrue" for="IsHourlySalaryBasisTrue" @if (Model.IsHourlySalaryBasis)
                                                                                                                                                                {<text>style="border-color:red;"</text>} else{<text> style="border-color:none;"</text>}>Оклад по часам</label>
        </div>
        
        <div class="formfield clear">
            @Html.LabelFor(m => m.BasicSalary)&nbsp;@Html.ValidationMessageFor(m => m.BasicSalary)<br />
            @Html.TextBoxFor(m => m.BasicSalary, new { @class = "calc halfwidth" })
        </div>

        <div class="formfield clearleft">
            @Html.LabelFor(m => m.NorthernAreaAddition)&nbsp;@Html.ValidationMessageFor(m => m.NorthernAreaAddition)<br />
            @Html.TextBoxFor(m => m.NorthernAreaAddition, new { @class = "calc halfwidth" })
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.AreaMultiplier)&nbsp;@Html.ValidationMessageFor(m => m.AreaMultiplier)<br />
            @Html.TextBoxFor(m => m.AreaMultiplier, new { @class = "calc halfwidth" })
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.AreaAddition)&nbsp;@Html.ValidationMessageFor(m => m.AreaAddition)<br />
            @Html.TextBoxFor(m => m.AreaAddition, new { @class = "calc halfwidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.TravelRelatedAddition)&nbsp;@Html.ValidationMessageFor(m => m.TravelRelatedAddition)<br />
            @Html.TextBoxFor(m => m.TravelRelatedAddition, new { @class = "calc halfwidth" })
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.CompetenceAddition)&nbsp;@Html.ValidationMessageFor(m => m.CompetenceAddition)<br />
            @Html.TextBoxFor(m => m.CompetenceAddition, new { @class = "calc halfwidth" })
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.FrontOfficeExperienceAddition)&nbsp;@Html.ValidationMessageFor(m => m.FrontOfficeExperienceAddition)<br />
            @Html.TextBoxFor(m => m.FrontOfficeExperienceAddition, new { @class = "calc halfwidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.Grade)&nbsp;@Html.ValidationMessageFor(m => m.Grade)<br />
            @Html.TextBoxFor(m => m.Grade, new { @class = "halfwidth" })
        </div>
        <br />
        <fieldset class="bordered nomargin clear">
        <legend class="level2">Общий стаж</legend>
            <div class="formfield clearleft">
                @Html.ValidationMessageFor(m => m.OverallExperienceYears)<br />
                @Html.EditorFor(m => m.OverallExperienceYears)&nbsp;@Html.LabelFor(m => m.OverallExperienceYears)
            </div>
            <div class="formfield">
                @Html.ValidationMessageFor(m => m.OverallExperienceMonths)<br />
                @Html.EditorFor(m => m.OverallExperienceMonths)&nbsp;@Html.LabelFor(m => m.OverallExperienceMonths)
            </div>
            <div class="formfield">
                @Html.ValidationMessageFor(m => m.OverallExperienceDays)<br />
                @Html.EditorFor(m => m.OverallExperienceDays)&nbsp;@Html.LabelFor(m => m.OverallExperienceDays)
            </div>
        </fieldset>
        <fieldset class="bordered nomargin clear">
        <legend class="level2">Страховой стаж (по состоянию на дату приема)</legend>
            <div class="formfield clearleft">                
                @Html.ValidationMessageFor(m => m.InsurableExperienceYears)<br />
                @Html.EditorFor(m => m.InsurableExperienceYears)&nbsp;@Html.LabelFor(m => m.InsurableExperienceYears)
            </div>
            <div class="formfield">
                @Html.ValidationMessageFor(m => m.InsurableExperienceMonths)<br />
                @Html.EditorFor(m => m.InsurableExperienceMonths)&nbsp;@Html.LabelFor(m => m.InsurableExperienceMonths)
            </div>
            <div class="formfield">
                @Html.ValidationMessageFor(m => m.InsurableExperienceDays)<br />
                @Html.EditorFor(m => m.InsurableExperienceDays)&nbsp;@Html.LabelFor(m => m.InsurableExperienceDays)
            </div>
        </fieldset>


        <div class="formfield clearleft">
            @Html.LabelFor(m => m.PersonalAccount)&nbsp;@Html.ValidationMessageFor(m => m.PersonalAccount)<br />
            @Html.EditorFor(m => m.PersonalAccount)
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.PersonalAccountContractorId)&nbsp;@Html.ValidationMessageFor(m => m.PersonalAccountContractorId)<br />
            @Html.DropDownListFor(m => m.PersonalAccountContractorId, Model.PersonalAccountContractors)
        </div>


        <div class="formfield clear">
            @Html.LabelFor(m => m.AccessGroupId)&nbsp;@Html.ValidationMessageFor(m => m.AccessGroupId)<br />
            @Html.DropDownListFor(m => m.AccessGroupId, Model.AccessGroups)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.Level)&nbsp;@Html.ValidationMessageFor(m => m.Level)<br />
            @Html.TextBoxFor(m => m.Level, new { @class = "calc halfwidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.SignerId)&nbsp;@Html.ValidationMessageFor(m => m.SignerId)<br />
            @Html.DropDownListFor(m => m.SignerId, Model.Signers, string.Empty)
        </div>

        <div class="formfield">
            @Html.LabelFor(m => m.InsuredPersonTypeId)&nbsp;@Html.ValidationMessageFor(m => m.InsuredPersonTypeId)<br />
            @Html.DropDownListFor(m => m.InsuredPersonTypeId, Model.InsuredPersonTypeItems, string.Empty)
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.StatusId)&nbsp;@Html.ValidationMessageFor(m => m.StatusId)<br />
            @Html.DropDownListFor(m => m.StatusId, Model.StatusItems, string.Empty)
        </div>        

        <div class="formfield clearleft">
            <button type="submit">Сохранить</button>                
        </div>            
    </fieldset>
    @*
    <div class="buttonpanel">
        <button type="button" onclick="window.location.href='@Url.Action("GetPrintContractForm", "Employment", new { userId = Model.UserId })';">Печать<br />трудового договора</button>
        <button type="button" onclick="window.location.href='@Url.Action("GetPrintEmploymentOrder", "Employment", new { userId = Model.UserId })';">Печать<br />приказа о приеме</button>
        <button type="button" onclick="window.location.href='@Url.Action("GetPrintT2", "Employment", new { userId = Model.UserId })';">Печать<br />Т2</button>
        <button type="button" onclick="window.location.href='@Url.Action("GetPrintLiabilityContract", "Employment", new { userId = Model.UserId })';">Печать<br />договора Мат. ответственность</button>
        <button type="button" onclick="window.location.href='@Url.Action("GetPrintPersonalDataAgreement", "Employment", new { userId = Model.UserId })';">Печать<br />ДС Персональные данные</button>
        <button type="button" onclick="window.location.href='@Url.Action("GetPrintPersonalDataObligation", "Employment", new { userId = Model.UserId })';">Печать<br />Обязательство конфиденциальность</button>
        <button type="button" onclick="window.location.href='@Url.Action("GetPrintEmploymentFile", "Employment", new { userId = Model.UserId })';">Печать<br />личного листка<br />по учету кадров</button>
        <button type="button" onclick="window.location.href='@Url.Action("GetPrintAttachments", "Employment", new { userId = Model.UserId })';">Печать<br />реестра личного дела</button>
    </div>
 *@
}

<script src="/Scripts/UIHelpers.js" type="text/javascript"></script>

<script  type="text/javascript">
    $(document).ready(function () {
        setActiveMenuItem("empPersonnelManagers");
        UIHelpers.attachDatepickerToInputs($('#EmploymentOrderDate, #EmploymentDate, #ContractDate'), "-1:+1", true);
        UIHelpers.attachDatepickerToInputs($('#ContractEndDate'), "-0:+10;+1", true);
        UIHelpers.attachDatepickerToInputs($('#SupplementaryAgreementCreateDate, #ChangeContractToIndefiniteOrderCreateDate'), "-20:+0;-20Y;+0", true);
        $('#isHourlySalaryBasisContainer').buttonset();
        //подкрашиваем пол
        $("#IsHourlySalaryBasisTrue").click(function () {
            $("#lblHSBTrue").css("border-color", "red");
            $("#lblHSBFalse").css("border-color", "silver");
        });
        $("#IsHourlySalaryBasisFalse").click(function () {
            $("#lblHSBTrue").css("border-color", "silver");
            $("#lblHSBFalse").css("border-color", "red");
        });
    });
</script>