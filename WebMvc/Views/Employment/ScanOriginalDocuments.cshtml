@model Reports.Presenters.UI.ViewModel.Employment2.ScanOriginalDocumentsModel
@using Reports.Presenters.Services.Impl
@using Reports.Core
@{
    var dto = UserDto.Deserialize(((FormsIdentity)(HttpContext.Current.User.Identity)).Ticket.UserData);
    if ((dto.UserRole & UserRole.Candidate) > 0)
    {
        Layout = "~/Views/Shared/_LayoutGeneral.cshtml";
        ViewBag.Title = "Сканы оригиналов документов";
    }
}

@Html.Partial("CandidateState", Model.CandidateStateModel)
<span style="font-size:large;">@Html.ValidationMessageFor(m => m.ErrorMessage)</span>

@using (Html.BeginForm("ScanOriginalDocuments", "Employment", FormMethod.Post, new { enctype = "multipart/form-data", id = "ScanOriginalDocumentsForm" }))
{
    @Html.HiddenFor(m => m.UserId)    
    @Html.HiddenFor(m => m.IsAgree)
    @Html.HiddenFor(m => m.IsScanODDraft)
    @Html.HiddenFor(m => m.SendTo1C)
    @Html.HiddenFor(m => m.DeleteAttachmentId)
    @Html.HiddenFor(m => m.IsVolga)
    
    
    <fieldset class="bordered doc-wrap panel">
        <table class="buttonTable">
            <tr>
                <td colspan="7">
                    @Html.CheckBoxFor(m => m.AgreedToPersonalDataProcessing)
                    @Html.LabelFor(m => m.AgreedToPersonalDataProcessing)<br />
                    @Html.ValidationMessageFor(m => m.AgreedToPersonalDataProcessing)
                </td>
            </tr>
            <tr>
                <td rowspan="3">Общая информация</td>
                <td>
                    @Html.LabelFor(m => m.SNILSScanFile)
                </td>
                <td>
                    Выбрать скан для загрузки<br /><input type="file" name="SNILSScanFile" id="SNILSScanFile" @if (!string.IsNullOrEmpty(Model.SNILSScanAttachmentFilename) || Model.IsScanFinal)
                                                                                                              {<text>style="display:none;"</text>} /> @Html.ValidationMessageFor(m => m.SNILSScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.SNILSScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.SNILSScanAttachmentFilename
                    </a>

                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.SNILSScanAttachmentId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.SNILSScanAttachmentFilename))
                                                                                                                                                            {<text>style="display:none"</text>}/>
                    }
                    
                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 213).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 213).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 213).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>
                <td rowspan="8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>


                <td rowspan="2">Состав семьи</td>
                <td>@Html.LabelFor(m => m.MarriageCertificateScanFile)</td>
                <td>
                    Выбрать скан для загрузки<br /><input type="file" name="MarriageCertificateScanFile" id="MarriageCertificateScanFile" @if (!string.IsNullOrEmpty(Model.MarriageCertificateScanAttachmentFilename) || Model.IsScanFinal)
                                                                                                                                          {<text>style="display:none;"</text>} /> @Html.ValidationMessageFor(m => m.MarriageCertificateScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.MarriageCertificateScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.MarriageCertificateScanAttachmentFilename
                    </a>

                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.MarriageCertificateScanAttachmentId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.MarriageCertificateScanAttachmentFilename))
                                                                                                                                                     {<text>style="display:none"</text>}/>
                    }

                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 231).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 231).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 231).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.INNScanFile)</td>
                <td>
                    Выбрать скан для загрузки<br /><input type="file" name="INNScanFile" id="INNScanFile" @if (!string.IsNullOrEmpty(Model.INNScanAttachmentFilename) || Model.IsScanFinal)
                                                                                                          {<text>style="display:none;"</text>}/> @Html.ValidationMessageFor(m => m.INNScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.INNScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.INNScanAttachmentFilename
                    </a>

                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.INNScanAttachmentId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.INNScanAttachmentFilename))
                                                                                                                                     {<text>style="display:none"</text>}/>
                    }
                    
                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 212).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 212).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 212).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>


                <td>@Html.LabelFor(m => m.ChildBirthCertificateScanFile)</td>
                <td>
                    Выбрать скан для загрузки<br /><input type="file" name="ChildBirthCertificateScanFile" id="ChildBirthCertificateScanFile" @if (!string.IsNullOrEmpty(Model.ChildBirthCertificateScanAttachmentFilename) || Model.IsScanFinal)
                                                                                                                                              {<text>style="display:none;"</text>} /> @Html.ValidationMessageFor(m => m.ChildBirthCertificateScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.ChildBirthCertificateScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.ChildBirthCertificateScanAttachmentFilename
                    </a>

                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.ChildBirthCertificateScanAttachmentId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.ChildBirthCertificateScanAttachmentFilename))
                                                                                                                                                       {<text>style="display:none"</text>}/>
                    }

                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 232).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 232).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 232).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.DisabilityCertificateScanFile)</td>
                <td>
                    Выбрать скан для загрузки<br /><input type="file" name="DisabilityCertificateScanFile" id="DisabilityCertificateScanFile" @if (!string.IsNullOrEmpty(Model.DisabilityCertificateScanAttachmentFilename) || Model.IsScanFinal)
                                                                                                                                              {<text>style="display:none;"</text>} /> @Html.ValidationMessageFor(m => m.DisabilityCertificateScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.DisabilityCertificateScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.DisabilityCertificateScanAttachmentFilename
                    </a>

                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.DisabilityCertificateScanAttachmentId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.DisabilityCertificateScanAttachmentFilename))
                                                                                                                                                       {<text>style="display:none"</text>}/>
                    }
                    
                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 214).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 214).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 214).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>


                <td rowspan="2">Воинский учет</td>
                <td>@Html.LabelFor(m => m.MilitaryCardScanFile)</td>
                <td>
                    Выбрать скан для загрузки<br /><input type="file" name="MilitaryCardScanFile" id="MilitaryCardScanFile" @if (!string.IsNullOrEmpty(Model.MilitaryCardScanAttachmentFilename) || Model.IsScanFinal)
                                                                                                                            {<text>style="display:none;"</text>} /> @Html.ValidationMessageFor(m => m.MilitaryCardScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.MilitaryCardScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.MilitaryCardScanAttachmentFilename
                    </a>

                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.MilitaryCardScanAttachmentId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.MilitaryCardScanAttachmentFilename))
                                                                                                                                              {<text>style="display:none"</text>}/>
                    }

                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 241).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 241).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 241).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>
            </tr>
            <tr>
                <td>Паспортные данные</td>
                <td>@Html.LabelFor(m => m.InternalPassportScanFile)</td>
                <td>
                    Выбрать скан для загрузки<br /><input type="file" name="InternalPassportScanFile" id="InternalPassportScanFile" @if (!string.IsNullOrEmpty(Model.InternalPassportScanAttachmentFilename) || Model.IsScanFinal)
                                                                                                                                    {<text>style="display:none;"</text>} /> @Html.ValidationMessageFor(m => m.InternalPassportScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.InternalPassportScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.InternalPassportScanAttachmentFilename
                    </a>

                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.InternalPassportScanAttachmentId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.InternalPassportScanAttachmentFilename))
                                                                                                                                                  {<text>style="display:none"</text>}/>
                    }

                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 211).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 211).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 211).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>


                <td>@Html.LabelFor(m => m.MobilizationTicketScanFile)</td>
                <td>
                    Выбрать скан для загрузки<br /><input type="file" name="MobilizationTicketScanFile" id="MobilizationTicketScanFile" @if (!string.IsNullOrEmpty(Model.MobilizationTicketScanAttachmentFilename) || Model.IsScanFinal)
                                                                                                                                        {<text>style="display:none;"</text>} /> @Html.ValidationMessageFor(m => m.MobilizationTicketScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.MobilizationTicketScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.MobilizationTicketScanAttachmentFilename
                    </a>

                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.MobilizationTicketScanAttachmentId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.MobilizationTicketScanAttachmentFilename))
                                                                                                                                                    {<text>style="display:none"</text>}/>
                    }

                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 242).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 242).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 242).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>
            </tr>
            <tr>
                <td rowspan="4">Образование</td>
                <td>@Html.LabelFor(m => m.HigherEducationDiplomaScanFile)</td>
                <td>
                    Выбрать скан для загрузки<br /><input type="file" name="HigherEducationDiplomaScanFile" id="HigherEducationDiplomaScanFile" @if (!string.IsNullOrEmpty(Model.HigherEducationDiplomaScanFileName) || Model.IsScanFinal)
                                                                                                                                                {<text>style="display:none;"</text>} /> @Html.ValidationMessageFor(m => m.HigherEducationDiplomaScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.HigherEducationDiplomaScanId })' style="cursor:hand" target="_blank">
                    @Model.HigherEducationDiplomaScanFileName
                    </a>

                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.HigherEducationDiplomaScanId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.HigherEducationDiplomaScanFileName))
                                                                                                                                              {<text>style="display:none"</text>}/>
                    }

                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 221).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 221).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 221).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>


                <td rowspan="2">Трудовая деятельность</td>
                <td>@Html.LabelFor(m => m.WorkBookScanFile)</td>
                <td>
                    Выбрать скан для загрузки <br />
                    (Если вы принимаетесь на работу <br /> 
                     впервые, вам необходимо прикрепить <br />
                    скан заявления на выдачу трудовой книжки.<br />
                    Бланк заявления доступен <a href = "@Url.Content("~/Templates/zayavlenie_ob_oformlenii_trudovoy.doc")" target="_blank">тут</a>)
                    <br /><input type="file" name="WorkBookScanFile" id="WorkBookScanFile" @if (!string.IsNullOrEmpty(Model.WorkBookScanAttachmentFilename) || Model.IsScanFinal)
                                                                                                                    {<text>style="display:none;"</text>} /> @Html.ValidationMessageFor(m => m.WorkBookScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.WorkBookScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.WorkBookScanAttachmentFilename
                    </a>

                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.WorkBookScanAttachmentId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.WorkBookScanAttachmentFilename))
                                                                                                                                          {<text>style="display:none"</text>}/>
                    }

                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 215).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 215).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 215).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.PostGraduateEducationDiplomaScanFile)</td>
                <td>
                    Выбрать скан для загрузки<br /><input type="file" name="PostGraduateEducationDiplomaScanFile" id="PostGraduateEducationDiplomaScanFile" @if (!string.IsNullOrEmpty(Model.PostGraduateEducationDiplomaScanFileName) || Model.IsScanFinal)
                                                                                                                                                            {<text>style="display:none;"</text>} /> @Html.ValidationMessageFor(m => m.PostGraduateEducationDiplomaScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.PostGraduateEducationDiplomaScanId })' style="cursor:hand" target="_blank">
                    @Model.PostGraduateEducationDiplomaScanFileName
                    </a>

                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.PostGraduateEducationDiplomaScanId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.PostGraduateEducationDiplomaScanFileName))
                                                                                                                                                    {<text>style="display:none"</text>}/>
                    }

                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 222).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 222).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 222).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>

                <td>@Html.LabelFor(m => m.WorkBookSupplementScanFile)</td>
                <td>
                    Выбрать скан для загрузки<br /><input type="file" name="WorkBookSupplementScanFile" id="WorkBookSupplementScanFile" @if (!string.IsNullOrEmpty(Model.WorkBookSupplementScanAttachmentFilename) || Model.IsScanFinal)
                                                                                                                                        {<text>style="display:none;"</text>} /> @Html.ValidationMessageFor(m => m.WorkBookSupplementScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.WorkBookSupplementScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.WorkBookSupplementScanAttachmentFilename
                    </a>

                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.WorkBookSupplementScanAttachmentId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.WorkBookSupplementScanAttachmentFilename))
                                                                                                                                                    {<text>style="display:none"</text>}/>
                    }

                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 216).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 216).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 216).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.CertificationScanFile)</td>
                <td>
                    Выбрать скан для загрузки<br /><input type="file" name="CertificationScanFile" id="CertificationScanFile" @if (!string.IsNullOrEmpty(Model.CertificationScanFileName) || Model.IsScanFinal)
                                                                                                                              {<text>style="display:none;"</text>} /> @Html.ValidationMessageFor(m => m.CertificationScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.CertificationScanId })' style="cursor:hand" target="_blank">
                    @Model.CertificationScanFileName
                    </a>

                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.CertificationScanId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.CertificationScanFileName))
                                                                                                                                     {<text>style="display:none"</text>}/>
                    }

                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 223).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 223).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 223).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>

                <td rowspan="2">Департамент безопасности</td>
                <td>@Html.LabelFor(m => m.PersonalDataProcessingScanFile)</td>
                <td>
                    Выбрать скан для загрузки<br /><input type="file" name="PersonalDataProcessingScanFile" id="PersonalDataProcessingScanFile" @if (!string.IsNullOrEmpty(Model.PersonalDataProcessingScanAttachmentFilename) || Model.IsScanFinal)
                                                                                                                                                {<text>style="display:none;"</text>} /> @Html.ValidationMessageFor(m => m.PersonalDataProcessingScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.PersonalDataProcessingScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.PersonalDataProcessingScanAttachmentFilename
                    </a>

                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.PersonalDataProcessingScanAttachmentId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.PersonalDataProcessingScanAttachmentFilename))
                                                                                                                                                        {<text>style="display:none"</text>}/>
                    }

                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 261).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 261).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 261).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.TrainingScanFile)</td>
                <td>
                    Выбрать скан для загрузки<br /><input type="file" name="TrainingScanFile" id="TrainingScanFile" @if (!string.IsNullOrEmpty(Model.TrainingScanFileName) || Model.IsScanFinal)
                                                                                                                    {<text>style="display:none;"</text>} /> @Html.ValidationMessageFor(m => m.TrainingScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.TrainingScanId })' style="cursor:hand" target="_blank">
                    @Model.TrainingScanFileName
                    </a>

                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.TrainingScanId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.TrainingScanFileName))
                                                                                                                                {<text>style="display:none"</text>}/>
                    }

                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 224).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 224).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 224).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>

                <td>@Html.LabelFor(m => m.InfoValidityScanFile)</td>
                <td>
                    Выбрать скан для загрузки<br /><input type="file" name="InfoValidityScanFile" id="InfoValidityScanFile" @if (!string.IsNullOrEmpty(Model.InfoValidityScanAttachmentFilename) || Model.IsScanFinal)
                                                                                                                            {<text>style="display:none;"</text>} /> @Html.ValidationMessageFor(m => m.InfoValidityScanFile)

                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.InfoValidityScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.InfoValidityScanAttachmentFilename
                    </a>


                    @if (!Model.IsScanFinal)
                    {
                        <input type="button" value="Удалить скан" onclick="DeleteScanDocuments(@Model.InfoValidityScanAttachmentId, 'ScanOriginalDocumentsForm');" @if (string.IsNullOrEmpty(Model.InfoValidityScanAttachmentFilename))
                                                                                                                                              {<text>style="display:none"</text>}/>
                    }

                    @if (Model.AttachmentList != null && Model.AttachmentList.Where(x => x.RequestType == 262).Count() != 0)
                    {
                        <br /><br />
                        <label>Файл выложил:  @Model.AttachmentList.Where(x => x.RequestType == 262).Single().Surname</label><br />
                        <label>Дата операции: @Model.AttachmentList.Where(x => x.RequestType == 262).Single().DateCreated.ToShortDateString()</label>
                    }
                </td>
            </tr>
            <tr>
                <td colspan="7">
                    @Html.CheckBoxFor(m => m.IsScanFinal, !Model.IsScanFinal ? null : new { disabled = "disabled" })
                    @Html.LabelFor(m => m.IsScanFinal)<br />
                    @Html.ValidationMessageFor(m => m.IsScanFinal)
                </td>
            </tr>
        </table>
        <br />
        @if (dto.UserRole == UserRole.PersonnelManager)
        {
            <button id="btnScanODDraft" type="button">Черновик</button>
        }
        @if (dto.UserRole == UserRole.Candidate || dto.UserRole == UserRole.PersonnelManager || dto.UserRole == UserRole.Manager)
        {
            <button id="btnScanODSave" type="button" @if (Model.IsScanFinal || !Model.IsAgreeAvailable)
                                                 {<text> disabled="disabled"</text>}>Отправить на согласование</button>
        }
    </fieldset>
    
                                                 if ((dto.UserRole & UserRole.Candidate) > 0)
                                                 {
        <div id="DivIndicator" style="display:none;">
            <table>
                <tr>
                    <td><span id="LoadingIndicator2"></span></td>
                    <td><label>Идет загрузка данных...</label></td>
                </tr>
            </table>
        </div>
                                                 }
}

    @if ((dto.UserRole & UserRole.Candidate) == 0)
    {
        <form id="PrevCheckApproveForm" action="/Employment/BackgroundCheckReadOnly" target="tabs14" method="post">
            @Html.HiddenFor(m => m.UserId)
            <div class="clear">
                <span style="font-size:large;">@Html.ValidationMessageFor(m => m.ErrorMessage)</span><br /><br />
                @if (Model.IsScanFinal && Model.AgreedToPersonalDataProcessing)
                {
                    @Html.LabelFor(m => m.PrevApprovalStatus)<br />
                
                    <br />            
                    @Html.DropDownListFor(m => m.PrevApprovalStatus, Model.PrevApprovalStatuses, string.Empty, Model.IsPrevApproveBySecurityAvailable ? null : new { disabled = "disabled" })            
                }
                @if (Model.PrevApprovalStatus != null)
                {
                    <span class="fakeFormField">@Model.PrevApproverName</span>
                    if (Model.PrevApprovalDate.HasValue)
                    {
                        <span class="fakeFormField">@Model.PrevApprovalDate.Value.ToShortDateString() - @Model.PrevApprovalDate.Value.ToShortTimeString()</span>
                    }
                }
                @if (Model.IsPrevApproveBySecurityAvailable)
                {
                    <!--<button>Применить</button>-->
                    <input type="button" value="Применить" onclick="AjaxFormRequest('tabs14', 'PrevCheckApproveForm', '/Employment/BackgroundPrevCheck', 'POST')" />
                }
                @Html.HiddenFor(m => m.IsCancelApproveAvailale)
                @if (Model.IsCancelApproveAvailale)
                {
                    @*<input type="button" value="Отменить согласование" onclick="AjaxFormRequest('tabs8', 'BackgroundCheckReadOnly', '/Employment/BackgroundCheckReadOnly', 'POST')"/>*@
                    <input type="button" value="Отменить согласование" onclick="AjaxFormRequest('tabs14', 'PrevCheckApproveForm', '/Employment/BackgroundPrevCheck', 'POST')"/>
                }
            </div>
        </form>
    }
    

<script type="text/javascript">
    $(document).ready(function () {
        setActiveMenuItem("empScanOriginalDocuments");

        $("#IsAgree").val(false);
        $("#DeleteAttachmentId").val(0);


        $("#btnScanODDraft").click(function () {
            ShowFlash(true);
            $("#IsScanODDraft").val(true);
            $("#ScanOriginalDocumentsForm").submit();
        });

        $("#btnScanODSave").click(function () {
            ShowFlash(true);
            $("#IsAgree").val(true);
            $("#ScanOriginalDocumentsForm").submit();
        });
        
        ShowFlash(true);
        ShowFlash(false);

        $("#SNILSScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });
        $("#INNScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });
        $("#DisabilityCertificateScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });
        $("#InternalPassportScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });
        $("#HigherEducationDiplomaScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });
        $("#PostGraduateEducationDiplomaScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });
        $("#CertificationScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });
        $("#TrainingScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });
        $("#MarriageCertificateScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });
        $("#ChildBirthCertificateScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });
        $("#MilitaryCardScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });
        $("#MobilizationTicketScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });
        $("#WorkBookScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });
        $("#WorkBookSupplementScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });
        $("#PersonalDataProcessingScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });
        $("#InfoValidityScanFile").change(function () { ShowFlash(true); $("#ScanOriginalDocumentsForm").submit(); });

        //$(":button").button();
    });


    function DeleteScanDocuments(id, formname) {
        ShowFlash(true);
        $("#DeleteAttachmentId").val(id);
        //$("#ScanOriginalDocumentsForm").submit();
        $("#" + formname).submit();
    }


    function ShowFlash(IsShow)  //показываем индикатор загрузки
    {
        if (!IsShow) {
            $("#LoadingIndicator2").removeClass("loading2");
            $("#DivIndicator").dialog("close");
            $("#DivIndicator").hide();
        }
        else {
            $("#LoadingIndicator2").addClass("loading2");
            $("#DivIndicator").show();
            $("#DivIndicator").dialog(
            { // initialize dialog box
                autoOpen: true,
                modal: true,
                // fix IE6  
                bgiframe: true,
                draggable: false,
                resizable: false,
                width: 300,
                height: 60,
                closeOnEscape: false,
                close: function (event, ui) {
                    //$(this).dialog("destroy").remove();
                }
            });
            $(".ui-dialog-titlebar").hide();
            $(".ui-dialog-titlebar-close").hide();
        }
    }
</script>

