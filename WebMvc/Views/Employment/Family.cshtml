@model Reports.Presenters.UI.ViewModel.Employment2.FamilyModel
@using Reports.Presenters.Services.Impl
@using Reports.Core
@{
    var dto = UserDto.Deserialize(((FormsIdentity)(HttpContext.Current.User.Identity)).Ticket.UserData);
    if ((dto.UserRole & UserRole.Candidate) > 0)
    {
        Layout = "~/Views/Shared/_LayoutEmployment.cshtml";
        ViewBag.Title = "Прием - Состав семьи";
    }
}

<span style="color:red;">@ViewBag.Error</span>

@using (Html.BeginForm("Family", "Employment", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <input type="hidden" id="RowID" name="RowID" value="@Model.RowID" />
    <input type="hidden" id="cmd" name="cmd" />
    @Html.HiddenFor(m => m.UserId)
    <b>Состояние приема кандидата</b>
    <table class="state">
        <tr>
            <td colspan="8" style="background-color:Silver">Состояние заполнения анкетных данных</td>
            <td @if (Model.CandidateState[0].BackgroundApproval.HasValue && Model.CandidateState[0].BackgroundApproval.Value)
                {<text>style="background-color:Lime"</text>}>Служба безопасности</td>
            <td @if (Model.CandidateState[0].TrainingApproval.HasValue && Model.CandidateState[0].TrainingApproval.Value)
                {<text>style="background-color:Lime"</text>}>Обучение</td>
            <td @if (Model.CandidateState[0].ManagerApproval.HasValue && Model.CandidateState[0].ManagerApproval.Value)
                {<text>style="background-color:Lime"</text>}>Руководители</td>
            <td @if (Model.CandidateState[0].PersonnelManagerApproval.HasValue && Model.CandidateState[0].PersonnelManagerApproval.Value)
                {<text>style="background-color:Lime"</text>}>Кадры</td>
        </tr>
        <tr>
            <td @if (Model.CandidateState[0].GeneralFinal)
                {<text>style="background-color:Lime"</text>}>Общая информация</td>
            <td @if (Model.CandidateState[0].PassportFinal)
                {<text>style="background-color:Lime"</text>}>Паспортные данные</td>
            <td @if (Model.CandidateState[0].EducationFinal)
                {<text>style="background-color:Lime"</text>}>Образование</td>
            <td @if (Model.CandidateState[0].FamilyFinal)
                {<text>style="background-color:Lime"</text>}>Состав семьи</td>
            <td @if (Model.CandidateState[0].MilitaryFinal)
                {<text>style="background-color:Lime"</text>}>Воинский учет</td>
            <td @if (Model.CandidateState[0].ExperienceFinal)
                {<text>style="background-color:Lime"</text>}>Трудовая деятельность</td>
            <td @if (Model.CandidateState[0].ContactFinal)
                {<text>style="background-color:Lime"</text>}>Контактные данные</td>
            <td @if (Model.CandidateState[0].BackgroundFinal)
                {<text>style="background-color:Lime"</text>}>Служба безопасности</td>
            <td colspan="4" style="background-color:Silver">Согласование</td>
        </tr>
    </table>
    
    <fieldset class="bordered doc-wrap panel">
    <legend>Состав семьи</legend>
        <div class="formfield clear">
            @Html.LabelFor(m => m.IsMarried) @Html.EditorFor(m => m.IsMarried)
        </div>            
        <table class="grid centered clear" id="family-members-table">
        <thead>
            <tr>
                <th>
                    Степень родства
                </th>
                <th>
                    ФИО
                </th>
                <th>
                    Паспортные данные
                </th>
                <th>
                    Дата рождения
                </th>
                <th>
                    Место рождения
                </th>
                <th>
                    Место работы, должность,<br />(рабочий, мобильный телефон)
                </th>
                <th>
                    Адрес места жительства,<br />(домашний, мобильный телефон)
                </th>
                @if ((@Model.Children != null && @Model.Children.Count != 0) || @Model.IsMarried)
                {
                    <th></th>
                }
            </tr>
        </thead>
        <tbody>
            <tr id="spouse-row" style="display: none; vertical-align:top;">
                <td style="">
                    @Html.LabelFor(m => m.Spouse)
                </td>
                <td>
                    @Html.EditorFor(m => m.Spouse.Name)
                </td>
                <td>
                    @Html.TextAreaFor(m => m.Spouse.PassportData)
                </td>
                <td>
                    @Html.EditorFor(m => m.Spouse.DateOfBirth)
                </td>
                <td>
                    @Html.TextAreaFor(m => m.Spouse.PlaceOfBirth)
                </td>
                <td>
                    @Html.TextAreaFor(m => m.Spouse.WorksAt)
                </td>
                <td>
                    @Html.TextAreaFor(m => m.Spouse.Contacts)
                </td>
                @if ((@Model.Children != null && @Model.Children.Count != 0) || @Model.IsMarried)
                {
                    <td>
                        @if (@Model.Spouse != null)
                        {
                            <a href="#" onclick="DeleteFamilyRow(@Model.Spouse.Id, true)">Удалить</a>
                        }
                    </td>
                }
            </tr>
            <tr style="vertical-align:top;">
                <td>
                    @Html.LabelFor(m => m.Father)
                </td>
                <td>
                    @Html.EditorFor(m => m.Father.Name)
                </td>
                <td>
                    @Html.TextAreaFor(m => m.Father.PassportData)
                </td>
                <td>
                    @Html.EditorFor(m => m.Father.DateOfBirth)
                </td>
                <td>
                    @Html.TextAreaFor(m => m.Father.PlaceOfBirth)
                </td>
                <td>
                    @Html.TextAreaFor(m => m.Father.WorksAt)
                </td>
                <td>
                    @Html.TextAreaFor(m => m.Father.Contacts)
                </td>
                @if ((@Model.Children != null && @Model.Children.Count != 0) || @Model.IsMarried)
                {
                    <td></td>
                }
            </tr>
            <tr style="vertical-align:top;">
                <td>
                    @Html.LabelFor(m => m.Mother)
                </td>
                <td>
                    @Html.EditorFor(m => m.Mother.Name)
                </td>
                <td>
                    @Html.TextAreaFor(m => m.Mother.PassportData)
                </td>
                <td>
                    @Html.EditorFor(m => m.Mother.DateOfBirth)
                </td>
                <td>
                    @Html.TextAreaFor(m => m.Mother.PlaceOfBirth)
                </td>
                <td>
                    @Html.TextAreaFor(m => m.Mother.WorksAt)
                </td>
                <td>
                    @Html.TextAreaFor(m => m.Mother.Contacts)
                </td>
                @if ((@Model.Children != null && @Model.Children.Count != 0) || @Model.IsMarried)
                {
                    <td></td>
                }
            </tr>

            @for (var i = 0; i < Model.Children.Count; i++)
            {
                <tr class="child-row">
                    <td>
                        Ребенок
                    </td>
                    <td>
                        @Model.Children[i].Name
                    </td>
                    <td>
                        @Model.Children[i].PassportData
                    </td>
                    <td>
                        @(@Model.Children[i].DateOfBirth.HasValue ? @Model.Children[i].DateOfBirth.Value.ToShortDateString() : "__.__.____")
                    </td>
                    <td>
                        @Model.Children[i].PlaceOfBirth
                    </td>
                    <td>
                        @Model.Children[i].WorksAt
                    </td>
                    <td>
                        @Model.Children[i].Contacts
                    </td>
                    @if (@Model.Children != null && @Model.Children.Count != 0)
                    {
                        <td>
                            <a href="#" onclick="DeleteFamilyRow(@Model.Children[i].Id, false)">Удалить</a>
                        </td>
                    }
                </tr>
            }
        </tbody>
        </table>

        <div>
            <a href="" id="add-child">Добавить запись о ребенке</a>
        </div>

        <div class="formfield clear">
            @Html.LabelFor(m => m.Cohabitants)<br />
            @Html.TextAreaFor(m => m.Cohabitants, new { cols = 50 })
        </div>
    </fieldset>
    
    <fieldset>

    <div class="formfield clear">
        Выбрать для загрузки скан свидетельства о браке<br /><input type="file" name=".MarriageCertificateScanFile" /> @Html.ValidationMessageFor(m => m.MarriageCertificateScanFile)
    </div>

    @if (!string.IsNullOrEmpty(Model.MarriageCertificateScanAttachmentFilename))
    {
        <div class="formfield">
            <br />Скан:
            <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.MarriageCertificateScanAttachmentId })' style="cursor:hand" target="_blank">
                @Model.MarriageCertificateScanAttachmentFilename
            </a>
        </div>
        <div class="formfield">
            <br /><input type="button" value="Удалить скан" onclick="deleteAttachment(@Model.MarriageCertificateScanAttachmentId);" @*@if (!Model.IsDeleteScanAvailable)
                                                                                        {<text>style="display:none"</text>}*@/>
        </div>
    }
    
    <div class="formfield clear">
        Выбрать для загрузки сканы свидетельств о рождении детей<br /><input type="file" name="files" />
    </div>
    <div class="formfield">
        <br /><a href="">Открыть</a>
    </div>
    <div class="formfield">
        <br /><a href="">Удалить</a>
    </div>
    
    <div class="clear">
        @Html.EditorFor(m => m.IsDraft)@Html.LabelFor(m => m.IsDraft)
        <button id="btnFamily" type="submit">Сохранить</button>
    </div>

    </fieldset>
}

<div id="add-child-dialog" title="Добавление записи о ребенке">
    @using (Html.BeginForm("FamilyAddChild", "Employment", FormMethod.Post))
    {
        <label for="Name" style="display:block;">ФИО</label><input type="text" name="Name" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="PassportData" style="display:block;">Паспортные данные</label><textarea rows="2" cols="30" name="PassportData" value="" class="text ui-widget-content ui-corner-all" style="display:block;"></textarea>
        <label for="DateOfBirth" style="display:block;">Дата рождения</label><input type="text" id="DateOfBirth" name="DateOfBirth" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="PlaceOfBirth" style="display:block;">Место рождения</label><textarea rows="2" cols="30" name="PlaceOfBirth" value="" class="text ui-widget-content ui-corner-all" style="display:block;"></textarea>
        <label for="WorksAt" style="display:block;">Место работы, должность,<br />(рабочий, мобильный телефон)</label><textarea rows="2" cols="30" name="WorksAt" value="" class="text ui-widget-content ui-corner-all" style="display:block;"></textarea>
        <label for="Contacts" style="display:block;">Адрес места жительства,<br />(домашний, мобильный телефон)</label><textarea rows="2" cols="30" name="Contacts" value="" class="text ui-widget-content ui-corner-all" style="display:block;"></textarea>
        <!-- Allow form submission with keyboard without duplicating the dialog button -->
        <input type="submit" tabindex="-1" style="position:absolute; top:-1000px" />
    }
</div>

<script src="/Scripts/UIHelpers.js" type="text/javascript"></script>

<script type="text/javascript">
    function DeleteFamilyRow(Id, IsSpouse) {
        $("#RowID").val(Id);
        if (IsSpouse){
            $("#IsMarried").val('false');
        }
        $("#btnFamily").click();
    }

    $(document).ready(function () {
        setActiveMenuItem("empFamily");
        UIHelpers.attachDatepickerToInputs($('#Spouse_DateOfBirth, #Father_DateOfBirth, #Mother_DateOfBirth'), "-120:+0;-120Y;-14Y", true);
        UIHelpers.attachDatepickerToInputs($('#DateOfBirth'), "-100:+0", true);

        UIHelpers.handleCheckboxState($("#IsMarried"),
            {
                $target: $("#spouse-row"),
                act: function () {
                    this.$target.show();
                }
            },
            {
                $target1: $("#spouse-row"),
                $target2: $("#spouse-row input, #spouse-row textarea"),
                act: function () {
                    this.$target1.hide();
                    this.$target2.val("");
                }
            },            
            true
        );

        var $addChildDialog = $('#add-child-dialog').dialog(
        {
            autoOpen: false,
            modal: true,
            width: "auto",
            draggable: false,
            resizable: false,
            buttons:
            {
                "OK": function () {
                    processAddChild();
                    $(this).dialog("close");
                },
                "Отмена": function () {
                    $(this).dialog("close");
                }
            }
        });

        var processAddChild = function()
        {
            var url = "@Url.Action("FamilyAddChild", "Employment")";
            var dataToSend = $("#add-child-dialog form").serialize();
            $.post(url, dataToSend, function(dataReceived){
                var $tbody = $("table#family-members-table>tbody")
                $("table#family-members-table>tbody>.child-row").remove();
                for (var i = 0; i < dataReceived.length; i++)
                {
                    $tbody.append(
                        "<tr><td>Ребенок</td><td>" +
                        (dataReceived[i].Name ? dataReceived[i].Name : "") + "</td><td>" +
                        (dataReceived[i].PassportData ? dataReceived[i].PassportData : "") + "</td><td>" +
                        UIHelpers.convertMSJsonDateToShortDateString(dataReceived[i].DateOfBirth) + "</td><td>" +
                        (dataReceived[i].PlaceOfBirth ? dataReceived[i].PlaceOfBirth : "") + "</td><td>" +
                        (dataReceived[i].WorksAt ? dataReceived[i].WorksAt : "") + "</td><td>" +
                        (dataReceived[i].Contacts ? dataReceived[i].Contacts : "") + "</td><td>" +
                        "<a onclick='DeleteFamilyRow(" + dataReceived[i].Id + ", false);' href='#' >Удалить</a></td></tr>"
                    );
                }
            }, "json");
        };

        $("#add-child").click(function (e) {
            $addChildDialog.dialog("open");
            e.preventDefault();
        });
    });
</script>