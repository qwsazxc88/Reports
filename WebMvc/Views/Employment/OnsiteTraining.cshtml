@model Reports.Presenters.UI.ViewModel.Employment2.OnsiteTrainingModel
@using Reports.Presenters.Services.Impl
@using Reports.Core
@{
    var dto = UserDto.Deserialize(((FormsIdentity)(HttpContext.Current.User.Identity)).Ticket.UserData);
    //Layout = "~/Views/Shared/_LayoutEmployment.cshtml";
    ViewBag.Title = "Прием - Обучение";
}

@using (Html.BeginForm("OnsiteTraining", "Employment", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.UserId)
    if ((dto.UserRole & UserRole.Trainer) == 0)
    {
        @Html.Partial("CandidateState", Model.CandidateStateModel)
    }
    
    
    <fieldset class="bordered doc-wrap panel">
    <legend>Обучение</legend>
    <table>
        <tr>
            <td>
                @Html.LabelFor(m => m.Type)
            </td>
            <td>
                    @Html.TextBoxFor(m => m.Type)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.Description)
            </td>
            <td>
                    @Html.TextBoxFor(m => m.Description)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.BeginningDate)
            </td>
            <td>
                    @Html.EditorFor(m => m.BeginningDate)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.EndDate)
            </td>
            <td>
                    @Html.EditorFor(m => m.EndDate)
            </td>
        </tr>    
        <tr>
            <td>
                @Html.LabelFor(m => m.Results)
            </td>
            <td>
                    @Html.TextBoxFor(m => m.Results)
            </td>
        </tr>
        
        <tr>

            <td>
                @Html.LabelFor(m => m.IsComplete)
            </td>
            <td>
                @Html.DropDownListFor(m => m.IsComplete, new List<SelectListItem> {
                    new SelectListItem {Text = "Нет", Value = "false"},
                    new SelectListItem {Text = "Да", Value = "true"}
                })
                @if (Model.IsComplete != null)
                {
                    <span class="fakeFormField">@Model.ApproverName</span>
                }
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.ReasonsForIncompleteTraining)
            </td>
            <td>
                    @Html.TextBoxFor(m => m.ReasonsForIncompleteTraining)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(m => m.Comments)
            </td>
            <td>
                    @Html.TextAreaFor(m => m.Comments)
            </td>
        </tr>
    </table>
    </fieldset>

                if (Model.IsApproveByTrainerAvailable)
                {
        <div class="clear">
            @Html.EditorFor(m => m.IsDraft)@Html.LabelFor(m => m.IsDraft)
            <button type="submit">Сохранить</button>
        </div>
                }
}

<script src="/Scripts/UIHelpers.js" type="text/javascript"></script>

<script  type="text/javascript">
    $(document).ready(function () {
        setActiveMenuItem("empOnsiteTraining");
        UIHelpers.attachDatepickerToInputs($('#BeginningDate, #EndDate'), "-1:+1", true);
        $("#IsComplete").change(function () {
            if ($('#IsComplete option:selected').val() == 'false') {
                $('#ReasonsForIncompleteTraining').removeAttr('readonly');
                ;
            }
            else {
                $('#ReasonsForIncompleteTraining').val('');
                $('#ReasonsForIncompleteTraining').attr('readonly', true);
                ;
            }
        });
    });
</script>