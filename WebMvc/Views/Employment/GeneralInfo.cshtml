@model Reports.Presenters.UI.ViewModel.Employment2.GeneralInfoModel
@{
    Layout = "~/Views/Shared/_LayoutEmployment.cshtml";
    ViewBag.Title = "Прием - Общая информация";
}
@{Html.EnableClientValidation();}
@{Html.EnableUnobtrusiveJavaScript();}
@using (Html.BeginForm("GeneralInfo", "Employment", FormMethod.Post, new { enctype = "multipart/form-data", id = "general-info-form" }))
{
    <input type="hidden" id="cmd" name="cmd" />
    @Html.HiddenFor(m => m.Version)
    @Html.HiddenFor(m => m.UserId)
    
    <fieldset class="bordered doc-wrap panel">
    <legend>Общая информация</legend>
        <div class="formfield clear">
            @Html.LabelFor(m => m.LastName)&nbsp;@Html.ValidationMessageFor(m => m.LastName)<br />
            @Html.TextBoxFor(m => m.LastName)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.FirstName)&nbsp;@Html.ValidationMessageFor(m => m.FirstName)<br />
            @Html.TextBoxFor(m => m.FirstName)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.Patronymic)&nbsp;@Html.ValidationMessageFor(m => m.Patronymic)<br />
            @Html.TextBoxFor(m => m.Patronymic)
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.NameChanges)<br />
            <fieldset class="bordered nomargin">
                <div id="name-changes-container">
                    @for (var i = 0; i < Model.NameChanges.Count; i++)
                    {
                        // Изменения ФИО                        
                        <table class="grid" data-id=@i>
                            <tr>
                                <td>
                                    @Html.LabelFor(m => m.NameChanges[i].PreviousName):
                                </td>
                                <td>
                                    @Html.TextBoxFor(m => m.NameChanges[i].PreviousName)
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(m => m.NameChanges[i].Date):
                                </td>
                                <td>
                                    @Html.EditorFor(m => m.NameChanges[i].Date)
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(m => m.NameChanges[i].Place):
                                </td>
                                <td>
                                    @Html.EditorFor(m => m.NameChanges[i].Place)
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(m => m.NameChanges[i].Reason):
                                </td>
                                <td>
                                    @Html.EditorFor(m => m.NameChanges[i].Reason)
                                </td>
                            </tr>                       
                        </table>
                    }
                </div>
                <button type="submit" id="add-name-change-button">Добавить новую запись</button>
            </fieldset>
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.IsMale)&nbsp;@Html.ValidationMessageFor(m => m.IsMale)<br />
            @Html.DropDownList("IsMale", new List<SelectListItem>
                { new SelectListItem {Value = "true", Text = "М"},
                    new SelectListItem {Value = "false", Text = "Ж"}
                })
        </div>
        @*<div class="formfield">
            @Html.LabelFor(m => m.Citizenship)&nbsp;@Html.ValidationMessageFor(m => m.Citizenship)<br />
            @Html.DropDownListFor(m => m.Citizenship, Model.CitizenshipItems)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.InsuredPersonType)&nbsp;@Html.ValidationMessageFor(m => m.InsuredPersonType)<br />
            @Html.DropDownListFor(m => m.InsuredPersonType, Model.InsuredPersonTypeItems)
        </div>*@
        <div class="formfield clear">
            @Html.LabelFor(m => m.DateOfBirth)&nbsp;@Html.ValidationMessageFor(m => m.DateOfBirth)<br />
            @Html.EditorFor(m => m.DateOfBirth)
        </div>
        <div class="formfield clear">
            <fieldset class="bordered nomargin">
            <legend class="level2">Место рождения</legend>
                <div class="formfield clear">
                    @Html.LabelFor(m => m.RegionOfBirth)&nbsp;@Html.ValidationMessageFor(m => m.RegionOfBirth)<br />
                    @Html.EditorFor(m => m.RegionOfBirth)
                </div>
                <div class="formfield">
                    @Html.LabelFor(m => m.CityOfBirth)&nbsp;@Html.ValidationMessageFor(m => m.CityOfBirth)<br />
                    @Html.EditorFor(m => m.CityOfBirth)
                </div>
            </fieldset>
        </div>            
        <div class="formfield clear">
            @Html.LabelFor(m => m.ForeignLanguages)<br />
            <fieldset class="bordered nomargin">
                <div id="foreign-languages-container">
                    <table class="grid">
                        <thead>
                            <tr>
                                <th>
                                    Язык
                                </th>
                                <th>
                                    Степень знания
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.ForeignLanguages.Count; i++)
                            {                            
                                <tr>                                
                                    <td>
                                        @Html.EditorFor(m => m.ForeignLanguages[i].LanguageName)
                                    </td>
                                    <td>
                                        @Html.EditorFor(m => m.ForeignLanguages[i].Level)
                                    </td>
                                </tr>
                            }
                        </tbody>                            
                    </table>
                </div>
            </fieldset>
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.INN)&nbsp;@Html.ValidationMessageFor(m => m.INN)<br />
            @Html.EditorFor(m => m.INN)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.SNILS)&nbsp;@Html.ValidationMessageFor(m => m.SNILS)<br />
            @Html.EditorFor(m => m.SNILS)
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.Disabilities)<br />
            <fieldset class="bordered nomargin">
                <div id="disabilities-container">
                    <table class="grid">
                        <thead>
                            <tr>
                                <th>
                                    Серия справки
                                </th>
                                <th>
                                    Номер справки
                                </th>
                                <th>
                                    Дата выдачи
                                </th>
                                <th>
                                    Группа инвалидности
                                </th>
                                <th>
                                    Срок действия справки
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.Disabilities.Count; i++)
                            {                            
                                <tr>                                
                                    <td>
                                        @Html.EditorFor(m => m.Disabilities[i].CertificateSeries)
                                    </td>
                                    <td>
                                        @Html.EditorFor(m => m.Disabilities[i].CertificateNumber)
                                    </td>
                                    <td>
                                        @Html.EditorFor(m => m.Disabilities[i].DateOfIssue)
                                    </td>
                                    <td>
                                        @Html.EditorFor(m => m.Disabilities[i].DisabilityDegree)
                                    </td>
                                    <td>
                                        @Html.EditorFor(m => m.Disabilities[i].CerificateExpirationDate)
                                    </td>
                                </tr>
                            }
                        </tbody>                            
                    </table>
                </div>
            </fieldset>
        </div>
        @*<div class="formfield clear">
            @Html.LabelFor(m => m.Status)&nbsp;@Html.ValidationMessageFor(m => m.Status)<br />
            @Html.DropDownListFor(m => m.Status, Model.StatusItems)
        </div>*@
        <div class="formfield clear">
            @Html.LabelFor(m => m.AgreedToPersonalDataProcessing)&nbsp;@Html.ValidationMessageFor(m => m.AgreedToPersonalDataProcessing)
            @Html.EditorFor(m => m.AgreedToPersonalDataProcessing)
        </div>
        
    </fieldset>
    
    <div class="clear">
        <button type="submit">Записать черновик</button>
        <button type="submit">Сохранить</button>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        setActiveMenuItem("empGeneralInfo");

        $('#DateOfBirth').datepicker({
            changeYear: true,
            yearRange: "-100:+0"
        });
        
        $("#add-name-change-button").click(function () {
            $("#cmd").val("add-name-change");
        });

        // Переключение флажка отсутствия отчества
        $("#IsPatronymicAbsent").click(function () {
            if ($(this).attr("checked") === true) {
                $("#Patronymic").attr("disabled", "disabled");
            }
            else {
                $("#Patronymic").removeAttr("disabled");
            }
        });
    });
</script>