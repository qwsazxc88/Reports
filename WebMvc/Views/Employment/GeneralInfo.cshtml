@model Reports.Presenters.UI.ViewModel.Employment2.GeneralInfoModel
@{
    Layout = "~/Views/Shared/_LayoutEmployment.cshtml";
    ViewBag.Title = "Прием - Общая информация";
}

<span style="color:red;">@ViewBag.Error</span>

@using (Html.BeginForm("GeneralInfo", "Employment", FormMethod.Post, new { enctype = "multipart/form-data", id = "general-info-form" }))
{    
    @Html.HiddenFor(m => m.Version)
    @Html.HiddenFor(m => m.UserId)
    
    <fieldset class="bordered doc-wrap panel">
    <legend>Общая информация</legend>
        <div class="formfield clearleft" style="float:right">
            <fieldset class="bordered nomargin clear"><legend class="level2">Фото</legend>
                <div style="width: 96px; height: 96px; background: gray;"></div>
                <input type="file" name="PhotoFile" />
                <br />@Html.ValidationMessageFor(m => m.PhotoFile)

                @if (!string.IsNullOrEmpty(Model.PhotoAttachmentFilename))
                {
                    <div class="formfield">
                        <br /><input type="button" value="Удалить фото" onclick="deleteAttachment(@Model.PhotoAttachmentId);" @*@if (!Model.IsDeleteScanAvailable)
                                                                                                   {<text>style="display:none"</text>}*@/>
                    </div>
                }
                
            </fieldset>            
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.LastName)&nbsp;@Html.ValidationMessageFor(m => m.LastName)<br />
            @Html.TextBoxFor(m => m.LastName)
        </div>
        <div class="formfield clearleft">
            @Html.LabelFor(m => m.FirstName)&nbsp;@Html.ValidationMessageFor(m => m.FirstName)<br />
            @Html.TextBoxFor(m => m.FirstName)
        </div>
        <div class="formfield clearleft">
            @Html.LabelFor(m => m.Patronymic)&nbsp;@Html.ValidationMessageFor(m => m.Patronymic)<br />
            @Html.TextBoxFor(m => m.Patronymic)&nbsp;@Html.CheckBoxFor(m => m.IsPatronymicAbsent)@Html.LabelFor(m => m.IsPatronymicAbsent)
        </div>        

        <fieldset class="bordered nomargin clear">
        <legend class="level2">@Html.LabelFor(m => m.NameChanges)</legend>
            @if (Model.NameChanges.Count > 0)
            {
                <div id="name-changes-container">
                    <table class="grid">
                    
                        <tr>
                            <th>
                                @Html.LabelFor(m => m.NameChanges[0].PreviousName)
                            </th>
                            <th>
                                @Html.LabelFor(m => m.NameChanges[0].Date)
                            </th>
                            <th>
                                @Html.LabelFor(m => m.NameChanges[0].Place)
                            </th>
                            <th>
                                @Html.LabelFor(m => m.NameChanges[0].Reason)
                            </th>
                        </tr>
                    
                        @for (var i = 0; i < Model.NameChanges.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Model.NameChanges[i].PreviousName
                                </td>
                                <td>
                                    @(@Model.NameChanges[i].Date.HasValue ? @Model.NameChanges[i].Date.Value.ToShortDateString() : @String.Empty)
                                </td>
                                <td>
                                    @Model.NameChanges[i].Place
                                </td>
                                <td>
                                    @Model.NameChanges[i].Reason
                                </td>
                                @*<td id="delete-name-change">
                                    <a href="" data-index=@i>Удалить</a>
                                </td>*@
                            </tr>
                        }                    

                    </table>
                </div>
            }
            <a href="" id="add-name-change">Добавить новую запись</a>
        </fieldset>

        <div class="formfield clear" id="gender">

            @Html.RadioButtonFor(m => m.IsMale, true, new { @id = "IsMaleTrue" })<label for="IsMaleTrue">М</label>
            @Html.RadioButtonFor(m => m.IsMale, false, new { @id = "IsMaleFalse" })<label for="IsMaleFalse">Ж</label>
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.CitizenshipId)&nbsp;@Html.ValidationMessageFor(m => m.CitizenshipId)<br />
            @Html.DropDownListFor(m => m.CitizenshipId, Model.CitizenshipItems, string.Empty)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.InsuredPersonTypeId)&nbsp;@Html.ValidationMessageFor(m => m.InsuredPersonTypeId)<br />
            @Html.DropDownListFor(m => m.InsuredPersonTypeId, Model.InsuredPersonTypeItems, string.Empty)
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.DateOfBirth)&nbsp;@Html.ValidationMessageFor(m => m.DateOfBirth)<br />
            @Html.EditorFor(m => m.DateOfBirth)
        </div>
        <div class="formfield clear">
            <fieldset class="bordered nomargin">
            <legend class="level2">Место рождения</legend>
                <div class="formfield clear">
                    @Html.LabelFor(m => m.RegionOfBirth)&nbsp;@Html.ValidationMessageFor(m => m.RegionOfBirth)<br />
                    @Html.EditorFor(m => m.RegionOfBirth)
                </div>
                <div class="formfield">
                    @Html.LabelFor(m => m.CityOfBirth)&nbsp;@Html.ValidationMessageFor(m => m.CityOfBirth)<br />
                    @Html.EditorFor(m => m.CityOfBirth)
                </div>
            </fieldset>
        </div>            

        <fieldset class="bordered nomargin clear">
        <legend class="level2">@Html.LabelFor(m => m.ForeignLanguages)</legend>
            @if (Model.ForeignLanguages.Count > 0)
            {
                <div id="foreign-languages-container">
                    <table class="grid">
                    
                        <tr>
                            <th>
                                @Html.LabelFor(m => m.ForeignLanguages[0].LanguageName)
                            </th>
                            <th>
                                @Html.LabelFor(m => m.ForeignLanguages[0].Level)
                            </th>
                        </tr>
                    
                        @for (var i = 0; i < Model.ForeignLanguages.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Model.ForeignLanguages[i].LanguageName
                                </td>
                                <td>
                                    @Model.ForeignLanguages[i].Level
                                </td>
                                @*<td id="delete-foreign-language">
                                    <a href="" data-index=@i>Удалить</a>
                                </td>*@
                            </tr>
                        }                    

                    </table>
                </div>
            }
            <a href="" id="add-foreign-language">Добавить новую запись</a>
        </fieldset>

        <div class="formfield clear">
            @Html.LabelFor(m => m.INN)&nbsp;@Html.ValidationMessageFor(m => m.INN)<br />
            @Html.TextBoxFor(m => m.INN, new { pattern = @"^\d{12}$", title = "12 цифр (############)" })
        </div>

        <div class="formfield">
            Выбрать скан для загрузки<br /><input type="file" name="INNScanFile" /> @Html.ValidationMessageFor(m => m.INNScanFile)
        </div>

        @if (!string.IsNullOrEmpty(Model.INNScanAttachmentFilename))
        {
            <div class="formfield">
                <br />Скан:
                <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.INNScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.INNScanAttachmentFilename
                </a>
            </div>
            <div class="formfield">
                <br /><input type="button" value="Удалить скан" onclick="deleteAttachment(@Model.INNScanAttachmentId);" @*@if (!Model.IsDeleteScanAvailable)
                                                                                           {<text>style="display:none"</text>}*@/>
            </div>
        }
        
        <div class="formfield clear">
            @Html.LabelFor(m => m.SNILS)&nbsp;@Html.ValidationMessageFor(m => m.SNILS)<br />
            @Html.TextBoxFor(m => m.SNILS, new { pattern = @"^(\d{3}-){3}\d{2}$", title = "###-###-###-##" })
        </div>

        <div class="formfield">
            Выбрать скан для загрузки<br /><input type="file" name="SNILSScanFile" /> @Html.ValidationMessageFor(m => m.SNILSScanFile)
        </div>

        @if (!string.IsNullOrEmpty(Model.SNILSScanAttachmentFilename))
        {
            <div class="formfield">
                <br />Скан:
                <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.SNILSScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.SNILSScanAttachmentFilename
                </a>
            </div>
            <div class="formfield">
                <br /><input type="button" value="Удалить скан" onclick="deleteAttachment(@Model.SNILSScanAttachmentId);" @*@if (!Model.IsDeleteScanAvailable)
                                                                                           {<text>style="display:none"</text>}*@/>
            </div>
        }

        <fieldset class="bordered nomargin clear">
        <legend class="level2">Инвалидность</legend>
            <div class="formfield clear">
                @Html.LabelFor(m => m.DisabilityCertificateSeries)&nbsp;@Html.ValidationMessageFor(m => m.DisabilityCertificateSeries)<br />
                @Html.TextBoxFor(m => m.DisabilityCertificateSeries)
            </div>
            <div class="formfield">
                @Html.LabelFor(m => m.DisabilityCertificateNumber)&nbsp;@Html.ValidationMessageFor(m => m.DisabilityCertificateNumber)<br />
                @Html.TextBoxFor(m => m.DisabilityCertificateNumber)
            </div>
            <div class="formfield">
                @Html.LabelFor(m => m.DisabilityCertificateDateOfIssue)&nbsp;@Html.ValidationMessageFor(m => m.DisabilityCertificateDateOfIssue)<br />
                @Html.EditorFor(m => m.DisabilityCertificateDateOfIssue)
            </div>
            <div class="formfield">
                @Html.LabelFor(m => m.DisabilityDegreeId)&nbsp;@Html.ValidationMessageFor(m => m.DisabilityDegreeId)<br />
                @Html.DropDownListFor(m => m.DisabilityDegreeId, Model.DisabilityDegrees, string.Empty)
            </div>
            <div class="formfield">
                @Html.LabelFor(m => m.DisabilityCertificateExpirationDate)&nbsp;@Html.ValidationMessageFor(m => m.DisabilityCertificateExpirationDate)<br />
                @Html.EditorFor(m => m.DisabilityCertificateExpirationDate)
            </div>
            <div class="formfield clear">
                Выбрать скан для загрузки<br /><input type="file" name="DisabilityCertificateScanFile" /> @Html.ValidationMessageFor(m => m.DisabilityCertificateScanFile)
            </div>
            
            @if (!string.IsNullOrEmpty(Model.DisabilityCertificateScanAttachmentFilename))
            {
                <div class="formfield">
                    <br />Скан:
                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.DisabilityCertificateScanAttachmentId })' style="cursor:hand" target="_blank">
                        @Model.DisabilityCertificateScanAttachmentFilename
                    </a>
                </div>
                <div class="formfield">
                    <br /><input type="button" value="Удалить скан" onclick="deleteAttachment(@Model.DisabilityCertificateScanAttachmentId);" @*@if (!Model.IsDeleteScanAvailable)
                                                                                               {<text>style="display:none"</text>}*@/>
                </div>
            }

        </fieldset>

        <div class="formfield clear">
            @Html.LabelFor(m => m.StatusId)&nbsp;@Html.ValidationMessageFor(m => m.StatusId)<br />
            @Html.DropDownListFor(m => m.StatusId, Model.StatusItems, string.Empty)
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.AgreedToPersonalDataProcessing)&nbsp;@Html.ValidationMessageFor(m => m.AgreedToPersonalDataProcessing)
            @Html.EditorFor(m => m.AgreedToPersonalDataProcessing)
        </div>
        
    </fieldset>
    
    <div class="clear">
        @Html.EditorFor(m => m.IsDraft)@Html.LabelFor(m => m.IsDraft)
        <button type="submit">Сохранить</button>
    </div>
}

@* --- *@

<div id="add-name-change-dialog" title="Добавление изменения ФИО">
    @using (Html.BeginForm("GeneralInfoAddNameChange", "Employment", FormMethod.Post))
    {
        <label for="PreviousName" style="display:block;">Предыдущие ФИО</label><input type="text" name="PreviousName" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="Date" style="display:block;">Дата изменения</label><input type="text" id="DateOfNameChange" name="Date" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="Place" style="display:block;">Место</label><input type="text" name="Place" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="Reason" style="display:block;">Причина</label><input type="text" name="Reason" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
 
        <!-- Allow form submission with keyboard without duplicating the dialog button -->
        <input type="submit" tabindex="-1" style="position:absolute; top:-1000px" />
    }
</div>

<div id="add-foreign-language-dialog" title="Добавление иностранного языка">
    @using (Html.BeginForm("GeneralInfoAddForeignLanguage", "Employment", FormMethod.Post))
    {
        <label for="LanguageName" style="display:block;">Язык</label><input type="text" name="LanguageName" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="Level" style="display:block;">Степень знания</label><input type="text" name="Level" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
 
        <!-- Allow form submission with keyboard without duplicating the dialog button -->
        <input type="submit" tabindex="-1" style="position:absolute; top:-1000px" />
    }
</div>

@* --- *@

<script src="/Scripts/UIHelpers.js" type="text/javascript"></script>

<script type="text/javascript">
    function deleteAttachment(id){
        var actionUrl="@Url.Action("DeleteAttachment", "Employment")";
        var url = actionUrl + "?Id=" + id;
        $.getJSON(url,
                       function (data) {
                            if(!data.Result){
                                alert('Ошибка удаления скана:'+ data.Error);
                            }
                            else {
                               location.reload(true);
                           }
                       }
                     );
        return false;
    }

    $(document).ready(function () {
        setActiveMenuItem("empGeneralInfo");
        attachDatepickerToInputs($('#DateOfBirth, #DateOfNameChange, #DisabilityCertificateDateOfIssue'), "-80:+0", true);
        attachDatepickerToInputs($('#DisabilityCertificateExpirationDate'), "-0:+60", true);
        $('#gender').buttonset();

        var $addNameChangeDialog = $('#add-name-change-dialog').dialog(
        {
            autoOpen: false,
            modal: true,
            width: "auto",
            draggable: false,
            resizable: false,
            buttons:
            {
                "OK": function () {
                    $('#add-name-change-dialog form').submit();
                    $(this).dialog("close");
                },
                "Отмена": function () {
                    $(this).dialog("close");
                }
            }
        });

        var $addForeignLanguageDialog = $('#add-foreign-language-dialog').dialog(
        {
            autoOpen: false,
            modal: true,
            width: "auto",
            draggable: false,
            resizable: false,
            buttons:
            {
                "OK": function () {
                    $('#add-foreign-language-dialog form').submit();
                    $(this).dialog("close");
                },
                "Отмена": function () {
                    $(this).dialog("close");
                }
            }
        });

        $("#add-name-change").click(function (e) {
            $addNameChangeDialog.dialog("open");
            e.preventDefault();
        });

        $("#add-foreign-language").click(function (e) {
            $addForeignLanguageDialog.dialog("open");
            e.preventDefault();
        });

        handleCheckboxState($("#IsPatronymicAbsent"),
            {
                $target: $("#Patronymic"),
                act: function () {
                    this.$target.val("");
                    this.$target.attr("disabled", "disabled");
                }
            },
            {
                $target: $("#Patronymic"),
                act: function () {
                    this.$target.removeAttr("disabled");
                }
            },
            true
        );
    });
</script>