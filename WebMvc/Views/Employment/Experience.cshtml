@model Reports.Presenters.UI.ViewModel.Employment2.ExperienceModel
@using Reports.Presenters.Services.Impl
@using Reports.Core
@{
    var dto = UserDto.Deserialize(((FormsIdentity)(HttpContext.Current.User.Identity)).Ticket.UserData);
    if ((dto.UserRole & UserRole.Candidate) > 0)
    {
        Layout = "~/Views/Shared/_LayoutEmployment.cshtml";
        ViewBag.Title = "Прием - Трудовая деятельность";
    }
}

@Html.Partial("CandidateState", Model.CandidateStateModel)

<span style="color:red;">@ViewBag.Error</span>
<span style="font-size:large;">@Html.ValidationMessageFor(m => m.IsValidate)</span>

@using (Html.BeginForm("Experience", "Employment", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <input type="hidden" id="RowID" name="RowID" value="@Model.RowID" />
    <input type="hidden" id="IsExperienceItemNotValid" name="IsExperienceItemNotValid" value="@Model.IsExperienceItemNotValid" />
    @Html.HiddenFor(m => m.UserId)
    
    <fieldset class="bordered doc-wrap panel">
    <legend>Опыт работы</legend>
        
        <fieldset class="bordered nomargin clear">
        <legend class="level2">@Html.LabelFor(m => m.ExperienceItems)</legend>
                <div id="experience-items-container">
                    <table class="grid">
                        <thead>
                            <tr>
                                <th>
                                    @Html.LabelFor(m => m.ExperienceItems[0].BeginningDate)
                                </th>
                                <th>
                                    @Html.LabelFor(m => m.ExperienceItems[0].EndDate)
                                </th>
                                <th>
                                    @Html.LabelFor(m => m.ExperienceItems[0].Company)
                                </th>
                                <th>
                                    @Html.LabelFor(m => m.ExperienceItems[0].Position)
                                </th>
                                <th>
                                    @Html.LabelFor(m => m.ExperienceItems[0].CompanyContacts)
                                </th> 
                                @if (Model.ExperienceItems != null && Model.ExperienceItems.Count != 0)
                                {
                                    <th></th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.ExperienceItems.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @(Model.ExperienceItems[i].BeginningDate.HasValue ? @Model.ExperienceItems[i].BeginningDate.Value.ToShortDateString() : string.Empty)
                                    </td>
                                    <td>
                                        @(Model.ExperienceItems[i].EndDate.HasValue ? @Model.ExperienceItems[i].EndDate.Value.ToShortDateString() : string.Empty)
                                    </td>
                                    <td>
                                        @Model.ExperienceItems[i].Company
                                    </td>
                                    <td>
                                        @Model.ExperienceItems[i].Position
                                    </td>
                                    <td>
                                        @Model.ExperienceItems[i].CompanyContacts
                                    </td>
                                    @if (Model.ExperienceItems != null && Model.ExperienceItems.Count != 0)
                                    {
                                        <td id="delete-foreign-language">
                                            <a href="#" onclick="DeleteExperienceRow(@Model.ExperienceItems[i].Id)">Удалить</a>
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>

                    </table>
                </div>
            <a href="" id="add-experience-item">Добавить новую запись</a>
        </fieldset>

        <br />
    
        <fieldset class="bordered nomargin clear">
            <legend class="level2">Сведения о трудовой книжке</legend>
            <table>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.WorkBookSeries)
                    </td>
                    <td>
                        @Html.EditorFor(m => m.WorkBookSeries)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.WorkBookNumber)
                    </td>
                    <td>
                        @Html.EditorFor(m => m.WorkBookNumber)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.WorkBookDateOfIssue)
                    </td>
                    <td>
                        @Html.EditorFor(m => m.WorkBookDateOfIssue)
                    </td>
                </tr>
            </table>
            @if (string.IsNullOrEmpty(Model.WorkBookScanAttachmentFilename) && !Model.IsValidate)
            {
                <div class="formfield">
                    Выбрать скан для загрузки<br /><input type="file" name="WorkBookScanFile" /> @Html.ValidationMessageFor(m => m.WorkBookScanFile)
                </div>
            }
            
            @if (!string.IsNullOrEmpty(Model.WorkBookScanAttachmentFilename))
            {
                <div class="formfield">
                    <br />Скан:
                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.WorkBookScanAttachmentId })' style="cursor:hand" target="_blank">
                        @Model.WorkBookScanAttachmentFilename
                    </a>
                </div>
                if (!Model.IsValidate)
                {
                    <div class="formfield">
                        <br /><input type="button" value="Удалить скан" onclick="deleteAttachment(@Model.WorkBookScanAttachmentId);" @*@if (!Model.IsDeleteScanAvailable)
                                                                                                   {<text>style="display:none"</text>}*@/>
                    </div>
                }
            }

        </fieldset>
    
        <br />

        <fieldset class="bordered nomargin clear">
        <legend class="level2">Сведения о вкладыше в трудовую книжку</legend>
            <table>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.WorkBookSupplementSeries)
                    </td>
                    <td>
                        @Html.EditorFor(m => m.WorkBookSupplementSeries)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.WorkBookSupplementNumber)
                    </td>
                    <td>
                        @Html.EditorFor(m => m.WorkBookSupplementNumber)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.WorkBookSupplementDateOfIssue)
                    </td>
                    <td>
                        @Html.EditorFor(m => m.WorkBookSupplementDateOfIssue)
                    </td>
                </tr>
            </table>
            @if (string.IsNullOrEmpty(Model.WorkBookSupplementScanAttachmentFilename) && !Model.IsValidate)
            {
                <div class="formfield">
                    Выбрать скан для загрузки<br /><input type="file" name="WorkBookSupplementScanFile" /> @Html.ValidationMessageFor(m => m.WorkBookSupplementScanFile)
                </div>
            }

            @if (!string.IsNullOrEmpty(Model.WorkBookSupplementScanAttachmentFilename))
            {
                <div class="formfield">
                    <br />Скан:
                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.WorkBookSupplementScanAttachmentId })' style="cursor:hand" target="_blank">
                        @Model.WorkBookSupplementScanAttachmentFilename
                    </a>
                </div>
                if (!Model.IsValidate)
                {
                    <div class="formfield">
                        <br /><input type="button" value="Удалить скан" onclick="deleteAttachment(@Model.WorkBookSupplementScanAttachmentId);" @*@if (!Model.IsDeleteScanAvailable)
                                                                                                   {<text>style="display:none"</text>}*@/>
                    </div>
                }
            }

        </fieldset>

    </fieldset>

    <div class="clear">
        @Html.CheckBoxFor(m => m.IsValidate, Model.IsDraft ? null : (object)new { disabled = "disabled" })@Html.LabelFor(m => m.IsValidate)<br />
        @Html.EditorFor(m => m.IsDraft)@Html.LabelFor(m => m.IsDraft)
        <button id="btnExperience" type="submit">Сохранить</button>
    </div>
}

@* --- *@

<div id="add-experience-item-dialog" title="Добавление сведений о трудовой деятельности">
    @using (Html.BeginForm("ExperienceAddExperienceItem", "Employment", FormMethod.Post))
    {
        @*
        <label for="BeginningDate" style="display:block;">Начало работы</label><input type="text" id="BeginningDate" name="BeginningDate" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="EndDate" style="display:block;">Окончание работы</label><input type="text" id="EndDate" name="EndDate" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="Company" style="display:block;">Организация</label><input type="text" name="Company" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="Position" style="display:block;">Должность</label><input type="text" name="Position" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="CompanyContacts" style="display:block;">Адрес организации, телефон отдела кадров, секретаря</label><input type="text" name="CompanyContacts" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        *@
        <label for="BeginningDate" style="display:block;">с </label>@Html.EditorFor(m => m.BeginningDate)@Html.ValidationMessageFor(m => m.BeginningDate)
        <label for="EndDate" style="display:block;"> по </label>@Html.EditorFor(m => m.EndDate)@Html.ValidationMessageFor(m => m.EndDate)
        <label for="Company" style="display:block;">Организация</label>@Html.TextBoxFor(m => m.Company)@Html.ValidationMessageFor(m => m.Company)
        <label for="Position" style="display:block;">Должность</label>@Html.TextBoxFor(m => m.Position)@Html.ValidationMessageFor(m => m.Position)
        <label for="CompanyContacts" style="display:block;">Адрес организации, телефон отдела кадров, секретаря</label>@Html.TextBoxFor(m => m.CompanyContacts)@Html.ValidationMessageFor(m => m.CompanyContacts)
        <input type="hidden" id="UserId" name="UserId" value="@Model.UserId" />
        <!-- Allow form submission with keyboard without duplicating the dialog button -->
        <input type="submit" tabindex="-1" style="position:absolute; top:-1000px" />
    }
</div>

@* --- *@

<script src="/Scripts/UIHelpers.js" type="text/javascript"></script>

<script type="text/javascript">
    function DeleteExperienceRow(Id) {
        $("#RowID").val(Id);
        $("#btnExperience").click();
    }

    function deleteAttachment(id){
        var actionUrl="@Url.Action("DeleteAttachment", "Employment")";
        var url = actionUrl + "?Id=" + id;
        $.getJSON(url,
                       function (data) {
                            if(!data.Result){
                                alert('Ошибка удаления скана:'+ data.Error);
                            }
                            else {
                               location.reload(true);
                           }
                       }
                     );
        return false;
    }

    $(document).ready(function () {
        setActiveMenuItem("empExperience");
        UIHelpers.attachDatepickerToInputs($('#WorkBookDateOfIssue, #WorkBookSupplementDateOfIssue, #BeginningDate, #EndDate'), "-60:+0", true);

        var $addExperienceItemDialog = $('#add-experience-item-dialog').dialog(
        {
            autoOpen: false,
            modal: true,
            width: "auto",
            draggable: false,
            resizable: false,
            buttons:
            {
                "OK": function () {
                    $('#add-experience-item-dialog form').submit();
                    //processAddExperienceItem();
                    //$(this).dialog("close");
                },
                "Отмена": function () {
                    $(this).dialog("close");
                }
            }
        });

//        var processAddExperienceItem = function()
//        {
//            var url = "@Url.Action("ExperienceAddExperienceItem", "Employment")";
//            var dataToSend = $("#add-experience-item-dialog form").serialize();
//            $.post(url, dataToSend, function(dataReceived){
//                var $tbody = $("#experience-items-container>table>tbody")
//                $tbody.empty();
//                for (var i = 0; i < dataReceived.length; i++)
//                {
//                    $tbody.append(
//                        "<tr><td>" +
//                        UIHelpers.convertMSJsonDateToShortDateString(dataReceived[i].BeginningDate) + "</td><td>" +
//                        UIHelpers.convertMSJsonDateToShortDateString(dataReceived[i].EndDate) + "</td><td>" +
//                        dataReceived[i].Company + "</td><td>" +
//                        dataReceived[i].Position + "</td><td>" +
//                        dataReceived[i].CompanyContacts + "</td><td>" +
//                        "<a onclick='DeleteExperienceRow(" + dataReceived[i].Id + ");' href='#' >Удалить</a></td></tr>"
//                    );
//                }
//            }, "json");
//        };

        $("#add-experience-item").click(function (e) {
            $addExperienceItemDialog.dialog("open");
            e.preventDefault();
        });

        if ($("#IsExperienceItemNotValid").val() == 'True'){
            $addExperienceItemDialog.dialog("open");
        }
    });
</script>