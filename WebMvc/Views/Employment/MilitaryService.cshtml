@model Reports.Presenters.UI.ViewModel.Employment2.MilitaryServiceModel
@using Reports.Presenters.Services.Impl
@using Reports.Core
@{
    var dto = UserDto.Deserialize(((FormsIdentity)(HttpContext.Current.User.Identity)).Ticket.UserData);
    if ((dto.UserRole & UserRole.Candidate) > 0)
    {
        Layout = "~/Views/Shared/_LayoutEmployment.cshtml";
        ViewBag.Title = "Прием - Воинский учет";
    }
}

@Html.Partial("CandidateState", Model.CandidateStateModel)

<span style="color:red;">@ViewBag.Error</span>
<span style="font-size:large;">@Html.ValidationMessageFor(m => m.IsValidate)</span>

@using (Html.BeginForm("MilitaryService", "Employment", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.UserId)
    
    <fieldset class="bordered doc-wrap panel">
    <legend>Воинский учет</legend>
        <div class="formfield clear">
            @Html.LabelFor(m => m.IsLiableForMilitaryService)&nbsp;@Html.EditorFor(m => m.IsLiableForMilitaryService)
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.RegistrationExpiration)&nbsp;@Html.ValidationMessageFor(m => m.RegistrationExpiration)<br />
            @Html.DropDownListFor(m => m.RegistrationExpiration, Model.RegistrationExpirationItems)
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.MilitaryCardNumber)&nbsp;@Html.ValidationMessageFor(m => m.MilitaryCardNumber)<br />
            @Html.EditorFor(m => m.MilitaryCardNumber)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.MilitaryCardDate)&nbsp;@Html.ValidationMessageFor(m => m.MilitaryCardDate)<br />
            @Html.EditorFor(m => m.MilitaryCardDate)
        </div>
        
        @if (string.IsNullOrEmpty(Model.MilitaryCardScanAttachmentFilename) && !Model.IsValidate)
        {
            <div class="formfield">
                Выбрать скан для загрузки<br /><input type="file" name="MilitaryCardScanFile" /> @Html.ValidationMessageFor(m => m.MilitaryCardScanFile)
            </div>
        }

        @if (!string.IsNullOrEmpty(Model.MilitaryCardScanAttachmentFilename))
        {
            <div class="formfield">
                <br />Скан военного билета:
                <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.MilitaryCardScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.MilitaryCardScanAttachmentFilename
                </a>
            </div>
            if (!Model.IsValidate)
            {
                <div class="formfield">
                    <br /><input type="button" value="Удалить скан" onclick="deleteAttachment(@Model.MilitaryCardScanAttachmentId);" @*@if (!Model.IsDeleteScanAvailable)
                                                                                               {<text>style="display:none"</text>}*@/>
                </div>
            }
        }

        <div class="formfield clear">
            @Html.LabelFor(m => m.ReserveCategory)&nbsp;@Html.ValidationMessageFor(m => m.ReserveCategory)<br />
            @Html.EditorFor(m => m.ReserveCategory)
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.RankId)&nbsp;@Html.ValidationMessageFor(m => m.RankId)<br />
            @Html.DropDownListFor(m => m.RankId, new SelectList(Model.RankItems, "Id", "Name"))
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.SpecialityCategoryId)&nbsp;@Html.ValidationMessageFor(m => m.SpecialityCategoryId)<br />
            @Html.DropDownListFor(m => m.SpecialityCategoryId, new SelectList(Model.SpecialityCategoryes, "Id", "Name"))
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.MilitarySpecialityCode)&nbsp;@Html.ValidationMessageFor(m => m.MilitarySpecialityCode)<br />
            @Html.EditorFor(m => m.MilitarySpecialityCode)
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.MilitaryValidityCategoryId)&nbsp;@Html.ValidationMessageFor(m => m.MilitaryValidityCategoryId)<br />
            @Html.DropDownListFor(m => m.MilitaryValidityCategoryId, new SelectList(Model.MilitaryValidityCategoryes, "Id", "Name"))
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.Commissariat)&nbsp;@Html.ValidationMessageFor(m => m.Commissariat)<br />
            @Html.EditorFor(m => m.Commissariat)
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.MilitaryRelationAccountId)&nbsp;@Html.ValidationMessageFor(m => m.MilitaryRelationAccountId)<br />
            @Html.DropDownListFor(m => m.MilitaryRelationAccountId, new SelectList(Model.MilitaryRelationAccounts, "Id", "Name"))
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.CommonMilitaryServiceRegistrationInfo)&nbsp;@Html.ValidationMessageFor(m => m.CommonMilitaryServiceRegistrationInfo)<br />
            @Html.EditorFor(m => m.CommonMilitaryServiceRegistrationInfo)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.SpecialMilitaryServiceRegistrationInfo)&nbsp;@Html.ValidationMessageFor(m => m.SpecialMilitaryServiceRegistrationInfo)<br />
            @Html.EditorFor(m => m.SpecialMilitaryServiceRegistrationInfo)
        </div>
        <div class="formfield clear">
            <br />
            @Html.LabelFor(m => m.IsReserved)&nbsp;@Html.EditorFor(m => m.IsReserved)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.MobilizationTicketNumber)&nbsp;@Html.ValidationMessageFor(m => m.MobilizationTicketNumber)<br />
            @Html.EditorFor(m => m.MobilizationTicketNumber)
        </div>
        
        @if (string.IsNullOrEmpty(Model.MobilizationTicketScanAttachmentFilename) && !Model.IsValidate)
        {
            <div class="formfield">
                Выбрать скан для загрузки<br /><input type="file" name="MobilizationTicketScanFile" /> @Html.ValidationMessageFor(m => m.MobilizationTicketScanFile)
            </div>
        }

        @if (!string.IsNullOrEmpty(Model.MobilizationTicketScanAttachmentFilename))
        {
            <div class="formfield">
                <br />Скан мобилизационного талона:
                <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.MobilizationTicketScanAttachmentId })' style="cursor:hand" target="_blank">
                    @Model.MobilizationTicketScanAttachmentFilename
                </a>
            </div>
            if (!Model.IsValidate)
            {
                <div class="formfield">
                    <br /><input type="button" value="Удалить скан" onclick="deleteAttachment(@Model.MobilizationTicketScanAttachmentId);" @*@if (!Model.IsDeleteScanAvailable)
                                                                                               {<text>style="display:none"</text>}*@/>
                </div>
            }
        }

        <div class="formfield clear">
        <fieldset class="bordered nomargin">
        <legend class="level2">Для форм Ф-6 и Ф-18</legend>
            <div class="formfield clear">
                @Html.LabelFor(m => m.PersonnelCategory)&nbsp;@Html.ValidationMessageFor(m => m.PersonnelCategory)<br />
                @Html.DropDownListFor(m => m.PersonnelCategory, Model.PersonnelCategoryItems)
            </div>
            <div class="formfield">
                @Html.LabelFor(m => m.PersonnelType)&nbsp;@Html.ValidationMessageFor(m => m.PersonnelType)<br />
                @Html.DropDownListFor(m => m.PersonnelType, Model.PersonnelTypeItems)
            </div>
            <div class="formfield clear">
                @Html.LabelFor(m => m.IsAssigned)&nbsp;@Html.EditorFor(m => m.IsAssigned)
            </div>
            <div class="formfield clear">
                @Html.LabelFor(m => m.ConscriptionStatus)&nbsp;@Html.ValidationMessageFor(m => m.ConscriptionStatus)<br />
                @Html.DropDownListFor(m => m.ConscriptionStatus, Model.ConscriptionStatusItems)
            </div>
        </fieldset>
    </fieldset>

    <div class="clear">
        @Html.CheckBoxFor(m => m.IsValidate, Model.IsDraft ? null : (object)new { disabled = "disabled" })@Html.LabelFor(m => m.IsValidate)<br />
        @*@Html.EditorFor(m => m.IsDraft)@Html.LabelFor(m => m.IsDraft)*@
        <input type="hidden" id="IsDraft" name="IsDraft" value="@Model.IsDraft" />
        <button type="submit" onclick="$('#IsDraft').val('true')">Черновик</button>
        <button type="submit" onclick="$('#IsDraft').val('false')" @if(!Model.IsDraft){<text> disabled="disabled"</text>}>Отправить на согласование</button>
    </div>
}

<script src="/Scripts/UIHelpers.js" type="text/javascript"></script>

<script type="text/javascript">
    function deleteAttachment(id){
        var actionUrl="@Url.Action("DeleteAttachment", "Employment")";
        var url = actionUrl + "?Id=" + id;
        $.getJSON(url,
                       function (data) {
                            if(!data.Result){
                                alert('Ошибка удаления скана:'+ data.Error);
                            }
                            else {
                               location.reload(true);
                           }
                       }
                     );
        return false;
    }

    $(document).ready(function () {
        setActiveMenuItem("empMilitaryService");
        UIHelpers.attachDatepickerToInputs($('#MilitaryCardDate'), "-60:+0", true);
    });
</script>