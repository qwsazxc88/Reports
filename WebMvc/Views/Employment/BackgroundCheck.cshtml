@model Reports.Presenters.UI.ViewModel.Employment2.BackgroundCheckModel
@{
    Layout = "~/Views/Shared/_LayoutEmployment.cshtml";
    ViewBag.Title = "Прием - Служба безопасности";
}

<span style="color:red;">@ViewBag.Error</span>

@using (Html.BeginForm("BackgroundCheck", "Employment", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.UserId)
    
    <div style="float:left">
    <fieldset class="bordered doc-wrap panel">
    <legend>Служба безопасности</legend>
        <div class="formfield clear">
            @Html.LabelFor(m => m.AverageSalary)&nbsp;@Html.ValidationMessageFor(m => m.AverageSalary)<br />
            @Html.TextBoxFor(m => m.AverageSalary, new { @class = "calc" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.Liabilities)&nbsp;@Html.ValidationMessageFor(m => m.Liabilities)<br />
            @Html.TextAreaFor(m => m.Liabilities, new { @class = "triplewidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.PreviousDismissalReason)&nbsp;@Html.ValidationMessageFor(m => m.PreviousDismissalReason)<br />
            @Html.TextBoxFor(m => m.PreviousDismissalReason, new { @class = "doublewidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.PreviousSuperior)&nbsp;@Html.ValidationMessageFor(m => m.PreviousSuperior)<br />
            @Html.TextBoxFor(m => m.PreviousSuperior, new { @class = "doublewidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.PositionSought)&nbsp;@Html.ValidationMessageFor(m => m.PositionSought)<br />
            @Html.TextBoxFor(m => m.PositionSought, new { @class = "doublewidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.MilitaryOperationsExperience)&nbsp;@Html.ValidationMessageFor(m => m.MilitaryOperationsExperience)<br />
            @Html.TextBoxFor(m => m.MilitaryOperationsExperience, new { @class = "doublewidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.HasDriversLicense)<br />
            @Html.EditorFor(m => m.HasDriversLicense)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.DriversLicenseNumber)&nbsp;@Html.ValidationMessageFor(m => m.DriversLicenseNumber)<br />
            @Html.EditorFor(m => m.DriversLicenseNumber)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.DriversLicenseDateOfIssue)&nbsp;@Html.ValidationMessageFor(m => m.DriversLicenseDateOfIssue)<br />
            @Html.EditorFor(m => m.DriversLicenseDateOfIssue)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.DriversLicenseCategories)&nbsp;@Html.ValidationMessageFor(m => m.DriversLicenseCategories)<br />
            @Html.EditorFor(m => m.DriversLicenseCategories)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.DrivingExperience)&nbsp;@Html.ValidationMessageFor(m => m.DrivingExperience)<br />
            @Html.TextBoxFor(m => m.DrivingExperience, new { @class = "halfwidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.HasAutomobile)<br />
            @Html.EditorFor(m => m.HasAutomobile)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.AutomobileMake)&nbsp;@Html.ValidationMessageFor(m => m.AutomobileMake)<br />
            @Html.EditorFor(m => m.AutomobileMake)
        </div>
        <div class="formfield">
            @Html.LabelFor(m => m.AutomobileLicensePlateNumber)&nbsp;@Html.ValidationMessageFor(m => m.AutomobileLicensePlateNumber)<br />
            @Html.TextBoxFor(m => m.AutomobileLicensePlateNumber, new { @class = "halfwidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.IsReadyForBusinessTrips)&nbsp;@Html.EditorFor(m => m.IsReadyForBusinessTrips)
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.Sports)&nbsp;@Html.ValidationMessageFor(m => m.Sports)<br />
            @Html.TextBoxFor(m => m.Sports, new { @class = "doublewidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.Hobbies)&nbsp;@Html.ValidationMessageFor(m => m.Hobbies)<br />
            @Html.TextBoxFor(m => m.Hobbies, new { @class = "doublewidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.ImportantEvents)&nbsp;@Html.ValidationMessageFor(m => m.ImportantEvents)<br />
            @Html.TextBoxFor(m => m.ImportantEvents, new { @class = "doublewidth" })
        </div>

        <fieldset class="bordered nomargin clear">
        <legend class="level2">@Html.LabelFor(m => m.References)</legend>
            @if (Model.References.Count > 0)
            {
                <div id="reference-container">
                    <table class="grid">
                        <thead>
                            <tr>
                                <th>
                                    @Html.LabelFor(m => m.References[0].LastName)
                                </th>
                                <th>
                                    @Html.LabelFor(m => m.References[0].FirstName)
                                </th>
                                <th>
                                    @Html.LabelFor(m => m.References[0].Patronymic)
                                </th>
                                <th>
                                    @Html.LabelFor(m => m.References[0].WorksAt)
                                </th>
                                <th>
                                    @Html.LabelFor(m => m.References[0].Position)
                                </th>
                                <th>
                                    @Html.LabelFor(m => m.References[0].Phone)
                                </th>
                                <th>
                                    @Html.LabelFor(m => m.References[0].Relation)
                                </th>
                            </tr>
                        </thead>  
                        <tbody>                 
                            @for (var i = 0; i < Model.References.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @Model.References[i].LastName
                                    </td>
                                    <td>
                                        @Model.References[i].FirstName
                                    </td>
                                    <td>
                                        @Model.References[i].Patronymic
                                    </td>
                                    <td>
                                        @Model.References[i].WorksAt
                                    </td>
                                    <td>
                                        @Model.References[i].Position
                                    </td>
                                    <td>
                                        @Model.References[i].Phone
                                    </td>
                                    <td>
                                        @Model.References[i].Relation
                                    </td>
                                    @*<td id="delete-foreign-language">
                                        <a href="" data-index=@i>Удалить</a>
                                    </td>*@
                                </tr>
                            } 
                        </tbody>                    

                    </table>
                </div>
            }
            <a href="" id="add-reference">Добавить новую запись</a>
        </fieldset>

        <div class="formfield clear">
            @Html.LabelFor(m => m.ChronicalDiseases)&nbsp;@Html.ValidationMessageFor(m => m.ChronicalDiseases)<br />
            @Html.TextBoxFor(m => m.ChronicalDiseases, new { @class = "doublewidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.Penalties)&nbsp;@Html.ValidationMessageFor(m => m.Penalties)<br />
            @Html.TextBoxFor(m => m.Penalties, new { @class = "doublewidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.PsychiatricAndAddictionTreatment)&nbsp;@Html.ValidationMessageFor(m => m.PsychiatricAndAddictionTreatment)<br />
            @Html.TextBoxFor(m => m.PsychiatricAndAddictionTreatment, new { @class = "doublewidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.Drinking)&nbsp;@Html.ValidationMessageFor(m => m.Drinking)<br />
            @Html.TextBoxFor(m => m.Drinking, new { @class = "doublewidth" })
        </div>
        <div class="formfield clear">
            @Html.LabelFor(m => m.Smoking)&nbsp;@Html.ValidationMessageFor(m => m.Smoking)<br />
            @Html.TextBoxFor(m => m.Smoking, new { @class = "doublewidth" })
        </div>

        @* ---- *@
        <fieldset class="bordered nomargin clear">
        <legend class="level2">Рукописный текст согласия на обработку персональных данных</legend>
            
            <div class="formfield">
                Выбрать скан для загрузки<br /><input type="file" name="PersonalDataProcessingScanFile" /> @Html.ValidationMessageFor(m => m.PersonalDataProcessingScanFile)
            </div>

            @if (!string.IsNullOrEmpty(Model.PersonalDataProcessingScanAttachmentFilename))
            {
                <div class="formfield">
                    <br />Скан:
                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.PersonalDataProcessingScanAttachmentId })' style="cursor:hand" target="_blank">
                        @Model.PersonalDataProcessingScanAttachmentFilename
                    </a>
                </div>
                <div class="formfield">
                    <br /><input type="button" value="Удалить скан" onclick="deleteAttachment(@Model.PersonalDataProcessingScanAttachmentId);" @*@if (!Model.IsDeleteScanAvailable)
                                                                                               {<text>style="display:none"</text>}*@/>
                </div>
            }

            <div class="letter clear">
                <p class="content">
                    Я, _______________ даю свое согласие ООО ИКБ &laquo;Совкомбанк&raquo; на обработку как с использованием средств автоматизации,
                    так и без использования таких средств, моих персональных данных, т.е. совершение в том числе следующих действий:
                    сбор, систематизация, накопление, хранение, уточнение, использование, блокирование, уничтожение, а также право на передачу
                    такой информации третьим лицам и получение информации и документов от третьих лиц для осуществления проверки достоверности
                    и полноты информации обо мне, в иных случаях, установленных законодательством.
                </p>
                <p class="content">
                    Согласие дается с целью проверки корректности предоставленных мной сведений, принятия решения о принятии меня на работу в Банк.
                </p>
                <p class="content">
                    В том числе даю согласие на получение и обработку данных о моей частной жизни с целью оперативного сообщения мне необходимой информации
                    и предупреждения чрезвычайных ситуаций.
                </p>
                <p class="content">
                    &laquo;____&raquo; ______________________ 20____ г.
                </p>
            </div>
        </fieldset>
        @* ---- *@

        @* ---- *@
        <fieldset class="bordered nomargin clear">
        <legend class="level2">Рукописный текст о достоверности сведений</legend>
            
            <div class="formfield">
                Выбрать скан для загрузки<br /><input type="file" name="InfoValidityScanFile" /> @Html.ValidationMessageFor(m => m.InfoValidityScanFile)
            </div>

            @if (!string.IsNullOrEmpty(Model.InfoValidityScanAttachmentFilename))
            {
                <div class="formfield">
                    <br />Скан:
                    <a class="ui-notify-close" href='@Url.Action("ViewAttachment", new { Id = Model.InfoValidityScanAttachmentId })' style="cursor:hand" target="_blank">
                        @Model.InfoValidityScanAttachmentFilename
                    </a>
                </div>
                <div class="formfield">
                    <br /><input type="button" value="Удалить скан" onclick="deleteAttachment(@Model.InfoValidityScanAttachmentId);" @*@if (!Model.IsDeleteScanAvailable)
                                                                                               {<text>style="display:none"</text>}*@/>
                </div>
            }

            <div class="letter clear">                
                <p class="content">
                    Я, _______________ заверяю, что мои ответы на вопросы анкеты являются полными, достоверными.
                    В дальнейшем обязуюсь сообщать обо всех изменениях в своем положении в отдел персонала для их внесения
                    в личное дело. Данные о трудовой деятельности, учебе соответствуют документам, удостоверяющим личность,
                    записям в трудовой книжке, документам об образовании, воинской службе.
                </p>
                <p class="content">
                    &laquo;____&raquo; ______________________ 20____ г.
                </p>
            </div>
        </fieldset>
        @* ---- *@

    </fieldset>
    </div>
    
    <div class="clear">
        @Html.EditorFor(m => m.IsDraft)@Html.LabelFor(m => m.IsDraft)
        <button type="submit">Сохранить</button>
    </div>
}

<hr />

<div id="add-reference-dialog" title="Добавление рекомендации">
    @using (Html.BeginForm("BackgroundCheckAddReference", "Employment", FormMethod.Post))
    {
        <label for="LastName" style="display:block;">Фамилия</label><input type="text" name="LastName" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="FirstName" style="display:block;">Имя</label><input type="text" name="FirstName" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="Patronymic" style="display:block;">Отчество</label><input type="text" name="Patronymic" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="WorksAt" style="display:block;">Место работы</label><input type="text" name="WorksAt" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="Position" style="display:block;">Должность</label><input type="text" name="Position" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="Phone" style="display:block;">Телефон (рабочий, моб.)</label><input type="text" name="Phone" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        <label for="Relation" style="display:block;">Откуда Вас знает рекомендующий</label><input type="text" name="Relation" value="" class="text ui-widget-content ui-corner-all" style="display:block;" />
        
        <!-- Allow form submission with keyboard without duplicating the dialog button -->
        <input type="submit" tabindex="-1" style="position:absolute; top:-1000px" />
    }
</div>

<script src="/Scripts/UIHelpers.js" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        setActiveMenuItem("empBackgroundCheck");
        attachDatepickerToInputs($('#DriversLicenseDateOfIssue'), "-20:+0", true);

        var $addReferenceDialog = $('#add-reference-dialog').dialog(
        {
            autoOpen: false,
            modal: true,
            width: "auto",
            draggable: false,
            resizable: false,
            buttons:
            {
                "OK": function () {
                    processAddNameChange();
                    $(this).dialog("close");
                },
                "Отмена": function () {
                    $(this).dialog("close");
                }
            }
        });

        var processAddNameChange = function()
        {
            var url = "@Url.Action("BackgroundCheckAddReference", "Employment")";
            var dataToSend = $("#add-reference-dialog form").serialize();
            $.post(url, dataToSend, function(dataReceived){
                var $tbody = $("#reference-container>table>tbody")
                $tbody.empty();
                for (var i = 0; i < dataReceived.length; i++)
                {
                    $tbody.append(
                        "<tr><td>" +
                        dataReceived[i].LastName + "</td><td>" +
                        dataReceived[i].FirstName + "</td><td>" +
                        dataReceived[i].Patronymic + "</td><td>" +
                        dataReceived[i].WorksAt + "</td><td>" +
                        dataReceived[i].Position + "</td><td>" +
                        dataReceived[i].Phone + "</td><td>" +
                        dataReceived[i].Relation + 
                        "</td></tr>"
                    );
                }
            }, "json");
        };

        $("#add-reference").click(function (e) {
            $addReferenceDialog.dialog("open");
            e.preventDefault();
        });
    });
</script>