@using Reports.Core.Dto
@{
    var propertyName = ViewData.ModelMetadata.PropertyName;
    var propertyValue = ViewData.ModelMetadata.Model;
    var id = propertyName;//Guid.NewGuid().ToString();

    RouteValueDictionary urlData = 
        (RouteValueDictionary)ViewData.ModelMetadata.AdditionalValues.Where(x => x.Key == "AutoCompleteUrlData").Single().Value;

    var url = WebMvc.Views.Shared.Helpers.RouteHelper.GetUrl(this.ViewContext.RequestContext, urlData);
}

@if (propertyValue is string)
{
    <input type="text" name="@propertyName" value="@propertyValue" id="@id" class="autoComplete" style="width:100%"/>
}
else
{
    var idNameValue = (IdNameDto)propertyValue;
    <input type="hidden" name="@string.Format("{0}.ID",propertyName)" value="@idNameValue.Id" id="@id-val"/>
    <input type="text" name="@string.Format("{0}.Name",propertyName)" value="@idNameValue.Name" id="@id" class="autoComplete" style="width:99%"/>
}

<script type="text/javascript">
    $(function () {
        $("#@id").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@url" + escape(request.term),
                    dataType: "json",
                    success: function (data) {
                        response(data);
                    }
                });
            },
            focus: function (event, ui) {
                $("#@id").val(ui.item.label);
                $("#@id-val").val(ui.item.value);
                return false;
            },
            select: function (event, ui) {
                $("#@id").val(ui.item.label);
                $("#@id-val").val(ui.item.value);
                return false;
            },
            minLength: 2
        });
    });
</script>