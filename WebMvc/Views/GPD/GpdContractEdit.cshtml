@using Reports.Core
@using Reports.Presenters.Services.Impl
@using Reports.Presenters.UI.Bl.Impl;
@model Reports.Presenters.UI.ViewModel.GpdContractEditModel
@{
    Layout = "~/Views/Shared/_LayoutGPD.cshtml";
    ViewBag.Title = "Редактирование договоров.";
}

@using (Html.BeginForm())
{
    <table style="width:100%">
        <tr>
            <td colspan="2">
                <h5>
                    @Html.ValidationMessageFor(model => model.errorMessage)
                </h5>
                <div class="doc-wrap">
                    <table style="width:100%">
                        <tr>
                            <td colspan="2">
                                <b>Создание/редактирование договора ГПД</b>
                                <input type="hidden" id="CreatorID" name="CreatorID" value="@Model.CreatorID" />
                                <input type="hidden" id="Operation" name="Operation" value="@Model.Operation" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width:220px">
                                @Html.LabelFor(m => m.Id):
                            </td>
                            <td>
                                @if (Model.Id != 0)
                                {
                                    @Html.DisplayTextFor(m => m.Id)
                                }
                            </td>
                        </tr>
                        <tr>
                            <td style="width:220px">
                                @Html.LabelFor(m => m.DepartmentName):
                            </td>
                            <td>
                                <label id="DepartmentNameLabel">@Model.DepartmentName</label>
                                <input type="hidden" id="DepartmentName" name="DepartmentName" value="@Model.DepartmentName" />
                                <input type="hidden" id="DepartmentId" name="DepartmentId" value="@Model.DepartmentId" />
                                <input type="hidden" id="Id" name="Id" value="@Model.Id" />
                                @Html.ValidationMessageFor(model => model.DepartmentId)
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                @if ((Model.StatusID == 4 || @Model.Id == 0) && (Model.Permissions[0].IsWrite || Model.Permissions[0].IsDraft))
                                {
                                    <input type="button" value="Выбрать" title="Выбрать подразделение" onclick="changeDepartment();"/>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => m.PersonID):
                            </td>
                            <td>
                                @if (Model.StatusID == 4 || @Model.Id == 0)
                                {
                                    <input type="text" name="Surname" id="Surname" value="@Model.Surname" style="width:600px" onchange="$('#Operation').val('0');"  data-autocomplete-source="@Url.Action("AutocompletePersonSearch", "GPD")" />
                                }
                                else
                                {
                                    <label>@Model.Surname</label>
                                }
                                <input type="hidden" id="PersonID" name="PersonID" value="@Model.PersonID"/>
                                <input type="hidden" id="Surname" name="Surname" value="@Model.Surname"/>
                                
                                @Html.ValidationMessageFor(model => model.PersonID)
                                
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => m.CTID):
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.CTID, new SelectList(Model.ChargingTypes, "ID", "Name"), Model.StatusID == 4 || @Model.Id == 0 ? null : (object)new { disabled = "disabled" }) 
                                <input type="hidden" id="CTID" name="CTID" value="@Model.CTID"/>
                                @Html.ValidationMessageFor(model => model.CTID)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => m.NameContract):
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.NameContract, Model.StatusID == 4 || @Model.Id == 0 ? (object)new { maxlength = "150" } : (object)new { disabled = "disabled" })
                                <input type="hidden" id="NameContract" name="NameContract" value="@Model.NameContract"/>
                                @Html.ValidationMessageFor(model => model.NameContract)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => m.NumContract):
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.NumContract, Model.StatusID == 4 || @Model.Id == 0 ? (object)new { maxlength = "30" } : (object)new { disabled = "disabled" })
                                <input type="hidden" id="NumContract" name="NumContract" value="@Model.NumContract"/>
                                @Html.ValidationMessageFor(model => model.NumContract)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => m.DateBegin):
                            </td>
                            <td>
                                @if (Model.StatusID == 4 || Model.Id == 0)
                                {
                                    @Html.EditorFor(m => m.DateBegin)
                                }
                                else
                                {
                                    <label id="DateBegin">@RequestBl.FormatDate(@Model.DateBegin)</label>
                                    <input type="hidden" id="DateBegin" name="DateBegin" value="@Model.DateBegin" />
                                }
                                
                                @Html.LabelFor(m => m.DateEnd):
                                @if (Model.StatusID == 4 || Model.Id == 0)
                                {
                                    @Html.EditorFor(m => m.DateEnd)
                                }
                                else
                                {
                                    <label id="DateEnd">@RequestBl.FormatDate(@Model.DateEnd)</label>
                                    <input type="hidden" id="DateEnd" name="DateEnd" value="@Model.DateEnd" />
                                }
                                @Html.ValidationMessageFor(model => model.DateBegin)
                                @Html.ValidationMessageFor(model => model.DateEnd)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => m.DateP):
                            </td>
                            <td>
                                @if (Model.flgRed)
                                {
                                    @Html.EditorFor(m => m.DateP)
                                    @Html.ValidationMessageFor(model => model.DateP)
                                }
                                else
                                {
                                    <label id="DateP">@RequestBl.FormatDate(@Model.DateP)</label>
                                    <input type="hidden" id="DateP" name="DateP" value="@Model.DateP" />
                                }
                                <input type="hidden" id="DatePOld" name="DatePOld" value="@Model.DatePOld" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => m.PaymentPeriods)
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.PaymentPeriodID, new SelectList(Model.PaymentPeriods, "ID", "Name"), Model.StatusID == 4 || @Model.Id == 0 ? null : (object)new { disabled = "disabled" }) 
                                <input type="hidden" id="PaymentPeriodID" name="PaymentPeriodID" value="@Model.PaymentPeriodID" />
                                @Html.ValidationMessageFor(model => model.PaymentPeriodID)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => m.Amount):
                            </td>
                            <td>
                                @if (Model.StatusID == 4 || Model.Id == 0)
                                {
                                    @Html.TextBoxFor(m => m.Amount, Model.StatusID == 4 || @Model.Id == 0 ? (object)new { maxlength = "12" } : (object)new { disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.Amount)
                                }
                                else
                                {
                                    <label id="Amount">@RequestBl.FormatSum(@Model.Amount)</label>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => m.GPDID):
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.GPDID, Model.StatusID == 4 || @Model.Id == 0 ? (object)new { maxlength = "20" } : (object)new { disabled = "disabled" })
                                <input type="hidden" id="GPDID" name="GPDID" value="@Model.GPDID" />
                                @Html.ValidationMessageFor(model => model.GPDID)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => m.GPDContractID):
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.GPDContractID, Model.StatusID == 4 || @Model.Id == 0 ? (object)new { maxlength = "20" } : (object)new { disabled = "disabled" })
                                <input type="hidden" id="GPDContractID" name="GPDContractID" value="@Model.GPDContractID" />
                                @Html.ValidationMessageFor(model => model.GPDContractID)
                            </td>
                        </tr>

                        <tr>
                            <td>
                                @Html.LabelFor(m => m.PayerID):
                            </td>
                            <td>
                                <input type="text" name="PayerName" id="PayerName" value="@Model.PayerName" style="width:600px" onchange="SelectPerson();"  data-autocomplete-source="@Url.Action("AutocompleteDetailPayer", "GPD")" />
                                <input type="button" value="Создать" title="Создать новый реквизит" onclick="CreateEditDetail(1, 0);"/>
                                <input type="button" value="Редактировать" title="Редактировать текущий реквизит" onclick="CreateEditDetail(1, 1);"/>
                                @*
                                @if (Model.StatusID == 4 || @Model.Id == 0)
                                {
                                    
                                }
                                else
                                {
                                    <label>@Model.PayerName</label>
                                }
                                *@
                                <input type="hidden" id="PayerID" name="PayerID" value="@Model.PayerID"/>
                                
                                @Html.ValidationMessageFor(model => model.PayerID)
                                
                            </td>
                        </tr>

                        <tr>
                            <td>
                                @Html.LabelFor(m => m.PayeeID):
                            </td>
                            <td>
                                <input type="text" name="PayeeName" id="PayeeName" value="@Model.PayeeName" style="width:600px" onchange="SelectPerson();"  data-autocomplete-source="@Url.Action("AutocompleteDetailPayeer", "GPD")" />
                                <input type="button" value="Создать" title="Создать новый реквизит" onclick="CreateEditDetail(2, 0);"/>
                                <input type="button" value="Редактировать" title="Редактировать текущий реквизит" onclick="CreateEditDetail(2, 1);"/>
                                @*
                                @if (Model.StatusID == 4 || @Model.Id == 0)
                                {
                                    
                                }
                                else
                                {
                                    <label>@Model.PayeeName</label>
                                }
                                *@
                                <input type="hidden" id="PayeeID" name="PayeeID" value="@Model.PayeeID"/>
                                
                                @Html.ValidationMessageFor(model => model.PayeeID)
                                
                            </td>
                        </tr>

                        <tr>
                            <td>
                                @Html.LabelFor(m => m.PAccountID):
                            </td>
                            <td>
                                <input type="text" name="PersonAccount" id="PersonAccount" value="@Model.PersonAccount" style="width:600px" onchange="SelectPerson();"  data-autocomplete-source="@Url.Action("AutocompleteDetailPAccount", "GPD")" />
                                <input type="button" value="Создать" title="Создать новый лицевой счет" onclick="CreateEditDetail(3, 0);"/>
                                <input type="button" value="Редактировать" title="Редактировать текущий лицевой счет" onclick="CreateEditDetail(3, 1);"/>
                                @*
                                @if (Model.StatusID == 4 || @Model.Id == 0)
                                {
                                    
                                }
                                else
                                {
                                    <label>@Model.PersonAccount</label>
                                }
                                *@
                                <input type="hidden" id="PAccountID" name="PAccountID" value="@Model.PAccountID"/>
                                
                                @Html.ValidationMessageFor(model => model.PAccountID)
                                
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => m.PurposePayment):
                            </td>
                            <td>
                                <div>
                                    <table border="1">
                                        <tr>
                                            <td>
                                                <input type="hidden" id="PurposePaymentPart" name="PurposePaymentPart" value="@Model.PurposePaymentPart" />
                                                <input type="text" value="@Model.PurposePaymentPart" readonly="true" style="width:600px"/>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                @Html.TextAreaFor(m => m.PurposePayment, Model.StatusID == 4 || @Model.Id == 0 ? (object)new { style = "width:600px", maxlength = "500" } : (object)new { style = "width:600px", disabled = "disabled" })
                                                <input type="hidden" id="PurposePayment" name="PurposePayment" value="@Model.PurposePayment" />
                                            </td>
                                        </tr>
                                    </table>
                                    
                                </div>
                                @Html.ValidationMessageFor(model => model.PurposePayment)
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <table id="tblDetail" border="1">
                                    <tr>
                                        <td colspan="2">
                                            <b>Реквизиты плательщика</b>
                                        </td>
                                        <td colspan="2">
                                            <b>Реквизиты получателя</b>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            @Html.LabelFor(m => m.PayerContractor)
                                        </td>
                                        <td>
                                            <label>@Model.PayerContractor</label>
                                        </td>
                                        <td>
                                            @Html.LabelFor(m => m.PayeeName)
                                        </td>
                                        <td>
                                            <label>@Model.PayeeName</label>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            @Html.LabelFor(m => m.PayerINN)
                                        </td>
                                        <td>
                                            <label>@Model.PayerINN</label>
                                        </td>
                                        <td>
                                            @Html.LabelFor(m => m.PayeeINN)
                                        </td>
                                        <td>
                                            <label>@Model.PayeeINN</label>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            @Html.LabelFor(m => m.PayerKPP)
                                        </td>
                                        <td>
                                            <label>@Model.PayerKPP</label>
                                        </td>
                                        <td>
                                            @Html.LabelFor(m => m.PayeeKPP)
                                        </td>
                                        <td>
                                            <label>@Model.PayeeKPP</label>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            @Html.LabelFor(m => m.PayerAccount)
                                        </td>
                                        <td>
                                            <label>@Model.PayerAccount</label>
                                        </td>
                                        <td>
                                            @Html.LabelFor(m => m.PayeeAccount)
                                        </td>
                                        <td>
                                            <label>@Model.PayeeAccount</label>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            @Html.LabelFor(m => m.PayerBankName)
                                        </td>
                                        <td>
                                            <label>@Model.PayerBankName</label>
                                        </td>
                                        <td>
                                            @Html.LabelFor(m => m.PayeeBankName)
                                        </td>
                                        <td>
                                            <label>@Model.PayeeBankName</label>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            @Html.LabelFor(m => m.PayerBankBIK)
                                        </td>
                                        <td>
                                            <label>@Model.PayerBankBIK</label>
                                        </td>
                                        <td>
                                            @Html.LabelFor(m => m.PayeeBankBIK)
                                        </td>
                                        <td>
                                            <label>@Model.PayeeBankBIK</label>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            @Html.LabelFor(m => m.PayerCorrAccount)
                                        </td>
                                        <td>
                                            <label>@Model.PayerCorrAccount</label>
                                        </td>
                                        <td>
                                            @Html.LabelFor(m => m.PayeeCorrAccount)
                                        </td>
                                        <td>
                                            <label>@Model.PayeeCorrAccount</label>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="2"></td>
                                        <td>
                                            @Html.LabelFor(m => m.Account)
                                        </td>
                                        <td>
                                            <label>@Model.Account</label>
                                            <input type="hidden" id="Account" name="Account" value="@Model.Account" />
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => m.StatusName):
                            </td>
                            <td>
                                <input type="hidden" id="StatusID" name="StatusID" value="@Model.StatusID" />
                                <label id="StatusNameLabel">@Model.StatusName</label>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => m.Autor):
                            </td>
                            <td>
                                <label id="AutorLabel">@Model.Autor</label>
                            </td>
                        </tr>
                    </table>
                </div>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="hidden" id="IsLong" name="IsLong" value="@Model.IsLong" />
                <input type="hidden" id="SendTo1C" name="SendTo1C" value="@Model.SendTo1C" />
                @if ((@Model.StatusID == 4 || @Model.Id == 0) && (Model.Permissions[0].IsDraft))
                {
                    <input type="submit" value="Черновик" title="Сохранить черновик в базе данных" onclick="SaveDraft();"/>
                }
                
                @if ((Model.Permissions[0].IsWrite && @Model.StatusID != 1) || (Model.Permissions[0].IsWrite && Model.StatusID != 4 && (DateTime.Now >= @Model.DateEnd || (@Model.DateEnd.HasValue && @Model.DateEnd.Value.Subtract(DateTime.Now).Days <= 30))))
                {
                    <input type="submit" value="Записать" title="Сохранить договор в базе данных" onclick="SaveContract();"/>
                }

                @if (@Model.StatusID != 1)
                {

                    if (Model.Id != 0 && Model.StatusID != 4 && Model.Permissions[0].IsCancel)
                    {
                        <input type="submit" value="Отклонить" title="Отклонить договор" onclick="RejectContract();"/>
                    }
                }
                

                @if (@Model.StatusID != 4 && @Model.Id != 0 && Model.Permissions[0].IsCreateAct)
                {
                    <input type="button" value="Создать акт" title="Создать акт на основе данного договора" onclick="location.href='@Url.Action("GpdActEdit", "GPD", new { id = 0, GCID = @Model.Id })'"/>
                }
                
            </td>
        </tr>
    </table>
}


<script type="text/javascript">
    var actionDepUrl = "@Url.Action("GetChildren", "Home")";    
    var actionDepDialogUrl = "@Url.Action("DepartmentDialog", "Home")";
    $(document).ready(function () {
        $("#DateBegin").datepicker({changeMonth: true, changeYear: true});
        $("#DateEnd").datepicker({changeMonth: true, changeYear: true});
        $("#DateP").datepicker({changeMonth: true, changeYear: true});
        $(".hasDatepicker").width("75px");
        setActiveMenuItem("moContract");

        $(":text").bind("keydown", function(e){if (e.keyCode == 13) return false;});
        
        $("#PayerName").keydown(function(e){if (e.keyCode == 13) { if ($("#Operation").val() == 1) {this.form.submit();}  } } );
        $("#PayerName").blur(function(){ SelectPerson(); if($("#PayerID").val() != 0) { this.form.submit();}});

        $("#PayeeName").keydown(function(e){if (e.keyCode == 13) { if ($("#Operation").val() == 1) {this.form.submit();}  } } );
        $("#PayeeName").blur(function(){ SelectPerson(); if($("#PayeeID").val() != 0) { this.form.submit();}});

        $("#PersonAccount").keydown(function(e){if (e.keyCode == 13) { if ($("#Operation").val() == 1) {this.form.submit();}  } } );
        $("#PersonAccount").blur(function(){ SelectPerson(); if($("#PAccountID").val() != 0) { this.form.submit();}});

        if ($("#PayerID").val() == 0 && $("#PayeeID").val() == 0 && $("#PAccountID").val() == 0){
            $("#tblDetail").hide();
         }
         else{
            $("#tblDetail").show();
         }

//        $('#PurposePayment').keydown(function () {
//                if ($(this).val().indexOf($("#PurposePaymentPart").val()) != 0) {
//                var length = $("#PurposePaymentPart").length;
//                //var lengthAfter = $(this).val().length - $("#PurposePaymentPart").length;
//                var current = $(this).val();
//                var after = current.slice(length);

//                $(this).val($("#PurposePaymentPart").val() + after);
//                }
//                else{
//                }
//        });
        
        //автозаполнение физиков
        $(function () 
        {
            $("[data-autocomplete-source]").each(
                function () 
                {
                    var target = $(this);
                    target.autocomplete({ source: target.attr("data-autocomplete-source"),
                                          select : function(event, ui) 
                                                    {
                                                        //для физиков
                                                        if (ui.item.PersonID != null){
                                                            $("#Surname").val(ui.item.label);
                                                            $("#PersonID").val(ui.item.PersonID);
                                                            //$("#Operation").val('1');
                                                            $("#Surname").focus();
                                                        }
                                                        //для плательщиков
                                                        if (ui.item.PayerID != null){
                                                            $("#PayerName").val(ui.item.label);
                                                            $("#PayerID").val(ui.item.PayerID);
                                                            $("#Operation").val('1');
                                                            $("#PayerName").focus();
                                                        }
                                                        //для получателей
                                                        if (ui.item.PayeeID != null){
                                                            $("#PayeeName").val(ui.item.label);
                                                            $("#PayeeID").val(ui.item.PayeeID);
                                                            $("#Operation").val('1');
                                                            $("#PayeeName").focus();
                                                        }
                                                        //для лицевых счетов
                                                        if (ui.item.PAccountID != null){
                                                            $("#PersonAccount").val(ui.item.label);
                                                            $("#PAccountID").val(ui.item.PAccountID);
                                                            $("#Operation").val('1');
                                                            $("#PersonAccount").focus();
                                                        }
                                                        return true;
                                                    }
                                         });
                  });
        });
    });




    function SaveDraft()
    {
        $("#Operation").val('0');
        $("#StatusID").val('4');
        return true;
    }
    function SaveContract()
    {
        $("#Operation").val('0');
        $("#StatusID").val('2');
        return true;
    }
    function RejectContract()
    {
        $("#Operation").val('0');
        $("#StatusID").val('3')
        return true;
    }
    function SelectPerson()
    {
        $("#Operation").val('1');
        return true;
    }


    function CreateEditDetail(DetOp, flgEdit) {
            createDetailDialog(DetOp, flgEdit);
        }
    function createDetailDialog(DetOp, flgEdit) {
        var elem = document.createElement('div');
        elem.id = "divDetailDialog";
        var newDiv = $(elem);
        var PID = DetOp;
//        if (flgEdit == 1){
//            PID = DetOp;
//        }
        var actionDetailDialogUrl = "@Url.Action("GpdRefDetailDialog", "GPD")";

        var title = "";
        if (DetOp == 1){
            title = "Создание реквизита плательщика";
            var PID = PID + (flgEdit == 1 ? $("#PayerID").val() : '0');
        }
        if (DetOp == 2){
            title = "Создание реквизита получателя";
            var PID = PID + (flgEdit == 1 ? $("#PayeeID").val() : '0');
        }
        if (DetOp == 3){
            title = "Создание лицевого счета получателя";
            var PID = PID + (flgEdit == 1 ? $("#PAccountID").val() : '0');
        }

        $(newDiv).text('Подождите, идет загрузка данных ...');
        $.ajaxSetup({ cache: false });
        $(newDiv).load(actionDetailDialogUrl + "?id=" + PID + " #DetailForm"
            , function (response, status, xhr) {
                if (status == "error") {
                    var msg = "Произошла ошибка: ";
                    $(newDiv).html("<div style='color:Red'>" + msg + xhr.status + " " + xhr.statusText + "</div>");
                }
            }
        );
                $(newDiv).dialog(
        { // initialize dialog box
            autoOpen: false,
            modal: true,
            title: title,
            // fix IE6  
            bgiframe: true,
            draggable: false,
            resizable: false,
            width: 700,
            height: 500,
            close: function (event, ui) {
                $(this).dialog("destroy").remove();
            },
            buttons:
            {
                "OK": function () {
                    var newval = $("#DetailID").val();
                    if (DetOp == 1){
                        $("#PayerID").val(newval);
                        $("#PayerName").blur();
                    }
                    if (DetOp == 2){
                        $("#PayeeID").val(newval);
                        $("#PayeeName").blur();
                    }
                    if (DetOp == 3){
                        $("#PAccountID").val(newval);
                        $("#PersonAccount").blur();
                    }
                    $(this).dialog("close");
                }
//                ,
//                "Отмена": function () {
//                    $(this).dialog("close");
//                }
            }
        });

        $(newDiv).dialog("open");

    }
    
    function AjaxFormRequest(result_id,form_id,url) {
        jQuery.ajax({
            url:     url, //Адрес подгружаемой страницы
            type:     "POST", //Тип запроса
            dataType: "html", //Тип данных
            data: jQuery("#"+form_id).serialize(), 
            success: function(response) { //Если все нормально
            document.getElementById(result_id).innerHTML = response;
                },
            error: function(response) { //Если ошибка
            document.getElementById(result_id).innerHTML = "Ошибка при отправке формы";
                }   
        });
    }
</script>   