@model Reports.Presenters.UI.ViewModel.GpdRefDetailEditModel
@{
    Layout = "~/Views/Shared/_LayoutGPD.cshtml";
    ViewBag.Title = "Редактирование справочника реквизитов";
}

@using (Html.BeginForm())
{
    <table style="width:100%">
        <tr>
            <td colspan="2">
                <h5 >
                    <label id="errorMessage" style="color:red">@Model.errorMessage</label>
                    @Html.ValidationMessageFor(model => model.errorMessage)
                </h5>
                <div class="doc-wrap">
                    <table style="width:100%">
                        <tr>
                            <td colspan="2">
                                <b>Создание/редактирование набора реквизитов</b>
                                <input type="hidden" id="Id" name="Id" value="@Model.Id" />
                                <input type="hidden" id="StatusID" name="StatusID" value="@Model.StatusID" />
                                <input type="hidden" id="Operation" name="Operation" value="@Model.Operation" />
                                <input type="hidden" id="CreatorID" name="CreatorID" value="@Model.CreatorID" />
                                <input type="hidden" id="DetailCreatorID" name="DetailCreatorID" value="@Model.DetailCreatorID" />
                                <input type="hidden" id="NewRow" name="NewRow" value="@Model.NewRow" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width:220px">
                                @Html.LabelFor(m => Model.Name)
                            </td>
                            <td>
                                @Html.TextBoxFor(m => Model.Name, (Model.StatusID == 4 && Model.Operation == 1) || @Model.Id == 0 ? (object)new { maxlength = "250", style = "width:600px" } : (object)new { disabled = "disabled", style = "width:600px" })
                                @Html.ValidationMessageFor(model => model.Name)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => Model.PersonID)
                            </td>
                            <td>
                                @if (Model.StatusID == 4 || @Model.Id == 0)
                                {
                                    <input type="text" name="Surname" id="Surname" value="@Model.Surname" style="width:600px" data-autocomplete-source="@Url.Action("AutocompletePersonSearch", "GPD")" />
                                    <input type="hidden" id="PersonID" name="PersonID" value="@Model.PersonID"/>
                                }
                                else
                                {
                                    <label>@Model.Surname</label>
                                }
                                @Html.ValidationMessageFor(model => model.PersonID)
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                @if (@Model.Permissions[0].IsWrite && Model.Id != 0 && Model.Operation == 0)
                                {
                                    <input type="button" value="Создать договор" title="Создать договор с текущим набором реквизитов" onclick="location.href='@Url.Action("GpdContractEdit", "GPD", new { id = 0, PersonID = Model.PersonID })'"/>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td>@*@Html.LabelFor(m => Model.PayerID)*@ <b>Плательщик</b></td>
                            <td>
                                @Html.DropDownListFor(model => model.PayerID, new SelectList(Model.PayerInfo, "ID", "Name"), (Model.StatusID == 4 && Model.Operation == 1) || @Model.Id == 0 ? (object)new { onchange = "this.form.submit();" } : (object)new { disabled = "disabled" }) 
                                @Html.ValidationMessageFor(model => model.PayerID)
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                @if (@Model.PayerInfo != null && @Model.PayerInfo.Count != 0)
                                {
                                    <table>
                                        <tr>
                                            <td><label>Наименование:</label></td>
                                            <td><label>@Model.PayerName</label></td>
                                        </tr>
                                        <tr>
                                            <td><label>ИНН:</label></td>
                                            <td><label>@Model.PayerINN</label></td>
                                        </tr>
                                        <tr>
                                            <td><label>КПП:</label></td>
                                            <td><label>@Model.PayerKPP</label></td>
                                        </tr>
                                        <tr>
                                            <td><label>Расчетный счет:</label></td>
                                            <td><label>@Model.PayerAccount</label></td>
                                        </tr>
                                        <tr>
                                            <td><label>Банк:</label></td>
                                            <td><label>@Model.PayerBankName</label></td>
                                        </tr>
                                        <tr>
                                            <td><label>Банк БИК:</label></td>
                                            <td><label>@Model.PayerBankBIK</label></td>
                                        </tr>
                                        <tr>
                                            <td><label>Банк корр/счет:</label></td>
                                            <td><label>@Model.PayerCorrAccount</label></td>
                                        </tr>
                                    </table>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td>@*@Html.LabelFor(m => Model.PayeeID)*@ <b>Получатель</b></td>
                            <td>
                                @Html.DropDownListFor(model => model.PayeeID, new SelectList(Model.PayeerInfo, "ID", "Name"), (Model.StatusID == 4 && Model.Operation == 1) || @Model.Id == 0 ? (object)new { onchange = "this.form.submit();" } : (object)new { disabled = "disabled" }) 
                                @Html.ValidationMessageFor(model => model.PayeeID)
                                @if ((Model.Permissions[0].IsWrite && Model.AllowEdit) || (Model.Permissions[0].IsWrite && Model.Id == 0))
                                {
                                    <input type="button" value="Создать новый реквизит" title="Создать новый реквизит" onclick="CreateEditDetail();"/>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                @if (@Model.PayeerInfo != null && @Model.PayeerInfo.Count != 0)
                                {
                                    <table>
                                        <tr>
                                            <td><label>Наименование:</label></td>
                                            <td><label>@Model.PayeerName</label></td>
                                        </tr>
                                        <tr>
                                            <td><label>ИНН:</label></td>
                                            <td><label>@Model.PayeerINN</label></td>
                                        </tr>
                                        <tr>
                                            <td><label>КПП:</label></td>
                                            <td><label>@Model.PayeerKPP</label></td>
                                        </tr>
                                        <tr>
                                            <td><label>Расчетный счет:</label></td>
                                            <td><label>@Model.PayeerAccount</label></td>
                                        </tr>
                                        <tr>
                                            <td><label>Банк:</label></td>
                                            <td><label>@Model.PayeerBankName</label></td>
                                        </tr>
                                        <tr>
                                            <td><label>Банк БИК:</label></td>
                                            <td><label>@Model.PayeerBankBIK</label></td>
                                        </tr>
                                        <tr>
                                            <td><label>Банк корр/счет:</label></td>
                                            <td><label>@Model.PayeerCorrAccount</label></td>
                                        </tr>
                                    </table>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(m => Model.Account)
                            </td>
                            <td>
                                @Html.TextBoxFor(m => Model.Account, (Model.StatusID == 4 && Model.Operation == 1) || @Model.Id == 0 ? (object)new { maxlength = "25" } : (object)new { disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.Account)
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                @if (@Model.Permissions[0].IsWrite)
                                {
                                    if ((@Model.StatusID == 4 && @Model.Operation == 1) || @Model.Id == 0)
                                    {
                                        <input type="submit" value="Записать" title="Сохранить набор реквизитов" onclick="EditSetOff();"/>
                                        if (@Model.Id != 0 && @Model.Operation == 1)
                                        {
                                            <input type="submit" value="Отменить" title="Перейти в режим просмотра текущего набора реквизитов" onclick="CancelEditSet();"/>
                                        }
                                    }
                                    if (@Model.StatusID == 2)
                                    {
                                        <input type="submit" value="Редактировать" title="Перейти в режим редактирования текущего набора реквизитов" onclick="EditSetOn();"/>
                                    }
                                }
                            </td>
                        </tr>
                    </table>
                </div>
            </td>
        </tr>
    </table>

}

<script type="text/javascript">
    $(document).ready(function () {
        setActiveMenuItem("moGpdRefDetail");
        $(":text").bind("keydown", function (e) { if (e.keyCode == 13) return false; });
        window.name = "ttt";

        //$("#Surname").keydown(function (e) { if (e.keyCode == 13) { if ($("#Operation").val() == 1) { this.form.submit(); } } });
        //$("#Surname").blur(function () { $("#Operation").val('1'); ; if ($("#PersonID").val() != 0) { this.form.submit(); } });

        $(function () {
            $("[data-autocomplete-source]").each(
                function () {
                    //EditSetOn();
                    var target = $(this);
                    target.autocomplete({ source: target.attr("data-autocomplete-source"),
                        select: function (event, ui) {
                            $("#Surname").val(ui.item.label);
                            $("#PersonID").val(ui.item.PersonID);
                            //$("#Operation").val('-1');
                            $("#Surname").focus();
                            return true;
                        }
                    });
                });
            });
       
    });

    function EditSetOn() {
        $("#StatusID").val('4');
        $("#Operation").val('1');
        return true;
    }
    function EditSetOff() {
        $("#StatusID").val('2');
        $("#Operation").val('1');
        return true;
    }
    function CancelEditSet() {
        $("#StatusID").val('3');
        $("#Operation").val('0');
        return true;
    }

    function CreateEditDetail() {
            createDetailDialog();
        }
    function createDetailDialog() {
        var elem = document.createElement('div');
        elem.id = "divDetailDialog";
        var newDiv = $(elem);
        var PayeeID = $("#PayeeID").val();
        var actionDetailDialogUrl = "@Url.Action("GpdRefDetailDialog", "GPD")";


        var title = "Создание реквизита получателя";
        $(newDiv).text('Подождите, идет загрузка данных ...');
        $.ajaxSetup({ cache: false });
        //var url = actionDepDialogUrl + '?parentId='+ parentId+'&level='+level;
        $(newDiv).load(actionDetailDialogUrl + "?id=" + PayeeID  + " #DetailForm"
            , function (response, status, xhr) {
                if (status == "error") {
                    var msg = "Произошла ошибка: ";
                    $(newDiv).html("<div style='color:Red'>" + msg + xhr.status + " " + xhr.statusText + "</div>");
                }
            }
        );
                $(newDiv).dialog(
        { // initialize dialog box
            autoOpen: false,
            modal: true,
            title: title,
            // fix IE6  
            bgiframe: true,
            draggable: false,
            resizable: false,
            width: 700,
            height: 500,
            close: function (event, ui) {
                $(this).dialog("destroy").remove();
            },
            buttons:
            {
                "OK": function () {
                    var newval = $("#DetailID").val();
                    $("#PayeeID").val(newval);
                    $("#PayeeID").change();
                    $(this).dialog("close");
                }
//                ,
//                "Отмена": function () {
//                    $(this).dialog("close");
//                }
            }
        });

        $(newDiv).dialog("open");

    }
    
    function AjaxFormRequest(result_id,form_id,url) {
        jQuery.ajax({
            url:     url, //Адрес подгружаемой страницы
            type:     "POST", //Тип запроса
            dataType: "html", //Тип данных
            data: jQuery("#"+form_id).serialize(), 
            success: function(response) { //Если все нормально
            document.getElementById(result_id).innerHTML = response;
                },
            error: function(response) { //Если ошибка
            document.getElementById(result_id).innerHTML = "Ошибка при отправке формы";
                }   
        });
    }
   
 </script>   

