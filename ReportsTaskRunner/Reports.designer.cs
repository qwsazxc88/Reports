#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportsTaskRunner
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WebAppTest")]
	public partial class ReportsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertDismissal(Dismissal instance);
    partial void UpdateDismissal(Dismissal instance);
    partial void DeleteDismissal(Dismissal instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertClearanceChecklistRoleRecords(ClearanceChecklistRoleRecords instance);
    partial void UpdateClearanceChecklistRoleRecords(ClearanceChecklistRoleRecords instance);
    partial void DeleteClearanceChecklistRoleRecords(ClearanceChecklistRoleRecords instance);
    partial void InsertClearanceChecklistRole(ClearanceChecklistRole instance);
    partial void UpdateClearanceChecklistRole(ClearanceChecklistRole instance);
    partial void DeleteClearanceChecklistRole(ClearanceChecklistRole instance);
    partial void InsertClearanceChecklistApproval(ClearanceChecklistApproval instance);
    partial void UpdateClearanceChecklistApproval(ClearanceChecklistApproval instance);
    partial void DeleteClearanceChecklistApproval(ClearanceChecklistApproval instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertSettings(Settings instance);
    partial void UpdateSettings(Settings instance);
    partial void DeleteSettings(Settings instance);
    partial void InsertEmploymentCandidate(EmploymentCandidate instance);
    partial void UpdateEmploymentCandidate(EmploymentCandidate instance);
    partial void DeleteEmploymentCandidate(EmploymentCandidate instance);
    partial void InsertPersonnelManagers(PersonnelManagers instance);
    partial void UpdatePersonnelManagers(PersonnelManagers instance);
    partial void DeletePersonnelManagers(PersonnelManagers instance);
    #endregion
		
		public ReportsDataContext() : 
				base(global::ReportsTaskRunner.Properties.Settings.Default.WebAppDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ReportsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Dismissal> Dismissal
		{
			get
			{
				return this.GetTable<Dismissal>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<ClearanceChecklistRoleRecords> ClearanceChecklistRoleRecords
		{
			get
			{
				return this.GetTable<ClearanceChecklistRoleRecords>();
			}
		}
		
		public System.Data.Linq.Table<ClearanceChecklistRole> ClearanceChecklistRole
		{
			get
			{
				return this.GetTable<ClearanceChecklistRole>();
			}
		}
		
		public System.Data.Linq.Table<ClearanceChecklistApproval> ClearanceChecklistApproval
		{
			get
			{
				return this.GetTable<ClearanceChecklistApproval>();
			}
		}
		
		public System.Data.Linq.Table<Department> Department
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Settings> Settings
		{
			get
			{
				return this.GetTable<Settings>();
			}
		}
		
		public System.Data.Linq.Table<EmploymentCandidate> EmploymentCandidate
		{
			get
			{
				return this.GetTable<EmploymentCandidate>();
			}
		}
		
		public System.Data.Linq.Table<PersonnelManagers> PersonnelManagers
		{
			get
			{
				return this.GetTable<PersonnelManagers>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dismissal")]
	public partial class Dismissal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Version;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _EndDate;
		
		private int _Number;
		
		private System.Nullable<int> _TypeId;
		
		private System.Nullable<decimal> _Compensation;
		
		private string _Reason;
		
		private int _UserId;
		
		private int _CreatorId;
		
		private System.Nullable<System.DateTime> _UserDateAccept;
		
		private System.Nullable<System.DateTime> _ManagerDateAccept;
		
		private System.Nullable<System.DateTime> _PersonnelManagerDateAccept;
		
		private System.Nullable<System.DateTime> _SendTo1C;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.Nullable<int> _TimesheetStatusId;
		
		private bool _DeleteAfterSendTo1C;
		
		private System.Nullable<decimal> _Reduction;
		
		private System.Nullable<int> _RegistryNumber;
		
		private System.Nullable<decimal> _PersonalIncomeTax;
		
		private string _OKTMO;
		
		private bool _IsOriginalReceived;
		
		private bool _IsPersonnelFileSentToArchive;
		
		private EntitySet<ClearanceChecklistApproval> _ClearanceChecklistApproval;
		
		private EntityRef<User> _Users;
		
		private EntityRef<User> _Users1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnTypeIdChanging(System.Nullable<int> value);
    partial void OnTypeIdChanged();
    partial void OnCompensationChanging(System.Nullable<decimal> value);
    partial void OnCompensationChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCreatorIdChanging(int value);
    partial void OnCreatorIdChanged();
    partial void OnUserDateAcceptChanging(System.Nullable<System.DateTime> value);
    partial void OnUserDateAcceptChanged();
    partial void OnManagerDateAcceptChanging(System.Nullable<System.DateTime> value);
    partial void OnManagerDateAcceptChanged();
    partial void OnPersonnelManagerDateAcceptChanging(System.Nullable<System.DateTime> value);
    partial void OnPersonnelManagerDateAcceptChanged();
    partial void OnSendTo1CChanging(System.Nullable<System.DateTime> value);
    partial void OnSendTo1CChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnTimesheetStatusIdChanging(System.Nullable<int> value);
    partial void OnTimesheetStatusIdChanged();
    partial void OnDeleteAfterSendTo1CChanging(bool value);
    partial void OnDeleteAfterSendTo1CChanged();
    partial void OnReductionChanging(System.Nullable<decimal> value);
    partial void OnReductionChanged();
    partial void OnRegistryNumberChanging(System.Nullable<int> value);
    partial void OnRegistryNumberChanged();
    partial void OnPersonalIncomeTaxChanging(System.Nullable<decimal> value);
    partial void OnPersonalIncomeTaxChanged();
    partial void OnOKTMOChanging(string value);
    partial void OnOKTMOChanged();
    partial void OnIsOriginalReceivedChanging(bool value);
    partial void OnIsOriginalReceivedChanged();
    partial void OnIsPersonnelFileSentToArchiveChanging(bool value);
    partial void OnIsPersonnelFileSentToArchiveChanged();
    #endregion
		
		public Dismissal()
		{
			this._ClearanceChecklistApproval = new EntitySet<ClearanceChecklistApproval>(new Action<ClearanceChecklistApproval>(this.attach_ClearanceChecklistApproval), new Action<ClearanceChecklistApproval>(this.detach_ClearanceChecklistApproval));
			this._Users = default(EntityRef<User>);
			this._Users1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compensation", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> Compensation
		{
			get
			{
				return this._Compensation;
			}
			set
			{
				if ((this._Compensation != value))
				{
					this.OnCompensationChanging(value);
					this.SendPropertyChanging();
					this._Compensation = value;
					this.SendPropertyChanged("Compensation");
					this.OnCompensationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(256)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Users1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorId", DbType="Int NOT NULL")]
		public int CreatorId
		{
			get
			{
				return this._CreatorId;
			}
			set
			{
				if ((this._CreatorId != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorIdChanging(value);
					this.SendPropertyChanging();
					this._CreatorId = value;
					this.SendPropertyChanged("CreatorId");
					this.OnCreatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDateAccept", DbType="DateTime")]
		public System.Nullable<System.DateTime> UserDateAccept
		{
			get
			{
				return this._UserDateAccept;
			}
			set
			{
				if ((this._UserDateAccept != value))
				{
					this.OnUserDateAcceptChanging(value);
					this.SendPropertyChanging();
					this._UserDateAccept = value;
					this.SendPropertyChanged("UserDateAccept");
					this.OnUserDateAcceptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerDateAccept", DbType="DateTime")]
		public System.Nullable<System.DateTime> ManagerDateAccept
		{
			get
			{
				return this._ManagerDateAccept;
			}
			set
			{
				if ((this._ManagerDateAccept != value))
				{
					this.OnManagerDateAcceptChanging(value);
					this.SendPropertyChanging();
					this._ManagerDateAccept = value;
					this.SendPropertyChanged("ManagerDateAccept");
					this.OnManagerDateAcceptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonnelManagerDateAccept", DbType="DateTime")]
		public System.Nullable<System.DateTime> PersonnelManagerDateAccept
		{
			get
			{
				return this._PersonnelManagerDateAccept;
			}
			set
			{
				if ((this._PersonnelManagerDateAccept != value))
				{
					this.OnPersonnelManagerDateAcceptChanging(value);
					this.SendPropertyChanging();
					this._PersonnelManagerDateAccept = value;
					this.SendPropertyChanged("PersonnelManagerDateAccept");
					this.OnPersonnelManagerDateAcceptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendTo1C", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendTo1C
		{
			get
			{
				return this._SendTo1C;
			}
			set
			{
				if ((this._SendTo1C != value))
				{
					this.OnSendTo1CChanging(value);
					this.SendPropertyChanging();
					this._SendTo1C = value;
					this.SendPropertyChanged("SendTo1C");
					this.OnSendTo1CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimesheetStatusId", DbType="Int")]
		public System.Nullable<int> TimesheetStatusId
		{
			get
			{
				return this._TimesheetStatusId;
			}
			set
			{
				if ((this._TimesheetStatusId != value))
				{
					this.OnTimesheetStatusIdChanging(value);
					this.SendPropertyChanging();
					this._TimesheetStatusId = value;
					this.SendPropertyChanged("TimesheetStatusId");
					this.OnTimesheetStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteAfterSendTo1C", DbType="Bit NOT NULL")]
		public bool DeleteAfterSendTo1C
		{
			get
			{
				return this._DeleteAfterSendTo1C;
			}
			set
			{
				if ((this._DeleteAfterSendTo1C != value))
				{
					this.OnDeleteAfterSendTo1CChanging(value);
					this.SendPropertyChanging();
					this._DeleteAfterSendTo1C = value;
					this.SendPropertyChanged("DeleteAfterSendTo1C");
					this.OnDeleteAfterSendTo1CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reduction", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> Reduction
		{
			get
			{
				return this._Reduction;
			}
			set
			{
				if ((this._Reduction != value))
				{
					this.OnReductionChanging(value);
					this.SendPropertyChanging();
					this._Reduction = value;
					this.SendPropertyChanged("Reduction");
					this.OnReductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistryNumber", DbType="Int")]
		public System.Nullable<int> RegistryNumber
		{
			get
			{
				return this._RegistryNumber;
			}
			set
			{
				if ((this._RegistryNumber != value))
				{
					this.OnRegistryNumberChanging(value);
					this.SendPropertyChanging();
					this._RegistryNumber = value;
					this.SendPropertyChanged("RegistryNumber");
					this.OnRegistryNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalIncomeTax", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> PersonalIncomeTax
		{
			get
			{
				return this._PersonalIncomeTax;
			}
			set
			{
				if ((this._PersonalIncomeTax != value))
				{
					this.OnPersonalIncomeTaxChanging(value);
					this.SendPropertyChanging();
					this._PersonalIncomeTax = value;
					this.SendPropertyChanged("PersonalIncomeTax");
					this.OnPersonalIncomeTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKTMO", DbType="NVarChar(8)")]
		public string OKTMO
		{
			get
			{
				return this._OKTMO;
			}
			set
			{
				if ((this._OKTMO != value))
				{
					this.OnOKTMOChanging(value);
					this.SendPropertyChanging();
					this._OKTMO = value;
					this.SendPropertyChanged("OKTMO");
					this.OnOKTMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOriginalReceived", DbType="Bit NOT NULL")]
		public bool IsOriginalReceived
		{
			get
			{
				return this._IsOriginalReceived;
			}
			set
			{
				if ((this._IsOriginalReceived != value))
				{
					this.OnIsOriginalReceivedChanging(value);
					this.SendPropertyChanging();
					this._IsOriginalReceived = value;
					this.SendPropertyChanged("IsOriginalReceived");
					this.OnIsOriginalReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPersonnelFileSentToArchive", DbType="Bit NOT NULL")]
		public bool IsPersonnelFileSentToArchive
		{
			get
			{
				return this._IsPersonnelFileSentToArchive;
			}
			set
			{
				if ((this._IsPersonnelFileSentToArchive != value))
				{
					this.OnIsPersonnelFileSentToArchiveChanging(value);
					this.SendPropertyChanging();
					this._IsPersonnelFileSentToArchive = value;
					this.SendPropertyChanged("IsPersonnelFileSentToArchive");
					this.OnIsPersonnelFileSentToArchiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dismissal_ClearanceChecklistApproval", Storage="_ClearanceChecklistApproval", ThisKey="Id", OtherKey="DismissalId")]
		public EntitySet<ClearanceChecklistApproval> ClearanceChecklistApproval
		{
			get
			{
				return this._ClearanceChecklistApproval;
			}
			set
			{
				this._ClearanceChecklistApproval.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Dismissal", Storage="_Users", ThisKey="CreatorId", OtherKey="Id", IsForeignKey=true)]
		public User Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				User previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Dismissal.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Dismissal.Add(this);
						this._CreatorId = value.Id;
					}
					else
					{
						this._CreatorId = default(int);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Dismissal1", Storage="_Users1", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._Users1.Entity;
			}
			set
			{
				User previousValue = this._Users1.Entity;
				if (((previousValue != value) 
							|| (this._Users1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users1.Entity = null;
						previousValue.Dismissal1.Remove(this);
					}
					this._Users1.Entity = value;
					if ((value != null))
					{
						value.Dismissal1.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClearanceChecklistApproval(ClearanceChecklistApproval entity)
		{
			this.SendPropertyChanging();
			entity.Dismissal = this;
		}
		
		private void detach_ClearanceChecklistApproval(ClearanceChecklistApproval entity)
		{
			this.SendPropertyChanging();
			entity.Dismissal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Version;
		
		private bool _IsFirstTimeLogin;
		
		private bool _IsActive;
		
		private bool _IsNew;
		
		private string _Login;
		
		private string _Password;
		
		private string _Code;
		
		private System.Nullable<System.DateTime> _DateAccept;
		
		private string _Name;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _DateRelease;
		
		private string _Comment;
		
		private int _RoleId;
		
		private System.Nullable<int> _ManagerId;
		
		private System.Nullable<int> _OrganizationId;
		
		private System.Nullable<int> _PositionId;
		
		private System.Nullable<int> _DepartmentId;
		
		private string _Cnilc;
		
		private string _LoginAd;
		
		private System.Nullable<decimal> _Rate;
		
		private bool _GivesCredit;
		
		private System.Nullable<int> _Level;
		
		private bool _IsMainManager;
		
		private System.Nullable<int> _Grade;
		
		private System.Nullable<bool> _ExperienceIn1C;
		
		private string _Address;
		
		private System.Nullable<bool> _IsFixedTermContract;
		
		private EntitySet<Dismissal> _Dismissal;
		
		private EntitySet<Dismissal> _Dismissal1;
		
		private EntitySet<User> _Users2;
		
		private EntitySet<ClearanceChecklistRoleRecords> _TargetUserClearanceChecklistRoleRecords;
		
		private EntitySet<ClearanceChecklistRoleRecords> _ClearanceChecklistRoleRecords;
		
		private EntitySet<ClearanceChecklistApproval> _ClearanceChecklistApproval;
		
		private EntitySet<EmploymentCandidate> _EmploymentCandidate;
		
		private EntitySet<EmploymentCandidate> _Candidate;
		
		private EntitySet<PersonnelManagers> _PersonnelManagers;
		
		private EntityRef<User> _Users1;
		
		private EntityRef<Department> _Department;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnIsFirstTimeLoginChanging(bool value);
    partial void OnIsFirstTimeLoginChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsNewChanging(bool value);
    partial void OnIsNewChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDateAcceptChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAcceptChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateReleaseChanging(System.Nullable<System.DateTime> value);
    partial void OnDateReleaseChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnManagerIdChanging(System.Nullable<int> value);
    partial void OnManagerIdChanged();
    partial void OnOrganizationIdChanging(System.Nullable<int> value);
    partial void OnOrganizationIdChanged();
    partial void OnPositionIdChanging(System.Nullable<int> value);
    partial void OnPositionIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<int> value);
    partial void OnDepartmentIdChanged();
    partial void OnCnilcChanging(string value);
    partial void OnCnilcChanged();
    partial void OnLoginAdChanging(string value);
    partial void OnLoginAdChanged();
    partial void OnRateChanging(System.Nullable<decimal> value);
    partial void OnRateChanged();
    partial void OnGivesCreditChanging(bool value);
    partial void OnGivesCreditChanged();
    partial void OnLevelChanging(System.Nullable<int> value);
    partial void OnLevelChanged();
    partial void OnIsMainManagerChanging(bool value);
    partial void OnIsMainManagerChanged();
    partial void OnGradeChanging(System.Nullable<int> value);
    partial void OnGradeChanged();
    partial void OnExperienceIn1CChanging(System.Nullable<bool> value);
    partial void OnExperienceIn1CChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIsFixedTermContractChanging(System.Nullable<bool> value);
    partial void OnIsFixedTermContractChanged();
    #endregion
		
		public User()
		{
			this._Dismissal = new EntitySet<Dismissal>(new Action<Dismissal>(this.attach_Dismissal), new Action<Dismissal>(this.detach_Dismissal));
			this._Dismissal1 = new EntitySet<Dismissal>(new Action<Dismissal>(this.attach_Dismissal1), new Action<Dismissal>(this.detach_Dismissal1));
			this._Users2 = new EntitySet<User>(new Action<User>(this.attach_Users2), new Action<User>(this.detach_Users2));
			this._TargetUserClearanceChecklistRoleRecords = new EntitySet<ClearanceChecklistRoleRecords>(new Action<ClearanceChecklistRoleRecords>(this.attach_TargetUserClearanceChecklistRoleRecords), new Action<ClearanceChecklistRoleRecords>(this.detach_TargetUserClearanceChecklistRoleRecords));
			this._ClearanceChecklistRoleRecords = new EntitySet<ClearanceChecklistRoleRecords>(new Action<ClearanceChecklistRoleRecords>(this.attach_ClearanceChecklistRoleRecords), new Action<ClearanceChecklistRoleRecords>(this.detach_ClearanceChecklistRoleRecords));
			this._ClearanceChecklistApproval = new EntitySet<ClearanceChecklistApproval>(new Action<ClearanceChecklistApproval>(this.attach_ClearanceChecklistApproval), new Action<ClearanceChecklistApproval>(this.detach_ClearanceChecklistApproval));
			this._EmploymentCandidate = new EntitySet<EmploymentCandidate>(new Action<EmploymentCandidate>(this.attach_EmploymentCandidate), new Action<EmploymentCandidate>(this.detach_EmploymentCandidate));
			this._Candidate = new EntitySet<EmploymentCandidate>(new Action<EmploymentCandidate>(this.attach_Candidate), new Action<EmploymentCandidate>(this.detach_Candidate));
			this._PersonnelManagers = new EntitySet<PersonnelManagers>(new Action<PersonnelManagers>(this.attach_PersonnelManagers), new Action<PersonnelManagers>(this.detach_PersonnelManagers));
			this._Users1 = default(EntityRef<User>);
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFirstTimeLogin", DbType="Bit NOT NULL")]
		public bool IsFirstTimeLogin
		{
			get
			{
				return this._IsFirstTimeLogin;
			}
			set
			{
				if ((this._IsFirstTimeLogin != value))
				{
					this.OnIsFirstTimeLoginChanging(value);
					this.SendPropertyChanging();
					this._IsFirstTimeLogin = value;
					this.SendPropertyChanged("IsFirstTimeLogin");
					this.OnIsFirstTimeLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNew", DbType="Bit NOT NULL")]
		public bool IsNew
		{
			get
			{
				return this._IsNew;
			}
			set
			{
				if ((this._IsNew != value))
				{
					this.OnIsNewChanging(value);
					this.SendPropertyChanging();
					this._IsNew = value;
					this.SendPropertyChanged("IsNew");
					this.OnIsNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(64)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(32)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAccept", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAccept
		{
			get
			{
				return this._DateAccept;
			}
			set
			{
				if ((this._DateAccept != value))
				{
					this.OnDateAcceptChanging(value);
					this.SendPropertyChanging();
					this._DateAccept = value;
					this.SendPropertyChanged("DateAccept");
					this.OnDateAcceptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(512)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRelease", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRelease
		{
			get
			{
				return this._DateRelease;
			}
			set
			{
				if ((this._DateRelease != value))
				{
					this.OnDateReleaseChanging(value);
					this.SendPropertyChanging();
					this._DateRelease = value;
					this.SendPropertyChanged("DateRelease");
					this.OnDateReleaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(512)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerId", DbType="Int")]
		public System.Nullable<int> ManagerId
		{
			get
			{
				return this._ManagerId;
			}
			set
			{
				if ((this._ManagerId != value))
				{
					if (this._Users1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ManagerId = value;
					this.SendPropertyChanged("ManagerId");
					this.OnManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="Int")]
		public System.Nullable<int> OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="Int")]
		public System.Nullable<int> PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int")]
		public System.Nullable<int> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cnilc", DbType="NVarChar(14)")]
		public string Cnilc
		{
			get
			{
				return this._Cnilc;
			}
			set
			{
				if ((this._Cnilc != value))
				{
					this.OnCnilcChanging(value);
					this.SendPropertyChanging();
					this._Cnilc = value;
					this.SendPropertyChanged("Cnilc");
					this.OnCnilcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginAd", DbType="NVarChar(32)")]
		public string LoginAd
		{
			get
			{
				return this._LoginAd;
			}
			set
			{
				if ((this._LoginAd != value))
				{
					this.OnLoginAdChanging(value);
					this.SendPropertyChanging();
					this._LoginAd = value;
					this.SendPropertyChanged("LoginAd");
					this.OnLoginAdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivesCredit", DbType="Bit NOT NULL")]
		public bool GivesCredit
		{
			get
			{
				return this._GivesCredit;
			}
			set
			{
				if ((this._GivesCredit != value))
				{
					this.OnGivesCreditChanging(value);
					this.SendPropertyChanging();
					this._GivesCredit = value;
					this.SendPropertyChanged("GivesCredit");
					this.OnGivesCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int")]
		public System.Nullable<int> Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMainManager", DbType="Bit NOT NULL")]
		public bool IsMainManager
		{
			get
			{
				return this._IsMainManager;
			}
			set
			{
				if ((this._IsMainManager != value))
				{
					this.OnIsMainManagerChanging(value);
					this.SendPropertyChanging();
					this._IsMainManager = value;
					this.SendPropertyChanged("IsMainManager");
					this.OnIsMainManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int")]
		public System.Nullable<int> Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExperienceIn1C", DbType="Bit")]
		public System.Nullable<bool> ExperienceIn1C
		{
			get
			{
				return this._ExperienceIn1C;
			}
			set
			{
				if ((this._ExperienceIn1C != value))
				{
					this.OnExperienceIn1CChanging(value);
					this.SendPropertyChanging();
					this._ExperienceIn1C = value;
					this.SendPropertyChanged("ExperienceIn1C");
					this.OnExperienceIn1CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(256)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFixedTermContract", DbType="Bit NULL")]
		public System.Nullable<bool> IsFixedTermContract
		{
			get
			{
				return this._IsFixedTermContract;
			}
			set
			{
				if ((this._IsFixedTermContract != value))
				{
					this.OnIsFixedTermContractChanging(value);
					this.SendPropertyChanging();
					this._IsFixedTermContract = value;
					this.SendPropertyChanged("IsFixedTermContract");
					this.OnIsFixedTermContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Dismissal", Storage="_Dismissal", ThisKey="Id", OtherKey="CreatorId")]
		public EntitySet<Dismissal> Dismissal
		{
			get
			{
				return this._Dismissal;
			}
			set
			{
				this._Dismissal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Dismissal1", Storage="_Dismissal1", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Dismissal> Dismissal1
		{
			get
			{
				return this._Dismissal1;
			}
			set
			{
				this._Dismissal1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User", Storage="_Users2", ThisKey="Id", OtherKey="ManagerId")]
		public EntitySet<User> User1
		{
			get
			{
				return this._Users2;
			}
			set
			{
				this._Users2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ClearanceChecklistRoleRecords", Storage="_TargetUserClearanceChecklistRoleRecords", ThisKey="Id", OtherKey="TargetUserId")]
		public EntitySet<ClearanceChecklistRoleRecords> TargetUserClearanceChecklistRoleRecords
		{
			get
			{
				return this._TargetUserClearanceChecklistRoleRecords;
			}
			set
			{
				this._TargetUserClearanceChecklistRoleRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ClearanceChecklistRoleRecords1", Storage="_ClearanceChecklistRoleRecords", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<ClearanceChecklistRoleRecords> ClearanceChecklistRoleRecords
		{
			get
			{
				return this._ClearanceChecklistRoleRecords;
			}
			set
			{
				this._ClearanceChecklistRoleRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ClearanceChecklistApproval", Storage="_ClearanceChecklistApproval", ThisKey="Id", OtherKey="ApprovedById")]
		public EntitySet<ClearanceChecklistApproval> ClearanceChecklistApproval
		{
			get
			{
				return this._ClearanceChecklistApproval;
			}
			set
			{
				this._ClearanceChecklistApproval.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EmploymentCandidate", Storage="_EmploymentCandidate", ThisKey="Id", OtherKey="AppointmentCreatorId")]
		public EntitySet<EmploymentCandidate> EmploymentCandidate
		{
			get
			{
				return this._EmploymentCandidate;
			}
			set
			{
				this._EmploymentCandidate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EmploymentCandidate1", Storage="_Candidate", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<EmploymentCandidate> Candidate
		{
			get
			{
				return this._Candidate;
			}
			set
			{
				this._Candidate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PersonnelManagers", Storage="_PersonnelManagers", ThisKey="Id", OtherKey="ApprovedByPersonnelManagerId")]
		public EntitySet<PersonnelManagers> PersonnelManagers
		{
			get
			{
				return this._PersonnelManagers;
			}
			set
			{
				this._PersonnelManagers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User", Storage="_Users1", ThisKey="ManagerId", OtherKey="Id", IsForeignKey=true)]
		public User Users1
		{
			get
			{
				return this._Users1.Entity;
			}
			set
			{
				User previousValue = this._Users1.Entity;
				if (((previousValue != value) 
							|| (this._Users1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users1.Entity = null;
						previousValue.User1.Remove(this);
					}
					this._Users1.Entity = value;
					if ((value != null))
					{
						value.User1.Add(this);
						this._ManagerId = value.Id;
					}
					else
					{
						this._ManagerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_User", Storage="_Department", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.User.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.User.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dismissal(Dismissal entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_Dismissal(Dismissal entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_Dismissal1(Dismissal entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Dismissal1(Dismissal entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Users2(User entity)
		{
			this.SendPropertyChanging();
			entity.Users1 = this;
		}
		
		private void detach_Users2(User entity)
		{
			this.SendPropertyChanging();
			entity.Users1 = null;
		}
		
		private void attach_TargetUserClearanceChecklistRoleRecords(ClearanceChecklistRoleRecords entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_TargetUserClearanceChecklistRoleRecords(ClearanceChecklistRoleRecords entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_ClearanceChecklistRoleRecords(ClearanceChecklistRoleRecords entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ClearanceChecklistRoleRecords(ClearanceChecklistRoleRecords entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ClearanceChecklistApproval(ClearanceChecklistApproval entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ClearanceChecklistApproval(ClearanceChecklistApproval entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_EmploymentCandidate(EmploymentCandidate entity)
		{
			this.SendPropertyChanging();
			entity.AppointmentCreator = this;
		}
		
		private void detach_EmploymentCandidate(EmploymentCandidate entity)
		{
			this.SendPropertyChanging();
			entity.AppointmentCreator = null;
		}
		
		private void attach_Candidate(EmploymentCandidate entity)
		{
			this.SendPropertyChanging();
			entity.CandidateUser = this;
		}
		
		private void detach_Candidate(EmploymentCandidate entity)
		{
			this.SendPropertyChanging();
			entity.CandidateUser = null;
		}
		
		private void attach_PersonnelManagers(PersonnelManagers entity)
		{
			this.SendPropertyChanging();
			entity.ApprovedByPersonnelManager = this;
		}
		
		private void detach_PersonnelManagers(PersonnelManagers entity)
		{
			this.SendPropertyChanging();
			entity.ApprovedByPersonnelManager = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClearanceChecklistRoleRecord")]
	public partial class ClearanceChecklistRoleRecords : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Version;
		
		private int _UserId;
		
		private int _RoleId;
		
		private System.Nullable<int> _TargetUserId;
		
		private System.Nullable<int> _TargetDepartmentId;
		
		private EntityRef<User> _Users;
		
		private EntityRef<User> _User;
		
		private EntityRef<ClearanceChecklistRole> _ClearanceChecklistRole;
		
		private EntityRef<Department> _Department;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnTargetUserIdChanging(System.Nullable<int> value);
    partial void OnTargetUserIdChanged();
    partial void OnTargetDepartmentIdChanging(System.Nullable<int> value);
    partial void OnTargetDepartmentIdChanged();
    #endregion
		
		public ClearanceChecklistRoleRecords()
		{
			this._Users = default(EntityRef<User>);
			this._User = default(EntityRef<User>);
			this._ClearanceChecklistRole = default(EntityRef<ClearanceChecklistRole>);
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._ClearanceChecklistRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetUserId", DbType="Int")]
		public System.Nullable<int> TargetUserId
		{
			get
			{
				return this._TargetUserId;
			}
			set
			{
				if ((this._TargetUserId != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetUserIdChanging(value);
					this.SendPropertyChanging();
					this._TargetUserId = value;
					this.SendPropertyChanged("TargetUserId");
					this.OnTargetUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDepartmentId", DbType="Int")]
		public System.Nullable<int> TargetDepartmentId
		{
			get
			{
				return this._TargetDepartmentId;
			}
			set
			{
				if ((this._TargetDepartmentId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._TargetDepartmentId = value;
					this.SendPropertyChanged("TargetDepartmentId");
					this.OnTargetDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ClearanceChecklistRoleRecords", Storage="_Users", ThisKey="TargetUserId", OtherKey="Id", IsForeignKey=true)]
		public User Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				User previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.TargetUserClearanceChecklistRoleRecords.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.TargetUserClearanceChecklistRoleRecords.Add(this);
						this._TargetUserId = value.Id;
					}
					else
					{
						this._TargetUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ClearanceChecklistRoleRecords1", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ClearanceChecklistRoleRecords.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ClearanceChecklistRoleRecords.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClearanceChecklistRole_ClearanceChecklistRoleRecords", Storage="_ClearanceChecklistRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public ClearanceChecklistRole ClearanceChecklistRole
		{
			get
			{
				return this._ClearanceChecklistRole.Entity;
			}
			set
			{
				ClearanceChecklistRole previousValue = this._ClearanceChecklistRole.Entity;
				if (((previousValue != value) 
							|| (this._ClearanceChecklistRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClearanceChecklistRole.Entity = null;
						previousValue.ClearanceChecklistRoleRecords.Remove(this);
					}
					this._ClearanceChecklistRole.Entity = value;
					if ((value != null))
					{
						value.ClearanceChecklistRoleRecords.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("ClearanceChecklistRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_ClearanceChecklistRoleRecords", Storage="_Department", ThisKey="TargetDepartmentId", OtherKey="Id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.ClearanceChecklistRoleRecords.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.ClearanceChecklistRoleRecords.Add(this);
						this._TargetDepartmentId = value.Id;
					}
					else
					{
						this._TargetDepartmentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClearanceChecklistRole")]
	public partial class ClearanceChecklistRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Version;
		
		private string _Code;
		
		private string _Description;
		
		private System.Nullable<int> _DaysForApproval;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<ClearanceChecklistRoleRecords> _ClearanceChecklistRoleRecords;
		
		private EntitySet<ClearanceChecklistApproval> _ClearanceChecklistApproval;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDaysForApprovalChanging(System.Nullable<int> value);
    partial void OnDaysForApprovalChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public ClearanceChecklistRole()
		{
			this._ClearanceChecklistRoleRecords = new EntitySet<ClearanceChecklistRoleRecords>(new Action<ClearanceChecklistRoleRecords>(this.attach_ClearanceChecklistRoleRecords), new Action<ClearanceChecklistRoleRecords>(this.detach_ClearanceChecklistRoleRecords));
			this._ClearanceChecklistApproval = new EntitySet<ClearanceChecklistApproval>(new Action<ClearanceChecklistApproval>(this.attach_ClearanceChecklistApproval), new Action<ClearanceChecklistApproval>(this.detach_ClearanceChecklistApproval));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(32)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysForApproval", DbType="Int")]
		public System.Nullable<int> DaysForApproval
		{
			get
			{
				return this._DaysForApproval;
			}
			set
			{
				if ((this._DaysForApproval != value))
				{
					this.OnDaysForApprovalChanging(value);
					this.SendPropertyChanging();
					this._DaysForApproval = value;
					this.SendPropertyChanged("DaysForApproval");
					this.OnDaysForApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClearanceChecklistRole_ClearanceChecklistRoleRecords", Storage="_ClearanceChecklistRoleRecords", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<ClearanceChecklistRoleRecords> ClearanceChecklistRoleRecords
		{
			get
			{
				return this._ClearanceChecklistRoleRecords;
			}
			set
			{
				this._ClearanceChecklistRoleRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClearanceChecklistRole_ClearanceChecklistApproval", Storage="_ClearanceChecklistApproval", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<ClearanceChecklistApproval> ClearanceChecklistApproval
		{
			get
			{
				return this._ClearanceChecklistApproval;
			}
			set
			{
				this._ClearanceChecklistApproval.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClearanceChecklistRoleRecords(ClearanceChecklistRoleRecords entity)
		{
			this.SendPropertyChanging();
			entity.ClearanceChecklistRole = this;
		}
		
		private void detach_ClearanceChecklistRoleRecords(ClearanceChecklistRoleRecords entity)
		{
			this.SendPropertyChanging();
			entity.ClearanceChecklistRole = null;
		}
		
		private void attach_ClearanceChecklistApproval(ClearanceChecklistApproval entity)
		{
			this.SendPropertyChanging();
			entity.ClearanceChecklistRole = this;
		}
		
		private void detach_ClearanceChecklistApproval(ClearanceChecklistApproval entity)
		{
			this.SendPropertyChanging();
			entity.ClearanceChecklistRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClearanceChecklistApproval")]
	public partial class ClearanceChecklistApproval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Version;
		
		private int _DismissalId;
		
		private int _RoleId;
		
		private System.Nullable<int> _ApprovedById;
		
		private System.Nullable<System.DateTime> _ApprovalDate;
		
		private string _Comment;
		
		private EntityRef<User> _User;
		
		private EntityRef<ClearanceChecklistRole> _ClearanceChecklistRole;
		
		private EntityRef<Dismissal> _Dismissal;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnDismissalIdChanging(int value);
    partial void OnDismissalIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnApprovedByIdChanging(System.Nullable<int> value);
    partial void OnApprovedByIdChanged();
    partial void OnApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public ClearanceChecklistApproval()
		{
			this._User = default(EntityRef<User>);
			this._ClearanceChecklistRole = default(EntityRef<ClearanceChecklistRole>);
			this._Dismissal = default(EntityRef<Dismissal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DismissalId", DbType="Int NOT NULL")]
		public int DismissalId
		{
			get
			{
				return this._DismissalId;
			}
			set
			{
				if ((this._DismissalId != value))
				{
					if (this._Dismissal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDismissalIdChanging(value);
					this.SendPropertyChanging();
					this._DismissalId = value;
					this.SendPropertyChanged("DismissalId");
					this.OnDismissalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._ClearanceChecklistRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="Int")]
		public System.Nullable<int> ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovalDate
		{
			get
			{
				return this._ApprovalDate;
			}
			set
			{
				if ((this._ApprovalDate != value))
				{
					this.OnApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDate = value;
					this.SendPropertyChanged("ApprovalDate");
					this.OnApprovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(256)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ClearanceChecklistApproval", Storage="_User", ThisKey="ApprovedById", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ClearanceChecklistApproval.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ClearanceChecklistApproval.Add(this);
						this._ApprovedById = value.Id;
					}
					else
					{
						this._ApprovedById = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClearanceChecklistRole_ClearanceChecklistApproval", Storage="_ClearanceChecklistRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public ClearanceChecklistRole ClearanceChecklistRole
		{
			get
			{
				return this._ClearanceChecklistRole.Entity;
			}
			set
			{
				ClearanceChecklistRole previousValue = this._ClearanceChecklistRole.Entity;
				if (((previousValue != value) 
							|| (this._ClearanceChecklistRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClearanceChecklistRole.Entity = null;
						previousValue.ClearanceChecklistApproval.Remove(this);
					}
					this._ClearanceChecklistRole.Entity = value;
					if ((value != null))
					{
						value.ClearanceChecklistApproval.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("ClearanceChecklistRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dismissal_ClearanceChecklistApproval", Storage="_Dismissal", ThisKey="DismissalId", OtherKey="Id", IsForeignKey=true)]
		public Dismissal Dismissal
		{
			get
			{
				return this._Dismissal.Entity;
			}
			set
			{
				Dismissal previousValue = this._Dismissal.Entity;
				if (((previousValue != value) 
							|| (this._Dismissal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dismissal.Entity = null;
						previousValue.ClearanceChecklistApproval.Remove(this);
					}
					this._Dismissal.Entity = value;
					if ((value != null))
					{
						value.ClearanceChecklistApproval.Add(this);
						this._DismissalId = value.Id;
					}
					else
					{
						this._DismissalId = default(int);
					}
					this.SendPropertyChanged("Dismissal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Version;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<int> _Code1C;
		
		private System.Nullable<int> _ParentId;
		
		private string _Path;
		
		private System.Nullable<int> _ItemLevel;
		
		private EntitySet<User> _User;
		
		private EntitySet<ClearanceChecklistRoleRecords> _ClearanceChecklistRoleRecords;
		
		private EntitySet<Department> _Department2;
		
		private EntityRef<Department> _Department1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCode1CChanging(System.Nullable<int> value);
    partial void OnCode1CChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnItemLevelChanging(System.Nullable<int> value);
    partial void OnItemLevelChanged();
    #endregion
		
		public Department()
		{
			this._User = new EntitySet<User>(new Action<User>(this.attach_User), new Action<User>(this.detach_User));
			this._ClearanceChecklistRoleRecords = new EntitySet<ClearanceChecklistRoleRecords>(new Action<ClearanceChecklistRoleRecords>(this.attach_ClearanceChecklistRoleRecords), new Action<ClearanceChecklistRoleRecords>(this.detach_ClearanceChecklistRoleRecords));
			this._Department2 = new EntitySet<Department>(new Action<Department>(this.attach_Department2), new Action<Department>(this.detach_Department2));
			this._Department1 = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code1C", DbType="Int")]
		public System.Nullable<int> Code1C
		{
			get
			{
				return this._Code1C;
			}
			set
			{
				if ((this._Code1C != value))
				{
					this.OnCode1CChanging(value);
					this.SendPropertyChanging();
					this._Code1C = value;
					this.SendPropertyChanged("Code1C");
					this.OnCode1CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(128)")]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemLevel", DbType="Int")]
		public System.Nullable<int> ItemLevel
		{
			get
			{
				return this._ItemLevel;
			}
			set
			{
				if ((this._ItemLevel != value))
				{
					this.OnItemLevelChanging(value);
					this.SendPropertyChanging();
					this._ItemLevel = value;
					this.SendPropertyChanged("ItemLevel");
					this.OnItemLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_User", Storage="_User", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<User> User
		{
			get
			{
				return this._User;
			}
			set
			{
				this._User.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_ClearanceChecklistRoleRecords", Storage="_ClearanceChecklistRoleRecords", ThisKey="Id", OtherKey="TargetDepartmentId")]
		public EntitySet<ClearanceChecklistRoleRecords> ClearanceChecklistRoleRecords
		{
			get
			{
				return this._ClearanceChecklistRoleRecords;
			}
			set
			{
				this._ClearanceChecklistRoleRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Department2", ThisKey="Code1C", OtherKey="ParentId")]
		public EntitySet<Department> Department2
		{
			get
			{
				return this._Department2;
			}
			set
			{
				this._Department2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Department1", ThisKey="ParentId", OtherKey="Code1C", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.Department2.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.Department2.Add(this);
						this._ParentId = value.Code1C;
					}
					else
					{
						this._ParentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_ClearanceChecklistRoleRecords(ClearanceChecklistRoleRecords entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_ClearanceChecklistRoleRecords(ClearanceChecklistRoleRecords entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Department2(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_Department2(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Settings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Version;
		
		private string _DownloadDictionaryFilePath;
		
		private string _UploadTimesheetFilePath;
		
		private System.DateTime _ReleaseEmployeeDeleteDate;
		
		private string _ExportImportEmail;
		
		private bool _SendEmailToManagerAboutNew;
		
		private string _NotificationEmail;
		
		private string _NotificationSmtp;
		
		private int _NotificationPort;
		
		private string _NotificationLogin;
		
		private string _NotificationPassword;
		
		private string _BillingEmail;
		
		private string _BillingSmtp;
		
		private int _BillingPort;
		
		private string _BillingLogin;
		
		private string _BillingPassword;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnDownloadDictionaryFilePathChanging(string value);
    partial void OnDownloadDictionaryFilePathChanged();
    partial void OnUploadTimesheetFilePathChanging(string value);
    partial void OnUploadTimesheetFilePathChanged();
    partial void OnReleaseEmployeeDeleteDateChanging(System.DateTime value);
    partial void OnReleaseEmployeeDeleteDateChanged();
    partial void OnExportImportEmailChanging(string value);
    partial void OnExportImportEmailChanged();
    partial void OnSendEmailToManagerAboutNewChanging(bool value);
    partial void OnSendEmailToManagerAboutNewChanged();
    partial void OnNotificationEmailChanging(string value);
    partial void OnNotificationEmailChanged();
    partial void OnNotificationSmtpChanging(string value);
    partial void OnNotificationSmtpChanged();
    partial void OnNotificationPortChanging(int value);
    partial void OnNotificationPortChanged();
    partial void OnNotificationLoginChanging(string value);
    partial void OnNotificationLoginChanged();
    partial void OnNotificationPasswordChanging(string value);
    partial void OnNotificationPasswordChanged();
    partial void OnBillingEmailChanging(string value);
    partial void OnBillingEmailChanged();
    partial void OnBillingSmtpChanging(string value);
    partial void OnBillingSmtpChanged();
    partial void OnBillingPortChanging(int value);
    partial void OnBillingPortChanged();
    partial void OnBillingLoginChanging(string value);
    partial void OnBillingLoginChanged();
    partial void OnBillingPasswordChanging(string value);
    partial void OnBillingPasswordChanged();
    #endregion
		
		public Settings()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadDictionaryFilePath", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string DownloadDictionaryFilePath
		{
			get
			{
				return this._DownloadDictionaryFilePath;
			}
			set
			{
				if ((this._DownloadDictionaryFilePath != value))
				{
					this.OnDownloadDictionaryFilePathChanging(value);
					this.SendPropertyChanging();
					this._DownloadDictionaryFilePath = value;
					this.SendPropertyChanged("DownloadDictionaryFilePath");
					this.OnDownloadDictionaryFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadTimesheetFilePath", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string UploadTimesheetFilePath
		{
			get
			{
				return this._UploadTimesheetFilePath;
			}
			set
			{
				if ((this._UploadTimesheetFilePath != value))
				{
					this.OnUploadTimesheetFilePathChanging(value);
					this.SendPropertyChanging();
					this._UploadTimesheetFilePath = value;
					this.SendPropertyChanged("UploadTimesheetFilePath");
					this.OnUploadTimesheetFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseEmployeeDeleteDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReleaseEmployeeDeleteDate
		{
			get
			{
				return this._ReleaseEmployeeDeleteDate;
			}
			set
			{
				if ((this._ReleaseEmployeeDeleteDate != value))
				{
					this.OnReleaseEmployeeDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._ReleaseEmployeeDeleteDate = value;
					this.SendPropertyChanged("ReleaseEmployeeDeleteDate");
					this.OnReleaseEmployeeDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportImportEmail", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string ExportImportEmail
		{
			get
			{
				return this._ExportImportEmail;
			}
			set
			{
				if ((this._ExportImportEmail != value))
				{
					this.OnExportImportEmailChanging(value);
					this.SendPropertyChanging();
					this._ExportImportEmail = value;
					this.SendPropertyChanged("ExportImportEmail");
					this.OnExportImportEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendEmailToManagerAboutNew", DbType="Bit NOT NULL")]
		public bool SendEmailToManagerAboutNew
		{
			get
			{
				return this._SendEmailToManagerAboutNew;
			}
			set
			{
				if ((this._SendEmailToManagerAboutNew != value))
				{
					this.OnSendEmailToManagerAboutNewChanging(value);
					this.SendPropertyChanging();
					this._SendEmailToManagerAboutNew = value;
					this.SendPropertyChanged("SendEmailToManagerAboutNew");
					this.OnSendEmailToManagerAboutNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationEmail", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string NotificationEmail
		{
			get
			{
				return this._NotificationEmail;
			}
			set
			{
				if ((this._NotificationEmail != value))
				{
					this.OnNotificationEmailChanging(value);
					this.SendPropertyChanging();
					this._NotificationEmail = value;
					this.SendPropertyChanged("NotificationEmail");
					this.OnNotificationEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationSmtp", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string NotificationSmtp
		{
			get
			{
				return this._NotificationSmtp;
			}
			set
			{
				if ((this._NotificationSmtp != value))
				{
					this.OnNotificationSmtpChanging(value);
					this.SendPropertyChanging();
					this._NotificationSmtp = value;
					this.SendPropertyChanged("NotificationSmtp");
					this.OnNotificationSmtpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationPort", DbType="Int NOT NULL")]
		public int NotificationPort
		{
			get
			{
				return this._NotificationPort;
			}
			set
			{
				if ((this._NotificationPort != value))
				{
					this.OnNotificationPortChanging(value);
					this.SendPropertyChanging();
					this._NotificationPort = value;
					this.SendPropertyChanged("NotificationPort");
					this.OnNotificationPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationLogin", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string NotificationLogin
		{
			get
			{
				return this._NotificationLogin;
			}
			set
			{
				if ((this._NotificationLogin != value))
				{
					this.OnNotificationLoginChanging(value);
					this.SendPropertyChanging();
					this._NotificationLogin = value;
					this.SendPropertyChanged("NotificationLogin");
					this.OnNotificationLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationPassword", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string NotificationPassword
		{
			get
			{
				return this._NotificationPassword;
			}
			set
			{
				if ((this._NotificationPassword != value))
				{
					this.OnNotificationPasswordChanging(value);
					this.SendPropertyChanging();
					this._NotificationPassword = value;
					this.SendPropertyChanged("NotificationPassword");
					this.OnNotificationPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingEmail", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string BillingEmail
		{
			get
			{
				return this._BillingEmail;
			}
			set
			{
				if ((this._BillingEmail != value))
				{
					this.OnBillingEmailChanging(value);
					this.SendPropertyChanging();
					this._BillingEmail = value;
					this.SendPropertyChanged("BillingEmail");
					this.OnBillingEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingSmtp", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string BillingSmtp
		{
			get
			{
				return this._BillingSmtp;
			}
			set
			{
				if ((this._BillingSmtp != value))
				{
					this.OnBillingSmtpChanging(value);
					this.SendPropertyChanging();
					this._BillingSmtp = value;
					this.SendPropertyChanged("BillingSmtp");
					this.OnBillingSmtpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingPort", DbType="Int NOT NULL")]
		public int BillingPort
		{
			get
			{
				return this._BillingPort;
			}
			set
			{
				if ((this._BillingPort != value))
				{
					this.OnBillingPortChanging(value);
					this.SendPropertyChanging();
					this._BillingPort = value;
					this.SendPropertyChanged("BillingPort");
					this.OnBillingPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingLogin", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string BillingLogin
		{
			get
			{
				return this._BillingLogin;
			}
			set
			{
				if ((this._BillingLogin != value))
				{
					this.OnBillingLoginChanging(value);
					this.SendPropertyChanging();
					this._BillingLogin = value;
					this.SendPropertyChanged("BillingLogin");
					this.OnBillingLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingPassword", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string BillingPassword
		{
			get
			{
				return this._BillingPassword;
			}
			set
			{
				if ((this._BillingPassword != value))
				{
					this.OnBillingPasswordChanging(value);
					this.SendPropertyChanging();
					this._BillingPassword = value;
					this.SendPropertyChanged("BillingPassword");
					this.OnBillingPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmploymentCandidate")]
	public partial class EmploymentCandidate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Version;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<int> _GeneralInfoId;
		
		private System.Nullable<int> _PassportId;
		
		private System.Nullable<int> _EducationId;
		
		private System.Nullable<int> _FamilyId;
		
		private System.Nullable<int> _MilitaryServiceId;
		
		private System.Nullable<int> _ExperienceId;
		
		private System.Nullable<int> _ContactsId;
		
		private System.Nullable<int> _BackgroundCheckId;
		
		private System.Nullable<int> _OnsiteTrainingId;
		
		private System.Nullable<int> _ManagersId;
		
		private System.Nullable<int> _PersonnelManagersId;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _QuestionnaireDate;
		
		private System.Nullable<int> _AppointmentCreatorId;
		
		private EntitySet<PersonnelManagers> _PersonnelManagers1;
		
		private EntityRef<User> _AppointmentCreator;
		
		private EntityRef<User> _CandidateUser;
		
		private EntityRef<PersonnelManagers> _PersonnelManagers;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnGeneralInfoIdChanging(System.Nullable<int> value);
    partial void OnGeneralInfoIdChanged();
    partial void OnPassportIdChanging(System.Nullable<int> value);
    partial void OnPassportIdChanged();
    partial void OnEducationIdChanging(System.Nullable<int> value);
    partial void OnEducationIdChanged();
    partial void OnFamilyIdChanging(System.Nullable<int> value);
    partial void OnFamilyIdChanged();
    partial void OnMilitaryServiceIdChanging(System.Nullable<int> value);
    partial void OnMilitaryServiceIdChanged();
    partial void OnExperienceIdChanging(System.Nullable<int> value);
    partial void OnExperienceIdChanged();
    partial void OnContactsIdChanging(System.Nullable<int> value);
    partial void OnContactsIdChanged();
    partial void OnBackgroundCheckIdChanging(System.Nullable<int> value);
    partial void OnBackgroundCheckIdChanged();
    partial void OnOnsiteTrainingIdChanging(System.Nullable<int> value);
    partial void OnOnsiteTrainingIdChanged();
    partial void OnManagersIdChanging(System.Nullable<int> value);
    partial void OnManagersIdChanged();
    partial void OnPersonnelManagersIdChanging(System.Nullable<int> value);
    partial void OnPersonnelManagersIdChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnQuestionnaireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQuestionnaireDateChanged();
    partial void OnAppointmentCreatorIdChanging(System.Nullable<int> value);
    partial void OnAppointmentCreatorIdChanged();
    #endregion
		
		public EmploymentCandidate()
		{
			this._PersonnelManagers1 = new EntitySet<PersonnelManagers>(new Action<PersonnelManagers>(this.attach_PersonnelManagers1), new Action<PersonnelManagers>(this.detach_PersonnelManagers1));
			this._AppointmentCreator = default(EntityRef<User>);
			this._CandidateUser = default(EntityRef<User>);
			this._PersonnelManagers = default(EntityRef<PersonnelManagers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._CandidateUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralInfoId", DbType="Int")]
		public System.Nullable<int> GeneralInfoId
		{
			get
			{
				return this._GeneralInfoId;
			}
			set
			{
				if ((this._GeneralInfoId != value))
				{
					this.OnGeneralInfoIdChanging(value);
					this.SendPropertyChanging();
					this._GeneralInfoId = value;
					this.SendPropertyChanged("GeneralInfoId");
					this.OnGeneralInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportId", DbType="Int")]
		public System.Nullable<int> PassportId
		{
			get
			{
				return this._PassportId;
			}
			set
			{
				if ((this._PassportId != value))
				{
					this.OnPassportIdChanging(value);
					this.SendPropertyChanging();
					this._PassportId = value;
					this.SendPropertyChanged("PassportId");
					this.OnPassportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationId", DbType="Int")]
		public System.Nullable<int> EducationId
		{
			get
			{
				return this._EducationId;
			}
			set
			{
				if ((this._EducationId != value))
				{
					this.OnEducationIdChanging(value);
					this.SendPropertyChanging();
					this._EducationId = value;
					this.SendPropertyChanged("EducationId");
					this.OnEducationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyId", DbType="Int")]
		public System.Nullable<int> FamilyId
		{
			get
			{
				return this._FamilyId;
			}
			set
			{
				if ((this._FamilyId != value))
				{
					this.OnFamilyIdChanging(value);
					this.SendPropertyChanging();
					this._FamilyId = value;
					this.SendPropertyChanged("FamilyId");
					this.OnFamilyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilitaryServiceId", DbType="Int")]
		public System.Nullable<int> MilitaryServiceId
		{
			get
			{
				return this._MilitaryServiceId;
			}
			set
			{
				if ((this._MilitaryServiceId != value))
				{
					this.OnMilitaryServiceIdChanging(value);
					this.SendPropertyChanging();
					this._MilitaryServiceId = value;
					this.SendPropertyChanged("MilitaryServiceId");
					this.OnMilitaryServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExperienceId", DbType="Int")]
		public System.Nullable<int> ExperienceId
		{
			get
			{
				return this._ExperienceId;
			}
			set
			{
				if ((this._ExperienceId != value))
				{
					this.OnExperienceIdChanging(value);
					this.SendPropertyChanging();
					this._ExperienceId = value;
					this.SendPropertyChanged("ExperienceId");
					this.OnExperienceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactsId", DbType="Int")]
		public System.Nullable<int> ContactsId
		{
			get
			{
				return this._ContactsId;
			}
			set
			{
				if ((this._ContactsId != value))
				{
					this.OnContactsIdChanging(value);
					this.SendPropertyChanging();
					this._ContactsId = value;
					this.SendPropertyChanged("ContactsId");
					this.OnContactsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundCheckId", DbType="Int")]
		public System.Nullable<int> BackgroundCheckId
		{
			get
			{
				return this._BackgroundCheckId;
			}
			set
			{
				if ((this._BackgroundCheckId != value))
				{
					this.OnBackgroundCheckIdChanging(value);
					this.SendPropertyChanging();
					this._BackgroundCheckId = value;
					this.SendPropertyChanged("BackgroundCheckId");
					this.OnBackgroundCheckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnsiteTrainingId", DbType="Int")]
		public System.Nullable<int> OnsiteTrainingId
		{
			get
			{
				return this._OnsiteTrainingId;
			}
			set
			{
				if ((this._OnsiteTrainingId != value))
				{
					this.OnOnsiteTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._OnsiteTrainingId = value;
					this.SendPropertyChanged("OnsiteTrainingId");
					this.OnOnsiteTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagersId", DbType="Int")]
		public System.Nullable<int> ManagersId
		{
			get
			{
				return this._ManagersId;
			}
			set
			{
				if ((this._ManagersId != value))
				{
					this.OnManagersIdChanging(value);
					this.SendPropertyChanging();
					this._ManagersId = value;
					this.SendPropertyChanged("ManagersId");
					this.OnManagersIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonnelManagersId", DbType="Int")]
		public System.Nullable<int> PersonnelManagersId
		{
			get
			{
				return this._PersonnelManagersId;
			}
			set
			{
				if ((this._PersonnelManagersId != value))
				{
					if (this._PersonnelManagers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonnelManagersIdChanging(value);
					this.SendPropertyChanging();
					this._PersonnelManagersId = value;
					this.SendPropertyChanged("PersonnelManagersId");
					this.OnPersonnelManagersIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionnaireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QuestionnaireDate
		{
			get
			{
				return this._QuestionnaireDate;
			}
			set
			{
				if ((this._QuestionnaireDate != value))
				{
					this.OnQuestionnaireDateChanging(value);
					this.SendPropertyChanging();
					this._QuestionnaireDate = value;
					this.SendPropertyChanged("QuestionnaireDate");
					this.OnQuestionnaireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppointmentCreatorId", DbType="Int")]
		public System.Nullable<int> AppointmentCreatorId
		{
			get
			{
				return this._AppointmentCreatorId;
			}
			set
			{
				if ((this._AppointmentCreatorId != value))
				{
					if (this._AppointmentCreator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppointmentCreatorIdChanging(value);
					this.SendPropertyChanging();
					this._AppointmentCreatorId = value;
					this.SendPropertyChanged("AppointmentCreatorId");
					this.OnAppointmentCreatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmploymentCandidate_PersonnelManagers", Storage="_PersonnelManagers1", ThisKey="Id", OtherKey="CandidateId")]
		public EntitySet<PersonnelManagers> PersonnelManagers1
		{
			get
			{
				return this._PersonnelManagers1;
			}
			set
			{
				this._PersonnelManagers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EmploymentCandidate", Storage="_AppointmentCreator", ThisKey="AppointmentCreatorId", OtherKey="Id", IsForeignKey=true)]
		public User AppointmentCreator
		{
			get
			{
				return this._AppointmentCreator.Entity;
			}
			set
			{
				User previousValue = this._AppointmentCreator.Entity;
				if (((previousValue != value) 
							|| (this._AppointmentCreator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppointmentCreator.Entity = null;
						previousValue.EmploymentCandidate.Remove(this);
					}
					this._AppointmentCreator.Entity = value;
					if ((value != null))
					{
						value.EmploymentCandidate.Add(this);
						this._AppointmentCreatorId = value.Id;
					}
					else
					{
						this._AppointmentCreatorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppointmentCreator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EmploymentCandidate1", Storage="_CandidateUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User CandidateUser
		{
			get
			{
				return this._CandidateUser.Entity;
			}
			set
			{
				User previousValue = this._CandidateUser.Entity;
				if (((previousValue != value) 
							|| (this._CandidateUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CandidateUser.Entity = null;
						previousValue.Candidate.Remove(this);
					}
					this._CandidateUser.Entity = value;
					if ((value != null))
					{
						value.Candidate.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CandidateUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonnelManagers_EmploymentCandidate", Storage="_PersonnelManagers", ThisKey="PersonnelManagersId", OtherKey="Id", IsForeignKey=true)]
		public PersonnelManagers PersonnelManagers
		{
			get
			{
				return this._PersonnelManagers.Entity;
			}
			set
			{
				PersonnelManagers previousValue = this._PersonnelManagers.Entity;
				if (((previousValue != value) 
							|| (this._PersonnelManagers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonnelManagers.Entity = null;
						previousValue.EmploymentCandidate.Remove(this);
					}
					this._PersonnelManagers.Entity = value;
					if ((value != null))
					{
						value.EmploymentCandidate.Add(this);
						this._PersonnelManagersId = value.Id;
					}
					else
					{
						this._PersonnelManagersId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PersonnelManagers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonnelManagers1(PersonnelManagers entity)
		{
			this.SendPropertyChanging();
			entity.Candidate = this;
		}
		
		private void detach_PersonnelManagers1(PersonnelManagers entity)
		{
			this.SendPropertyChanging();
			entity.Candidate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonnelManagers")]
	public partial class PersonnelManagers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Version;
		
		private System.Nullable<System.DateTime> _EmploymentOrderDate;
		
		private string _EmploymentOrderNumber;
		
		private System.Nullable<System.DateTime> _EmploymentDate;
		
		private System.Nullable<System.DateTime> _ContractDate;
		
		private string _ContractNumber;
		
		private System.Nullable<decimal> _NorthernAreaAddition;
		
		private System.Nullable<decimal> _AreaMultiplier;
		
		private System.Nullable<decimal> _AreaAddition;
		
		private System.Nullable<decimal> _TravelRelatedAddition;
		
		private System.Nullable<decimal> _CompetenceAddition;
		
		private System.Nullable<decimal> _FrontOfficeExperienceAddition;
		
		private System.Nullable<int> _InsurableExperienceYears;
		
		private System.Nullable<int> _InsurableExperienceMonths;
		
		private System.Nullable<int> _InsurableExperienceDays;
		
		private string _PersonalAccount;
		
		private int _CandidateId;
		
		private System.Nullable<int> _OverallExperienceYears;
		
		private System.Nullable<int> _OverallExperienceMonths;
		
		private System.Nullable<int> _OverallExperienceDays;
		
		private System.Nullable<int> _ApprovedByPersonnelManagerId;
		
		private System.Nullable<int> _AccessGroupId;
		
		private System.Nullable<int> _PersonalAccountContractorId;
		
		private System.Nullable<System.DateTime> _ContractEndDate;
		
		private EntitySet<EmploymentCandidate> _EmploymentCandidate;
		
		private EntityRef<User> _ApprovedByPersonnelManager;
		
		private EntityRef<EmploymentCandidate> _Candidate;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnEmploymentOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEmploymentOrderDateChanged();
    partial void OnEmploymentOrderNumberChanging(string value);
    partial void OnEmploymentOrderNumberChanged();
    partial void OnEmploymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEmploymentDateChanged();
    partial void OnContractDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContractDateChanged();
    partial void OnContractNumberChanging(string value);
    partial void OnContractNumberChanged();
    partial void OnNorthernAreaAdditionChanging(System.Nullable<decimal> value);
    partial void OnNorthernAreaAdditionChanged();
    partial void OnAreaMultiplierChanging(System.Nullable<decimal> value);
    partial void OnAreaMultiplierChanged();
    partial void OnAreaAdditionChanging(System.Nullable<decimal> value);
    partial void OnAreaAdditionChanged();
    partial void OnTravelRelatedAdditionChanging(System.Nullable<decimal> value);
    partial void OnTravelRelatedAdditionChanged();
    partial void OnCompetenceAdditionChanging(System.Nullable<decimal> value);
    partial void OnCompetenceAdditionChanged();
    partial void OnFrontOfficeExperienceAdditionChanging(System.Nullable<decimal> value);
    partial void OnFrontOfficeExperienceAdditionChanged();
    partial void OnInsurableExperienceYearsChanging(System.Nullable<int> value);
    partial void OnInsurableExperienceYearsChanged();
    partial void OnInsurableExperienceMonthsChanging(System.Nullable<int> value);
    partial void OnInsurableExperienceMonthsChanged();
    partial void OnInsurableExperienceDaysChanging(System.Nullable<int> value);
    partial void OnInsurableExperienceDaysChanged();
    partial void OnPersonalAccountChanging(string value);
    partial void OnPersonalAccountChanged();
    partial void OnCandidateIdChanging(int value);
    partial void OnCandidateIdChanged();
    partial void OnOverallExperienceYearsChanging(System.Nullable<int> value);
    partial void OnOverallExperienceYearsChanged();
    partial void OnOverallExperienceMonthsChanging(System.Nullable<int> value);
    partial void OnOverallExperienceMonthsChanged();
    partial void OnOverallExperienceDaysChanging(System.Nullable<int> value);
    partial void OnOverallExperienceDaysChanged();
    partial void OnApprovedByPersonnelManagerIdChanging(System.Nullable<int> value);
    partial void OnApprovedByPersonnelManagerIdChanged();
    partial void OnAccessGroupIdChanging(System.Nullable<int> value);
    partial void OnAccessGroupIdChanged();
    partial void OnPersonalAccountContractorIdChanging(System.Nullable<int> value);
    partial void OnPersonalAccountContractorIdChanged();
    partial void OnContractEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContractEndDateChanged();
    #endregion
		
		public PersonnelManagers()
		{
			this._EmploymentCandidate = new EntitySet<EmploymentCandidate>(new Action<EmploymentCandidate>(this.attach_EmploymentCandidate), new Action<EmploymentCandidate>(this.detach_EmploymentCandidate));
			this._ApprovedByPersonnelManager = default(EntityRef<User>);
			this._Candidate = default(EntityRef<EmploymentCandidate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentOrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EmploymentOrderDate
		{
			get
			{
				return this._EmploymentOrderDate;
			}
			set
			{
				if ((this._EmploymentOrderDate != value))
				{
					this.OnEmploymentOrderDateChanging(value);
					this.SendPropertyChanging();
					this._EmploymentOrderDate = value;
					this.SendPropertyChanged("EmploymentOrderDate");
					this.OnEmploymentOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentOrderNumber", DbType="NVarChar(20)")]
		public string EmploymentOrderNumber
		{
			get
			{
				return this._EmploymentOrderNumber;
			}
			set
			{
				if ((this._EmploymentOrderNumber != value))
				{
					this.OnEmploymentOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._EmploymentOrderNumber = value;
					this.SendPropertyChanged("EmploymentOrderNumber");
					this.OnEmploymentOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EmploymentDate
		{
			get
			{
				return this._EmploymentDate;
			}
			set
			{
				if ((this._EmploymentDate != value))
				{
					this.OnEmploymentDateChanging(value);
					this.SendPropertyChanging();
					this._EmploymentDate = value;
					this.SendPropertyChanged("EmploymentDate");
					this.OnEmploymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ContractDate
		{
			get
			{
				return this._ContractDate;
			}
			set
			{
				if ((this._ContractDate != value))
				{
					this.OnContractDateChanging(value);
					this.SendPropertyChanging();
					this._ContractDate = value;
					this.SendPropertyChanged("ContractDate");
					this.OnContractDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNumber", DbType="NVarChar(20)")]
		public string ContractNumber
		{
			get
			{
				return this._ContractNumber;
			}
			set
			{
				if ((this._ContractNumber != value))
				{
					this.OnContractNumberChanging(value);
					this.SendPropertyChanging();
					this._ContractNumber = value;
					this.SendPropertyChanged("ContractNumber");
					this.OnContractNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NorthernAreaAddition", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> NorthernAreaAddition
		{
			get
			{
				return this._NorthernAreaAddition;
			}
			set
			{
				if ((this._NorthernAreaAddition != value))
				{
					this.OnNorthernAreaAdditionChanging(value);
					this.SendPropertyChanging();
					this._NorthernAreaAddition = value;
					this.SendPropertyChanged("NorthernAreaAddition");
					this.OnNorthernAreaAdditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaMultiplier", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> AreaMultiplier
		{
			get
			{
				return this._AreaMultiplier;
			}
			set
			{
				if ((this._AreaMultiplier != value))
				{
					this.OnAreaMultiplierChanging(value);
					this.SendPropertyChanging();
					this._AreaMultiplier = value;
					this.SendPropertyChanged("AreaMultiplier");
					this.OnAreaMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaAddition", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> AreaAddition
		{
			get
			{
				return this._AreaAddition;
			}
			set
			{
				if ((this._AreaAddition != value))
				{
					this.OnAreaAdditionChanging(value);
					this.SendPropertyChanging();
					this._AreaAddition = value;
					this.SendPropertyChanged("AreaAddition");
					this.OnAreaAdditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelRelatedAddition", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> TravelRelatedAddition
		{
			get
			{
				return this._TravelRelatedAddition;
			}
			set
			{
				if ((this._TravelRelatedAddition != value))
				{
					this.OnTravelRelatedAdditionChanging(value);
					this.SendPropertyChanging();
					this._TravelRelatedAddition = value;
					this.SendPropertyChanged("TravelRelatedAddition");
					this.OnTravelRelatedAdditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetenceAddition", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> CompetenceAddition
		{
			get
			{
				return this._CompetenceAddition;
			}
			set
			{
				if ((this._CompetenceAddition != value))
				{
					this.OnCompetenceAdditionChanging(value);
					this.SendPropertyChanging();
					this._CompetenceAddition = value;
					this.SendPropertyChanged("CompetenceAddition");
					this.OnCompetenceAdditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrontOfficeExperienceAddition", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> FrontOfficeExperienceAddition
		{
			get
			{
				return this._FrontOfficeExperienceAddition;
			}
			set
			{
				if ((this._FrontOfficeExperienceAddition != value))
				{
					this.OnFrontOfficeExperienceAdditionChanging(value);
					this.SendPropertyChanging();
					this._FrontOfficeExperienceAddition = value;
					this.SendPropertyChanged("FrontOfficeExperienceAddition");
					this.OnFrontOfficeExperienceAdditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsurableExperienceYears", DbType="Int")]
		public System.Nullable<int> InsurableExperienceYears
		{
			get
			{
				return this._InsurableExperienceYears;
			}
			set
			{
				if ((this._InsurableExperienceYears != value))
				{
					this.OnInsurableExperienceYearsChanging(value);
					this.SendPropertyChanging();
					this._InsurableExperienceYears = value;
					this.SendPropertyChanged("InsurableExperienceYears");
					this.OnInsurableExperienceYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsurableExperienceMonths", DbType="Int")]
		public System.Nullable<int> InsurableExperienceMonths
		{
			get
			{
				return this._InsurableExperienceMonths;
			}
			set
			{
				if ((this._InsurableExperienceMonths != value))
				{
					this.OnInsurableExperienceMonthsChanging(value);
					this.SendPropertyChanging();
					this._InsurableExperienceMonths = value;
					this.SendPropertyChanged("InsurableExperienceMonths");
					this.OnInsurableExperienceMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsurableExperienceDays", DbType="Int")]
		public System.Nullable<int> InsurableExperienceDays
		{
			get
			{
				return this._InsurableExperienceDays;
			}
			set
			{
				if ((this._InsurableExperienceDays != value))
				{
					this.OnInsurableExperienceDaysChanging(value);
					this.SendPropertyChanging();
					this._InsurableExperienceDays = value;
					this.SendPropertyChanged("InsurableExperienceDays");
					this.OnInsurableExperienceDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalAccount", DbType="NVarChar(23)")]
		public string PersonalAccount
		{
			get
			{
				return this._PersonalAccount;
			}
			set
			{
				if ((this._PersonalAccount != value))
				{
					this.OnPersonalAccountChanging(value);
					this.SendPropertyChanging();
					this._PersonalAccount = value;
					this.SendPropertyChanged("PersonalAccount");
					this.OnPersonalAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateId", DbType="Int NOT NULL")]
		public int CandidateId
		{
			get
			{
				return this._CandidateId;
			}
			set
			{
				if ((this._CandidateId != value))
				{
					if (this._Candidate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCandidateIdChanging(value);
					this.SendPropertyChanging();
					this._CandidateId = value;
					this.SendPropertyChanged("CandidateId");
					this.OnCandidateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverallExperienceYears", DbType="Int")]
		public System.Nullable<int> OverallExperienceYears
		{
			get
			{
				return this._OverallExperienceYears;
			}
			set
			{
				if ((this._OverallExperienceYears != value))
				{
					this.OnOverallExperienceYearsChanging(value);
					this.SendPropertyChanging();
					this._OverallExperienceYears = value;
					this.SendPropertyChanged("OverallExperienceYears");
					this.OnOverallExperienceYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverallExperienceMonths", DbType="Int")]
		public System.Nullable<int> OverallExperienceMonths
		{
			get
			{
				return this._OverallExperienceMonths;
			}
			set
			{
				if ((this._OverallExperienceMonths != value))
				{
					this.OnOverallExperienceMonthsChanging(value);
					this.SendPropertyChanging();
					this._OverallExperienceMonths = value;
					this.SendPropertyChanged("OverallExperienceMonths");
					this.OnOverallExperienceMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverallExperienceDays", DbType="Int")]
		public System.Nullable<int> OverallExperienceDays
		{
			get
			{
				return this._OverallExperienceDays;
			}
			set
			{
				if ((this._OverallExperienceDays != value))
				{
					this.OnOverallExperienceDaysChanging(value);
					this.SendPropertyChanging();
					this._OverallExperienceDays = value;
					this.SendPropertyChanged("OverallExperienceDays");
					this.OnOverallExperienceDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedByPersonnelManagerId", DbType="Int")]
		public System.Nullable<int> ApprovedByPersonnelManagerId
		{
			get
			{
				return this._ApprovedByPersonnelManagerId;
			}
			set
			{
				if ((this._ApprovedByPersonnelManagerId != value))
				{
					if (this._ApprovedByPersonnelManager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByPersonnelManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedByPersonnelManagerId = value;
					this.SendPropertyChanged("ApprovedByPersonnelManagerId");
					this.OnApprovedByPersonnelManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessGroupId", DbType="Int")]
		public System.Nullable<int> AccessGroupId
		{
			get
			{
				return this._AccessGroupId;
			}
			set
			{
				if ((this._AccessGroupId != value))
				{
					this.OnAccessGroupIdChanging(value);
					this.SendPropertyChanging();
					this._AccessGroupId = value;
					this.SendPropertyChanged("AccessGroupId");
					this.OnAccessGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalAccountContractorId", DbType="Int")]
		public System.Nullable<int> PersonalAccountContractorId
		{
			get
			{
				return this._PersonalAccountContractorId;
			}
			set
			{
				if ((this._PersonalAccountContractorId != value))
				{
					this.OnPersonalAccountContractorIdChanging(value);
					this.SendPropertyChanging();
					this._PersonalAccountContractorId = value;
					this.SendPropertyChanged("PersonalAccountContractorId");
					this.OnPersonalAccountContractorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ContractEndDate
		{
			get
			{
				return this._ContractEndDate;
			}
			set
			{
				if ((this._ContractEndDate != value))
				{
					this.OnContractEndDateChanging(value);
					this.SendPropertyChanging();
					this._ContractEndDate = value;
					this.SendPropertyChanged("ContractEndDate");
					this.OnContractEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonnelManagers_EmploymentCandidate", Storage="_EmploymentCandidate", ThisKey="Id", OtherKey="PersonnelManagersId")]
		public EntitySet<EmploymentCandidate> EmploymentCandidate
		{
			get
			{
				return this._EmploymentCandidate;
			}
			set
			{
				this._EmploymentCandidate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PersonnelManagers", Storage="_ApprovedByPersonnelManager", ThisKey="ApprovedByPersonnelManagerId", OtherKey="Id", IsForeignKey=true)]
		public User ApprovedByPersonnelManager
		{
			get
			{
				return this._ApprovedByPersonnelManager.Entity;
			}
			set
			{
				User previousValue = this._ApprovedByPersonnelManager.Entity;
				if (((previousValue != value) 
							|| (this._ApprovedByPersonnelManager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApprovedByPersonnelManager.Entity = null;
						previousValue.PersonnelManagers.Remove(this);
					}
					this._ApprovedByPersonnelManager.Entity = value;
					if ((value != null))
					{
						value.PersonnelManagers.Add(this);
						this._ApprovedByPersonnelManagerId = value.Id;
					}
					else
					{
						this._ApprovedByPersonnelManagerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ApprovedByPersonnelManager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmploymentCandidate_PersonnelManagers", Storage="_Candidate", ThisKey="CandidateId", OtherKey="Id", IsForeignKey=true)]
		public EmploymentCandidate Candidate
		{
			get
			{
				return this._Candidate.Entity;
			}
			set
			{
				EmploymentCandidate previousValue = this._Candidate.Entity;
				if (((previousValue != value) 
							|| (this._Candidate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Candidate.Entity = null;
						previousValue.PersonnelManagers1.Remove(this);
					}
					this._Candidate.Entity = value;
					if ((value != null))
					{
						value.PersonnelManagers1.Add(this);
						this._CandidateId = value.Id;
					}
					else
					{
						this._CandidateId = default(int);
					}
					this.SendPropertyChanged("Candidate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmploymentCandidate(EmploymentCandidate entity)
		{
			this.SendPropertyChanging();
			entity.PersonnelManagers = this;
		}
		
		private void detach_EmploymentCandidate(EmploymentCandidate entity)
		{
			this.SendPropertyChanging();
			entity.PersonnelManagers = null;
		}
	}
}
#pragma warning restore 1591
